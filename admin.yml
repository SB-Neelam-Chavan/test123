openapi: 3.1.0
x-stoplight:
  id: duf4tcrf9x75z
servers:
  - url: 'https://sandbox.skaleet.com/api/v2/admin'
    description: Skaleet sandbox environment.
info:
  title: Admin API
  description: |-
    Admin API |  | 
    ---------|----------|
     User | **Back-Office (Administrator)** |
     Use cases Examples |**Adjustments**<br>- Initiate adjustments<br>- Decide on adjustment execution<br>**Administrator**<br>- Search administrators<br>**Identity Management**<br>- Create identities<br>- Update identities<br>- Manage identities lifecycle<br>- Manage identities recipient<br>**Audit**<br>- Search audit records<br>**Cards Management**<br/>- Create cards<br/>- Manage cards lifecycle<br/>- Manage cards features<br/>**Device Management**<br>- Create devices<br>- Search devices<br/>- Update devices<br>**Document Management**<br>- Configure and manage document type<br>- Configure and manage document packages<br>- Manage association of a document type to a document package<br>- Manage identities document<br>**Job Management**<br>- Run jobs<br>- Get job progression and output<br>**Means of Payment**<br>- Search SEPA instructions<br>- Get instruction detail<br>**Profiles**<br>- Search profiles<br>- Search pricing profiles<br>- Retrieve KYC requirements<br>**Reports**<br>- Retrieve accounting reports<br>**Scoring**<br>- Configure scorings<br>- Manage users scores<br>**SMS**<br>- Search SMS<br>- Send SMS<br>**Transactions**<br>- Search operations type<br>- Search transactions<br>**Expense tracking**<br>- Get spendings linked to a transaction<br>- Get attachment linked to a transaction<br>**Webhook**<br>- Search webhooks|

    A back-office, also known as an administrator, is a member of the financial institution who operates on the platform to fulfil their duties.

    To use this API, you may create or reuse an admin. Each administrator is attached to an habilitation profile which defines their rights and permissions. The habilitation profile configuration of this user will impact the authorization to endpoints.

    API keys are generated by the back-office through their web portal. When creating or editing the API key, the back-office can specify the scopes available for this key, determining whether access to specific endpoints is authorized or not.
  version: 2.4.3
  contact:
    name: Skaleet
    url: 'https://www.skaleet.com/en/'
    email: api@skaleet.com
  license:
    name: Proprietary
    url: 'https://www.skaleet.com/'
tags:
  - name: Adjustments
  - name: Administrators
  - name: Agents
  - name: Audit
  - name: Autocomplete
  - name: Borrowers
  - name: Cards
  - name: Clients
  - name: Devices
  - name: Distributors
  - name: Document Configuration
  - name: Documents
  - name: Documents management
  - name: External System Monitoring
  - name: Identities
  - name: Job
  - name: KYC
  - name: Loans
  - name: MeansOfPayment
  - name: Merchants
  - name: Operations
  - name: PricingProfiles
  - name: Products
  - name: Profiles
  - name: Reports
  - name: Scoring
  - name: Search Sms
  - name: Sms
  - name: Terms
  - name: Transactions
  - name: Webhooks
security:
  - OAuth2: []
paths:
  '/heartbeat/{externalSystemId}':
    parameters:
      - in: path
        required: true
        name: externalSystemId
        schema:
          type: string
          example: my-external-service
          description: 'Configured external system id, that should be associated with current Api Key'
    post:
      security:
        - OAuth2: []
      tags:
        - External System Monitoring
      summary: Heartbeat
      description: To send notifications on the status of a tier service
      operationId: HeartbeatExternalService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  default: ALIVE
                  enum:
                    - ALIVE
                    - WARNING
                    - ALERT
                value:
                  type: integer
                  description: custom metric value
                  example: 124
      responses:
        '201':
          description: OK
        '400':
          description: Request body invalid
        '403':
          description: 'System {externalServiceId} is not found or current Api Key is not authorized'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: iqfnq2eghq7rk
  /sms:
    post:
      security:
        - OAuth2: []
      tags:
        - Sms
      summary: Sms
      operationId: SendSms
      description: |
        Send a sms
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsRequest'
      responses:
        '201':
          description: Sms has been sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: qa6uqq9duc57g
  /documents:
    post:
      security:
        - OAuth2:
            - identity_documents_management
        - OAuth2:
            - documents_management
      tags:
        - Documents management
      summary: Send a document
      operationId: CreateDocument
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
      responses:
        '201':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ip8rms5clgylm
  '/documents/{documentId}':
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
        - OAuth2:
            - documents_view
      tags:
        - Documents management
      summary: Retrieve a document
      operationId: GetDocument
      responses:
        '200':
          description: Example response (Status 200)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: 5ez8jnh7sy4wy
  '/documents/{documentId}/content':
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
        - OAuth2:
            - documents_view
      tags:
        - Documents management
      summary: Retrieve a document's content
      operationId: GetDocumentContent
      responses:
        '200':
          description: The document content
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: ba8v54m6wfh4w
  '/documents/{documentId}/preview':
    parameters:
      - name: documentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
    get:
      security:
        - OAuth2:
            - identity_documents_view
        - OAuth2:
            - documents_view
      tags:
        - Documents management
      summary: 'Retrieve a document''s preview content, with a max width of 200px'
      operationId: GetDocumentPreview
      responses:
        '200':
          description: The document's preview content
        '404':
          description: Document not found with this ID
      x-stoplight:
        id: zcmt4qh9w1s90
  '/identities/{identityId}/documents':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    get:
      security:
        - OAuth2:
            - identity_document_view
        - OAuth2:
            - documents_view
      tags:
        - Documents management
      summary: List user's documents
      operationId: SearchDocument
      responses:
        '200':
          description: Identity's documents list is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentCollection'
        '404':
          description: Identity not found with this ID
      x-stoplight:
        id: ricakvfknb2ek
  '/tagpay/adjustment/{id}':
    parameters:
      - name: id
        in: path
        description: ID of adjustment
        required: true
        schema:
          type: integer
          format: int64
    get:
      security:
        - OAuth2:
            - AdjustmentView
      tags:
        - Adjustments
      summary: Load given adjustment
      operationId: loadAdjustmentById
      responses:
        '200':
          description: adjustment response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Adjustment'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: spi1ni6eqj0k9
    patch:
      security:
        - OAuth2:
            - AdjustmentUpdate
      tags:
        - Adjustments
      summary: Validate or refuse an adjustment
      operationId: updateAdjustment
      requestBody:
        description: |
          Validate or Refuse Adjustment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustmentUpdateRequest'
      responses:
        '200':
          description: Adjustment update response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Adjustment'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: q66zblt25qnnf
    delete:
      security:
        - OAuth2:
            - AdjustmentCancel
      tags:
        - Adjustments
      summary: Cancel an adjustment
      operationId: cancelAdjustment
      requestBody:
        description: |
          Cancel Adjustment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustmentCancelRequest'
      responses:
        '200':
          description: Adjustment cancel response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Adjustment'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: kucn34vluvd6a
  /tagpay/adjustment:
    get:
      security:
        - OAuth2:
            - AdjustmentView
      summary: Fetch all adjusments
      operationId: fetchAllAdjustments
      parameters:
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/SearchRequest'
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * id: `NumberCriteria` Adjustment Reference
              * makerName: `StringCriteria` Adjustment Maker Login Name
              * dateTime: `DateTimeCriteria` Adjustment Creation Date (Maker)
              * sourceRole: `EnumCriteria` Adjustment Source Role
              * sourceLogin: `StringCriteria` Adjustment Source Login
              * sourceAccountType: `EnumCriteria` Adjustment Source Account Type
              * destinationRole: `EnumCriteria` Adjustment Destination Role
              * destinationLogin: `StringCriteria` Adjustment Destination Login
              * destinationAccountType: `StringCriteria` Adjustment Destination Account Type
              * amount : `AmountCriteria` Adjustment amount
              * state : `EnumCriteria` Adjustment State
              * makeTransactionId : `NumberCriteria` Adjustment Fund Reservation Ref. (Maker)
              * checkTransactionId : `NumberCriteria` Adjustment Transaction Ref. (Checker)
              * reason : `StringCriteria` Adjustment Reason Type
              * reconciliationReference : `StringCriteria` Adjustment reconciliation reference
              * externalReference : `StringCriteria` Adjustment external reference
      tags:
        - Adjustments
      responses:
        '200':
          description: An array of adjustments
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Adjustment'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: w4mqkdjd3d8k5
    post:
      security:
        - OAuth2:
            - AdjustmentCreation
      tags:
        - Adjustments
      summary: Add a new adjustment
      description: |
        The `id` value returned in response.data can be used to:
        * load the adjustment using the API endpoint `GET /tagpay/adjustment/{id}`
      operationId: addAdjustment
      requestBody:
        description: |
          Create a new Adjustment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustmentAddRequest'
      responses:
        '201':
          description: Adjustment add response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Adjustment'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 6fcnalmy696w4
  /tagpay/admin/profiles:
    get:
      security:
        - OAuth2:
            - AdminProfileView
      summary: Fetch all administrator profiles
      operationId: fetchAllAdministratorProfiles
      parameters:
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/SearchRequest'
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * name: `StringCriteria` Administrator Profile Name
      tags:
        - Administrators
      responses:
        '200':
          description: An array of administrator profiles
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/AdminUserProfile'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: i3dfpparebvgx
  /tagpay/admin:
    get:
      security:
        - OAuth2:
            - AdminView
      summary: Fetch all administrators
      operationId: fetchAllAdministrators
      parameters:
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/SearchRequest'
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * id: `NumberCriteria` Administrator reference
              * alias: `StringCriteria` Administrator login name
              * lastName: `StringCriteria` Administrator last name
              * firstName: `StringCriteria` Administrator first name
              * phone: `StringCriteria` Administrator contact phone
              * email: `StringCriteria` Administrator mail address
              * status: `EnumCriteria` Administrator status
              * profile: `EnumCriteria` Administrator profile
              * expirationDate: `DateTimeCriteria` Administrator expiration date
      tags:
        - Administrators
      responses:
        '200':
          description: An array of administrators
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Administrator'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: xlto1gw0rzbgz
  '/tagpay/agents/{id}/documents':
    parameters:
      - name: id
        in: path
        description: ID of agent
        required: true
        schema:
          type: integer
          format: int64
    get:
      security:
        - OAuth2:
            - AgentView
      tags:
        - Agents
      summary: Agent document list
      parameters:
        - in: query
          name: type
          schema:
            $ref: '#/components/schemas/DocumentType'
      operationId: agentSearchDocument
      responses:
        '200':
          description: Document search response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDocumentResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: f8kgmxm8c6h3c
    post:
      security:
        - OAuth2:
            - AgentUpdate
      tags:
        - Agents
      summary: Add a document to an agent
      operationId: agentAddDocument
      requestBody:
        description: |
          Document parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentRequest'
      responses:
        '200':
          description: Document add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocument'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: joarwrsa0vkbi
  '/tagpay/agents/{id}':
    parameters:
      - name: id
        in: path
        description: ID of agent
        required: true
        schema:
          type: integer
          format: int64
    get:
      security:
        - OAuth2:
            - AgentView
      tags:
        - Agents
      summary: Load given agent
      operationId: loadAgentById
      responses:
        '200':
          description: agent response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Agent'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: taqgzriogcb21
  /tagpay/agents:
    get:
      security:
        - OAuth2:
            - AgentView
      summary: Fetch all agents
      operationId: fetchAllAgents
      parameters:
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/SearchRequest'
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * agent_id: `NumberCriteria`
              * agent_name: `StringCriteria`
              * agent_type: `EnumCriteria`
              * agent_cos: `NumberCriteria`
      tags:
        - Agents
      responses:
        '200':
          description: An array of agents
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Agent'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: xe1gkh2mhjmiy
    post:
      security:
        - OAuth2:
            - AgentCreation
      tags:
        - Agents
      summary: Add a new agent
      description: |
        The `id` value returned in response.data can be used to:
        * load the agent using the API endpoint `GET /tagpay/agents/{id}`
        * add documents to the agent using the API endpoint `POST /tagpay/agents/{id}/documents`
      operationId: addAgent
      requestBody:
        description: |
          Create a new Agent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentAddRequest'
      responses:
        '201':
          description: Agent add response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Agent'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: mxemfmg5x59w6
  /tagpay/audit:
    get:
      security:
        - OAuth2:
            - AuditView
      summary: Fetch audit records
      operationId: fetchAllAudit
      parameters:
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/SearchRequest'
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * id: `NumberCriteria`
              * targetIdentity: `NumberCriteria`
              * dateTime: `DateTimeCriteria`
              * role: `EnumCriteria`
              * login: `StringCriteria`
              * type: `StringCriteria`
              * scriptName: `StringCriteria`
              * description: `StringCriteria`
              * ip: `StringCriteria`
      tags:
        - Audit
      responses:
        '200':
          description: An array of audit records
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Audit'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 2e30fx0wstvku
  '/tagpay/cards/{id}/features/confirm':
    parameters:
      - name: id
        in: path
        description: ID of card to update
        required: true
        schema:
          type: integer
          format: int64
    post:
      security:
        - OAuth2:
            - CardUpdate
      tags:
        - Cards
      summary: Confirm card feature
      operationId: confirmCardFeature
      requestBody:
        description: |
          Confirm NFC feature
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardFeatureRequest'
      responses:
        '201':
          description: Card feature confirmation response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      card:
                        $ref: '#/components/schemas/Card'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 4rjnene9q3s3u
  '/tagpay/cards/{id}/features/refuse':
    parameters:
      - name: id
        in: path
        description: ID of card to update
        required: true
        schema:
          type: integer
          format: int64
    post:
      security:
        - OAuth2:
            - CardUpdate
      tags:
        - Cards
      summary: Refuse card feature
      operationId: refuseCardFeature
      requestBody:
        description: |
          Confirm NFC feature
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardFeatureRefuseRequest'
      responses:
        '201':
          description: Card NFC refusal response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      card:
                        $ref: '#/components/schemas/Card'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ubp7mektco321
  '/tagpay/cards/{id}':
    parameters:
      - name: id
        in: path
        description: ID of card to update
        required: true
        schema:
          type: integer
          format: int64
    patch:
      security:
        - OAuth2:
            - CardUpdate
      tags:
        - Cards
      summary: Update a card
      operationId: updateCard
      requestBody:
        description: |
          Update a Card
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardUpdateRequest'
      responses:
        '201':
          description: Card update response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      card:
                        $ref: '#/components/schemas/Card'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: r1ygbliysoga6
    get:
      security:
        - OAuth2:
            - CardView
      tags:
        - Cards
      summary: Retrieve a card
      operationId: retrieveCard
      responses:
        '200':
          description: Card get response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardItem'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: y2r4hj0waokly
  '/tagpay/cards/{id}/operation/{type}/accept':
    parameters:
      - name: id
        in: path
        description: ID of card
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: path
        description: Type of operation
        required: true
        schema:
          $ref: '#/components/schemas/OperationType'
    post:
      security:
        - OAuth2:
            - CardUpdate
      tags:
        - Cards
      summary: Accept card operation by the partner
      operationId: acceptCardOperation
      requestBody:
        description: |
          Accept operation properties.
          Set of key-value pairs that you can attach to the card management operation notification. This can be useful for storing your additional information about the operation in a structured format.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CardManagementOperationProperties'
                - type: object
                  properties:
                    pan_alias:
                      type: string
                      description: __Only available and required when operation type is `card_creation`__
                    pan_display:
                      type: string
                      description: __Only available and required when operation type is `card_creation`__
                    external_id:
                      type: string
                      description: __Only available when operation type is `card_creation`__
                      example: EXT123
                    exp_month:
                      type: integer
                      description: __Only available when operation type is `card_creation`__
                      example: 1
                    exp_year:
                      type: integer
                      description: __Only available when operation type is `card_creation`__
                      example: 1970
      responses:
        '200':
          description: Accept card operation response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 57vcmrx04rr78
  '/tagpay/cards/{id}/operation/{type}/advice':
    parameters:
      - name: id
        in: path
        description: ID of card
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: path
        description: Type of operation
        required: true
        schema:
          $ref: '#/components/schemas/OperationType'
    post:
      security:
        - OAuth2:
            - CardUpdate
      tags:
        - Cards
      summary: Advice card operation by the partner
      operationId: adviceCardOperation
      requestBody:
        description: |
          Advice operation properties.
          Set of key-value pairs that you can attach to the card management operation notification. This can be useful for storing your additional information about the operation in a structured format.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CardManagementOperationProperties'
                - type: object
                  properties:
                    pan_alias:
                      type: string
                      description: __Only available and required when operation type is `card_creation`__
                    pan_display:
                      type: string
                      description: __Only available and required when operation type is `card_creation`__
                    external_id:
                      type: string
                      description: __Only available when operation type is `card_creation`__
                      example: EXT123
                    exp_month:
                      type: integer
                      description: __Only available when operation type is `card_creation`__
                      example: 1
                    exp_year:
                      type: integer
                      description: __Only available when operation type is `card_creation`__
                      example: 1970
      responses:
        '200':
          description: Advice card operation response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: t341mkbgummgw
  '/tagpay/cards/{id}/operation/{type}/error':
    parameters:
      - name: id
        in: path
        description: ID of card
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: path
        description: Type of operation
        required: true
        schema:
          $ref: '#/components/schemas/OperationType'
    post:
      security:
        - OAuth2:
            - CardUpdate
      tags:
        - Cards
      summary: Error card operation by the partner
      operationId: errorCardOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardManagementOperationErrorRequest'
      responses:
        '200':
          description: Error card operation response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: kmjkkkpbh3scz
  '/tagpay/cards/{id}/operations/last':
    parameters:
      - name: id
        in: path
        description: ID of target card
        required: true
        schema:
          $ref: '#/components/schemas/Operation/properties/cardId'
    get:
      security:
        - OAuth2:
            - CardView
      tags:
        - Cards
      summary: Get last operation for a card
      operationId: getCardOperation
      responses:
        '200':
          description: card operation response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      operation:
                        $ref: '#/components/schemas/Operation'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: gldz87ndbuyxh
  '/tagpay/cards/{id}/operation/{type}/pending':
    parameters:
      - name: id
        in: path
        description: ID of card
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: path
        description: Type of operation
        required: true
        schema:
          $ref: '#/components/schemas/OperationType'
    post:
      security:
        - OAuth2:
            - CardUpdate
      tags:
        - Cards
      summary: Pending card operation by the partner
      operationId: pendingCardOperation
      requestBody:
        description: |
          Pending operation properties.
          Set of key-value pairs that you can attach to the card management operation notification. This can be useful for storing your additional information about the operation in a structured format.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardManagementOperationProperties'
      responses:
        '200':
          description: Pending card operation response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: qwmdk9cp3v6nh
  '/tagpay/cards/{id}/operation/{type}/refuse':
    parameters:
      - name: id
        in: path
        description: ID of card
        required: true
        schema:
          type: integer
          format: int64
      - name: type
        in: path
        description: Type of operation
        required: true
        schema:
          $ref: '#/components/schemas/OperationType'
    post:
      security:
        - OAuth2:
            - CardUpdate
      tags:
        - Cards
      summary: Refuse card operation by the partner
      operationId: refuseCardOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardManagementOperationRefuseRequest'
      responses:
        '200':
          description: Refuse card operation response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 8dbd1o7riyxma
  '/tagpay/cards/{id}/operations':
    parameters:
      - name: id
        in: path
        description: ID of target card
        required: true
        schema:
          $ref: '#/components/schemas/Operation/properties/cardId'
      - name: search
        in: query
        schema:
          $ref: '#/components/schemas/SearchRequest'
        description: |
          See <a href="#section/Overview/Search-requests">"Search requests"</a> section

          Available criteria attributes :
            * type: `EnumCriteria`
            * state: `EnumCriteria`
            * creation_date: `DateTimeCriteria`
    get:
      security:
        - OAuth2:
            - CardView
      tags:
        - Cards
      summary: Fetch all operations for a card
      operationId: fetchAllCardOperations
      responses:
        '200':
          description: card operations response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Operation'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: fnuz2zubbhljl
  '/tagpay/documents/{id}/status':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityDocument/properties/id'
    patch:
      security:
        - OAuth2:
            - ClientUpdate
            - AgentUpdate
            - MerchantUpdate
            - DistributorUpdate
      tags:
        - Documents
      summary: Change document status
      description: Change document status
      operationId: changeDocumentStatus
      requestBody:
        description: |
          Document parameters
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  $ref: '#/components/schemas/DocumentStatus'
                reason:
                  type: string
                  description: reason of status change
      responses:
        '200':
          description: Document update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocumentWithContent'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: yb1zsfozb4d8k
  '/tagpay/clients/{id}/documents':
    parameters:
      - name: id
        in: path
        description: ID of client
        required: true
        schema:
          type: integer
          format: int64
    get:
      security:
        - OAuth2:
            - ClientView
      tags:
        - Clients
      summary: Client document list
      operationId: clientSearchDocument
      parameters:
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/DocumentType'
      responses:
        '200':
          description: Document search response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDocumentResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: w1970e38gjp00
    post:
      security:
        - OAuth2:
            - ClientUpdate
      tags:
        - Clients
      summary: Add a document to a client
      operationId: clientAddDocument
      requestBody:
        description: |
          Document parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentRequestWithOverwrite'
      responses:
        '200':
          description: Document add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocument'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 9p77wfhnfd1lt
  '/tagpay/clients/{id}':
    parameters:
      - name: id
        in: path
        description: ID of client to load
        required: true
        schema:
          type: integer
          format: int64
    get:
      security:
        - OAuth2:
            - ClientView
      tags:
        - Clients
      summary: Load given client
      operationId: loadClientById
      responses:
        '200':
          description: client response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      client:
                        $ref: '#/components/schemas/Client'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 965r5pv318qub
    put:
      security:
        - OAuth2:
            - ClientUpdate
      tags:
        - Clients
      summary: Update a client
      operationId: updateClient
      requestBody:
        description: |
          Update a Client
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdateRequest'
      responses:
        '201':
          description: Client update response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      client:
                        $ref: '#/components/schemas/Client'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: xjx9g2hc2m806
  /tagpay/clients:
    get:
      security:
        - OAuth2:
            - ClientView
      summary: Fetch all clients
      operationId: fetchAllClients
      parameters:
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/SearchRequest'
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * client_id : `NumberCriteria`
              * client_status: `EnumCriteria`
              * client_name: `StringCriteria`
              * client_firstName: `StringCriteria`
              * client_postName: `StringCriteria`
              * client_msisdn: `StringCriteria`
              * client_balance: `AmountCriteria`
              * client_cos: `EnumCriteria`
      tags:
        - Clients
      responses:
        '200':
          description: An array of clients
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Client'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: pkdxcqmhy0zkv
    post:
      security:
        - OAuth2:
            - ClientUpdate
      tags:
        - Clients
      summary: Add a new client
      operationId: addClient
      requestBody:
        description: |
          Create a new Client
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientAddRequest'
      responses:
        '201':
          description: Client add response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Client'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: wmolqmyc9dv00
  '/tagpay/agents/{id}/api-key':
    parameters:
      - name: id
        in: path
        required: true
        description: Agent Id
        schema:
          $ref: '#/components/schemas/UserId'
    post:
      tags:
        - Agents
      summary: Create agent API key
      operationId: CreateAgentApiKey
      security:
        - OAuth2:
            - AgentApiKeyManagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
      responses:
        '201':
          $ref: '#/components/responses/CreateAgentApiKeyResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: eguks441i3bmc
  '/tagpay/devices/{id}':
    parameters:
      - name: id
        in: path
        description: ID of device to load
        required: true
        schema:
          $ref: '#/components/schemas/Device/properties/id'
    get:
      security:
        - OAuth2:
            - TerminalView
      tags:
        - Devices
      summary: Load given device
      operationId: loadDeviceById
      responses:
        '200':
          description: device response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      device:
                        $ref: '#/components/schemas/Device'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: wbtyb6740uy31
    put:
      security:
        - OAuth2:
            - TerminalUpdate
      tags:
        - Devices
      summary: Update an existing device
      operationId: updateDevice
      requestBody:
        description: |
          Device parameters to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpdateRequest'
      responses:
        '200':
          description: Device update response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      device:
                        $ref: '#/components/schemas/Device'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: tppeefp9ja1qk
  /tagpay/devices:
    get:
      security:
        - OAuth2:
            - TerminalView
      summary: Fetch all devices
      operationId: fetchAllDevices
      parameters:
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/SearchRequest'
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * device_creation: `DateTimeCriteria`
              * device_number: `StringCriteria`
              * device_id: `NumberCriteria`
              * device_status: `EnumCriteria`, possible values: `ACTIVE`, `REMOVED`, `BLOCKED`, `PENDING`
              * device_ownerType: `EnumCriteria`, possible values: `CLIENT`, `AGENT`, `MERCHANT`,
              * device_ownerName: `StringCriteria`
              * device_ownerId: `StringCriteria`
              * device_type: `EnumCriteria`, possible values: `IMEI`, `INGENICO`, `IP`, `MAC`, `NEOMAD`, `PHONE`, `TJC`, `IBAN`, `UNDEFINED`
              * device_lastUsage: `DateTimeCriteria`
              * device_appVersion: `StringCriteria`
      tags:
        - Devices
      responses:
        '200':
          description: An array of devices
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Device'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: kqlmfur64d0zz
    post:
      security:
        - OAuth2:
            - TerminalCreation
      tags:
        - Devices
      summary: Add a new device
      operationId: addDevice
      requestBody:
        description: |
          Device parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAddRequest'
      responses:
        '201':
          description: Device add response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      device:
                        $ref: '#/components/schemas/Device'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: wlwvehcxlsiy8
  '/tagpay/distributors/{id}/documents':
    parameters:
      - name: id
        in: path
        description: ID of distributor to get document from
        required: true
        schema:
          type: integer
          format: int64
    get:
      security:
        - OAuth2:
            - DistributorView
      tags:
        - Distributors
      summary: Distributor document list
      operationId: distributorSearchDocument
      parameters:
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/DocumentType'
      responses:
        '200':
          description: Document search response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDocumentResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 1g6pvuwmaz5sp
    post:
      security:
        - OAuth2:
            - DistributorUpdate
      tags:
        - Distributors
      summary: Add a document to a distributor
      operationId: distributorAddDocumen
      requestBody:
        description: |
          Document parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentRequest'
      responses:
        '200':
          description: Document add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocument'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: xso3mmw0qvots
  '/tagpay/distributors/{id}':
    parameters:
      - name: id
        in: path
        description: Shortcode of distributor to load
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - DistributorView
      tags:
        - Distributors
      summary: Load given distributor
      operationId: loadDistributorById
      responses:
        '200':
          description: distributor response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Distributor'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 80v1v924emxd2
  /tagpay/distributors:
    get:
      security:
        - OAuth2:
            - DistributorView
      summary: Fetch all distributors
      operationId: fetchAllDistributors
      parameters:
        - name: search
          in: query
          description: |
            Available criteria attributes :
              * distributor_id: `NumberCriteria`
              * distributor_name: `StringCriteria`
              * distributor_cos: `NumberCriteria`
          schema:
            $ref: '#/components/schemas/SearchRequest'
      tags:
        - Distributors
      responses:
        '200':
          description: An array of distributors
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Distributor'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 0vorxac4zcayu
  '/tagpay/documents/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdentityDocument/properties/id'
    get:
      security:
        - OAuth2:
            - ClientView
            - AgentView
            - MerchantView
            - DistributorView
      tags:
        - Documents
      summary: Get a document
      operationId: getDocument
      responses:
        '200':
          description: Document get response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      document:
                        $ref: '#/components/schemas/IdentityDocumentWithContent'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: w500huffwat9g
    patch:
      security:
        - OAuth2:
            - ClientUpdate
            - AgentUpdate
            - MerchantUpdate
            - DistributorUpdate
      tags:
        - Documents
      summary: Update a  document
      description: Update document meta data
      operationId: updateDocument
      requestBody:
        description: |
          Document parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityDocument'
      responses:
        '200':
          description: Document update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocumentWithContent'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: y9a5uis105n0w
  /tagpay/kyc:
    get:
      security:
        - OAuth2:
            - kyc_view
      tags:
        - KYC
      summary: Retrieve KYC requirements
      operationId: RetrieveKYCRequirements
      parameters:
        - in: query
          name: legalType
          schema:
            $ref: ./LegalType.yaml
        - in: query
          name: profileId
          schema:
            $ref: ./ProfileId.yaml
        - in: query
          name: status
          schema:
            $ref: ./IdentityStatusEnum.yaml
        - in: query
          name: includeRenewable
          schema:
            $ref: '#/components/schemas/IncludeRenewableKyc'
        - in: query
          name: includeNonRenewable
          schema:
            $ref: '#/components/schemas/IncludeNonRenewableKyc'
      responses:
        '200':
          description: the KYC fields to provide when creating an Identity with the provided filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Input'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: w92wy2gv43dk3
  '/tagpay/means-of-payment/{network}/credit-transfers/{id}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
      - name: id
        in: path
        required: true
        description: Id of the instruction to be retrieved
        schema:
          $ref: '#/components/schemas/Instruction/properties/reference'
    get:
      security:
        - OAuth2:
            - MeansOfPaymentView
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve a credit-transfers instruction
      operationId: getCreditTransfers
      responses:
        '200':
          description: instruction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransferInstruction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: l6m08etsmqouk
  '/tagpay/means-of-payment/{network}/direct-debits/{id}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
      - name: id
        in: path
        required: true
        description: Id of the instruction to be retrieved
        schema:
          $ref: '#/components/schemas/Instruction/properties/reference'
    get:
      security:
        - OAuth2:
            - MeansOfPaymentView
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve a direct-debit instruction
      operationId: getDirectDebit
      responses:
        '200':
          description: instruction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instruction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 9yu06gfu3ipu7
  '/tagpay/means-of-payment/{network}/direct-debits-cancellations/{id}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
      - name: id
        in: path
        required: true
        description: Id of the instruction to be retrieved
        schema:
          $ref: '#/components/schemas/Instruction/properties/reference'
    get:
      security:
        - OAuth2:
            - MeansOfPaymentView
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve a direct-debit cancellation instruction
      operationId: getDirectDebitCancellation
      responses:
        '200':
          description: instruction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancellationInstruction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: a63fj5u0i8vy9
  '/tagpay/means-of-payment/{network}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
    get:
      security:
        - OAuth2:
            - MeansOfPaymentView
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve all instructions
      operationId: fetchAllInstructions
      parameters:
        - name: minCreationDate
          in: query
          description: Instruction's creation date range start (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            example: '2018-06-01T00:00:00Z'
            description: date in ATOM format
        - name: maxCreationDate
          in: query
          description: Instruction's creation date range end (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            example: '2018-06-01T00:00:00Z'
            description: date in ATOM format
        - name: minSettlementDate
          in: query
          description: Instruction's settlement date range start (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            example: '2018-06-01T00:00:00Z'
            description: date in ATOM format
        - name: maxSettlementDate
          in: query
          description: Instruction's settlement date range end (date range is limited to 3 months)
          schema:
            type: string
            format: date-time
            example: '2018-06-01T00:00:00Z'
            description: date in ATOM format
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/InstructionType'
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/OutwardState'
        - name: amount
          in: query
          description: Transaction amount (in cents)
          schema:
            type: integer
        - name: clientId
          in: query
          description: Client ID
          schema:
            type: integer
        - name: distributorId
          in: query
          description: Distributor ID
          schema:
            type: integer
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - creationDate
              - settlementDate
              - type
              - status
              - amount
              - clientId
              - distributorId
      responses:
        '200':
          description: Instruction Collection Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterbankingInstructionCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: oj4faz99beus5
  '/tagpay/means-of-payment/{network}/credit-transfers-cancellations/{id}':
    parameters:
      - name: network
        in: path
        required: true
        description: Interbanking network
        schema:
          type: string
          enum:
            - sepa
      - name: id
        in: path
        required: true
        description: Id of the instruction to be retrieved
        schema:
          $ref: '#/components/schemas/Instruction/properties/reference'
    get:
      security:
        - OAuth2:
            - MeansOfPaymentView
      tags:
        - MeansOfPayment
      summary: SEPA | Retrieve a Credit Transfer Cancellation instruction
      operationId: getCreditTransfersCancellation
      responses:
        '200':
          description: instruction response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutwardCreditTransfersCancellationInstruction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: dxhs4thbe5mf0
  '/tagpay/merchants/{id}/documents':
    parameters:
      - name: id
        in: path
        description: ID of merchant to get document from
        required: true
        schema:
          type: integer
          format: int64
    get:
      security:
        - OAuth2:
            - MerchantView
      tags:
        - Merchants
      summary: Merchant document list
      operationId: merchantSearchDocument
      parameters:
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/DocumentType'
      responses:
        '200':
          description: Document search response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDocumentResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: c0kuau6ujuxw8
    post:
      security:
        - OAuth2:
            - MerchantUpdate
      tags:
        - Merchants
      summary: Add a document to a merchant
      operationId: merchantAddDocument
      requestBody:
        description: |
          Document parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddDocumentRequest'
      responses:
        '200':
          description: Document add response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityDocument'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 00l7xezsgc1zd
  '/tagpay/merchants/{id}':
    parameters:
      - name: id
        in: path
        description: ID of merchant to load
        required: true
        schema:
          type: integer
    get:
      security:
        - OAuth2:
            - MerchantView
      tags:
        - Merchants
      summary: Load given merchant
      operationId: loadMerchantById
      responses:
        '200':
          description: merchant response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Merchant'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: jgh3pj5aj16px
  /tagpay/merchants:
    get:
      security:
        - OAuth2:
            - MerchantView
      summary: Fetch all merchants
      operationId: fetchAllMerchants
      parameters:
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/SearchRequest'
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * merchant_id: `NumberCriteria`
              * merchant_name: `StringCriteria`
              * merchant_title: `StringCriteria`
              * merchant_cos: `NumberCriteria`
      tags:
        - Merchants
      responses:
        '200':
          description: An array of merchants
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Merchant'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: e1msudxyndukb
    post:
      security:
        - OAuth2:
            - MerchantCreation
      tags:
        - Merchants
      summary: Add a new merchant
      description: |
        The `id` value returned in response.data can be used to:
        * load the merchant using the API endpoint `GET /tagpay/merchants/{id}`
        * add documents to the merchant using the API endpoint `POST /tagpay/merchants/{id}/documents`
        * load a document from the merchant using the API endpoint `GET /tagpay/merchants/{id}/documents`
      operationId: addMerchant
      requestBody:
        description: |
          Create a new Merchant
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantAddRequest'
      responses:
        '201':
          description: Merchant add response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Merchant'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: v22ccx9nz518k
  /tagpay/healthz:
    get:
      security: []
      tags:
        - External System Monitoring
      summary: System check
      description: |
        Checks that the server is alive.
      operationId: SystemCheck
      responses:
        '200':
          description: Heart is beating.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alive:
                    type: boolean
                    example: true
                  dbalive:
                    type: boolean
                    example: true
                  version:
                    type: string
                    example: 5.1/20230825
                  buildDate:
                    type: string
                    example: '2023-08-30T18:43:51+02:00'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 3v1ugoc6h7koi
  '/tagpay/pricingProfiles/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PricingProfile/properties/id'
    get:
      security:
        - OAuth2:
            - PricingProfileView
      tags:
        - PricingProfiles
      summary: Load given pricing profile
      operationId: loadPricingProfileById
      responses:
        '200':
          description: pricing profile response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      pricingProfile:
                        $ref: '#/components/schemas/PricingProfile'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: smnf6ryckmtu4
  /tagpay/pricingProfiles:
    get:
      security:
        - OAuth2:
            - PricingProfileView
      summary: Fetch all pricing profiles
      operationId: fetchAllPricingProfiles
      parameters:
        - name: search
          in: query
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * name : `StringCriteria`
          schema:
            $ref: '#/components/schemas/SearchRequest'
      tags:
        - PricingProfiles
      responses:
        '200':
          description: An array of pricing profiles
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/PricingProfile'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: hh4s2nkw1iapf
  '/tagpay/pricingProfiles/{id}/pricing':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PricingProfile/properties/id'
    get:
      security:
        - OAuth2:
            - PricingProfileView
      summary: Fetch all pricings for a profile
      operationId: fetchAllPricing
      parameters:
        - name: search
          in: query
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * type: `EnumCriteria` Pricing type
              * media: `EnumCriteria` Pricing media
              * operation: `EnumCriteria` Pricing operation
              * applicableTo: `EnumCriteria` Pricing applicable to
              * currency: `NumberCriteria` Pricing currency
          schema:
            $ref: '#/components/schemas/SearchRequest'
      tags:
        - PricingProfiles
      responses:
        '200':
          description: An array of pricings
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Pricing'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: q9i724jtxixgq
  /tagpay/profiles:
    get:
      security:
        - OAuth2:
            - profiles_view
      tags:
        - Profiles
      summary: List User Profiles
      description: |
        Returns the list of all accessible User Profiles
      operationId: ListProfiles
      parameters:
        - name: profileId
          in: query
          schema:
            $ref: '#/components/schemas/ProfileId'
        - name: role
          in: query
          schema:
            $ref: ./IdentityRole.yaml
        - name: name
          in: query
          schema:
            type: string
            description: the Profile name
        - name: ownerId
          in: query
          schema:
            $ref: '#/components/schemas/IdentityId'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
      responses:
        '200':
          description: List of usable Profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: d9hu46en9ij61
  /tagpay/reports/account:
    get:
      security:
        - OAuth2:
            - AccountReportsView
      summary: Account report
      operationId: account
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: h843e1g07jvww
  '/tagpay/reports/account/{mode}':
    parameters:
      - in: path
        name: mode
        description: Choice of automatic or manual generated report
        required: true
        schema:
          type: string
          enum:
            - automatic
            - manual
    get:
      security:
        - OAuth2:
            - AccountingReportsView
      summary: Account report /w mode
      operationId: accountReportWithMode
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: uimmbldqwz587
  /tagpay/reports/accounting:
    get:
      security:
        - OAuth2:
            - AccountingReportsView
      summary: Accounting report
      operationId: accounting
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: n4dhcr4qehkvi
  '/tagpay/reports/accounting/{mode}':
    parameters:
      - in: path
        name: mode
        description: Choice of automatic or manual generated report
        required: true
        schema:
          type: string
          enum:
            - automatic
            - manual
    get:
      security:
        - OAuth2:
            - AccountingReportsView
      summary: Accounting report /w mode
      operationId: accountingReportWithMode
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ctntii2l9w8ii
  /tagpay/reports/balance:
    get:
      security:
        - OAuth2:
            - BalanceReportsView
      summary: Balance report
      operationId: balance
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            application/json:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 9e5i0kkdy49mo
  '/tagpay/reports/balance/{mode}':
    parameters:
      - in: path
        name: mode
        description: Choice of automatic or manual generated report
        required: true
        schema:
          type: string
          enum:
            - automatic
            - manual
    get:
      security:
        - OAuth2:
            - BalanceReportsView
      summary: Balance report /w mode
      operationId: balanceReportWithMode
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 98ch7wa066wk9
  /tagpay/reports/contribution:
    get:
      security:
        - OAuth2:
            - TransactionReportsView
      summary: Contribution report
      operationId: contribution
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: cki2qssnde6t1
  '/tagpay/reports/contribution/{mode}':
    parameters:
      - in: path
        name: mode
        description: Choice of automatic or manual generated report
        required: true
        schema:
          type: string
          enum:
            - automatic
            - manual
    get:
      security:
        - OAuth2:
            - TransactionReportsView
      summary: Contribution report /w mode
      operationId: contributionReportWithMode
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: zkfed92furn47
  '/tagpay/reports/inventory/{type}':
    parameters:
      - name: type
        in: path
        description: Report type to retrieve
        required: true
        schema:
          type: string
          enum:
            - client
            - agent
            - merchant
            - company
            - terminal
    get:
      security:
        - OAuth2:
            - InventoryReportsView
      summary: Inventory reports
      operationId: inventory
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 6amuib4iuu1p8
  '/tagpay/reports/inventory/{type}/{mode}':
    parameters:
      - in: path
        name: type
        description: Report type to retrieve
        required: true
        schema:
          type: string
          enum:
            - client
            - agent
            - merchant
            - company
            - terminal
      - name: mode
        in: path
        description: Choice of automatic or manual generated report
        required: true
        schema:
          type: string
          enum:
            - automatic
            - manual
    get:
      security:
        - OAuth2:
            - InventoryReportsView
      summary: Inventory reports /w mode
      operationId: inventoryReportWithMode
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: uooh1n9ov33n2
  /tagpay/reports/transaction:
    get:
      security:
        - OAuth2:
            - TransactionReportsView
      summary: Transaction report
      operationId: transaction
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 1ntbwo628jv5s
  '/tagpay/reports/transaction/{mode}':
    parameters:
      - in: path
        name: mode
        description: Choice of automatic or manual generated report
        required: true
        schema:
          type: string
          enum:
            - automatic
            - manual
    get:
      security:
        - OAuth2:
            - TransactionReportsView
      summary: Transaction report /w mode
      operationId: transactionReportWithMode
      tags:
        - Reports
      responses:
        '200':
          description: A CSV file with the requested report data
          content:
            text/csv:
              schema:
                type: string
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 188d2h1mdui6l
  /tagpay/sms:
    get:
      security:
        - OAuth2:
            - SmsView
      summary: Fetch sms records
      operationId: fetchAllSms
      parameters:
        - name: search
          in: query
          schema:
            $ref: '#/components/schemas/SearchRequest'
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * id: `NumberCriteria`
              * sender: `StringCriteria`
              * receiver: `StringCriteria`
              * event: `StringCriteria`
              * source: `StringCriteria`
              * content: `StringCriteria`
              * creation: `DateTimeCriteria`
              * apiId: `StringCriteria`
              * provider: `EnumCriteria`
              * error: `StringCriteria`
      tags:
        - Search Sms
      responses:
        '200':
          description: An array of sms records
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Sms'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: dw45tx6u27vdz
  '/tagpay/transactions/{transactionId}/spendings':
    parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Transaction/properties/id'
    get:
      security:
        - OAuth2:
            - TransactionSpendingsView
      tags:
        - Transactions
      summary: Retrieve spendings associated to a transaction
      operationId: GetTransactionSpendings
      responses:
        '200':
          $ref: '#/components/responses/GetTransactionSpendingsResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: kcfy95ryy7swn
  '/tagpay/transactions/{transactionId}/attachments':
    parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Transaction/properties/id'
    get:
      security:
        - OAuth2:
            - transaction_attachments_view
      tags:
        - Transactions
      summary: Retrieve transaction attachments
      operationId: GetTransactionAttachments
      responses:
        '200':
          $ref: '#/components/responses/GetTransactionAttachmentsResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: pww84tqkn0irm
  '/tagpay/transactions/{transactionId}/attachments/{attachmentId}/content':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/Transaction/properties/id'
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    get:
      security:
        - OAuth2:
            - transaction_spendings_view
      tags:
        - Transactions
      operationId: GetTransactionAttachmentContent
      summary: Get attachments content
      responses:
        '200':
          $ref: '#/components/responses/TransactionAttachmentContentResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: xtztsyzlrkp9z
  '/tagpay/transactions/{transactionId}/attachments/{attachmentId}/preview':
    parameters:
      - in: path
        name: transactionId
        required: true
        schema:
          $ref: '#/components/schemas/Transaction/properties/id'
      - in: path
        name: attachmentId
        required: true
        schema:
          $ref: '#/components/schemas/TransactionAttachmentId'
    get:
      security:
        - OAuth2:
            - transaction_spendings_view
      tags:
        - Transactions
      operationId: GetTransactionAttachmentThumbnail
      summary: Get attachments content thumbnail
      responses:
        '200':
          $ref: '#/components/responses/TransactionAttachmentPreviewResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
      x-stoplight:
        id: 04xe7256qa2l1
  '/tagpay/transactions/{id}':
    parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Transaction/properties/id'
    get:
      security:
        - OAuth2:
            - TransactionView
      tags:
        - Transactions
      summary: Load given transaction
      operationId: loadTransactionById
      responses:
        '200':
          description: transaction response
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      transaction:
                        $ref: '#/components/schemas/Transaction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: ajuxf3mtmxs9a
  /tagpay/transactions:
    get:
      security:
        - OAuth2:
            - TransactionView
      summary: Fetch all transactions
      operationId: fetchAllTransactions
      parameters:
        - name: search
          in: query
          description: |
            See <a href="#section/Overview/Search-requests">"Search requests"</a> section

            Available criteria attributes :
              * transaction_id : `NumberCriteria`
              * transaction_type : `EnumCriteria`
              * transaction_clientMobile: `StringCriteria`
              * ~~transaction_clientId : `NumberCriteria`~~ *deprecated please use `transaction_contributorId` instead*
              * ~~transaction_acceptorId : `NumberCriteria`~~ *deprecated please use `transaction_contributorId` instead*
              * transaction_amount : `AmountCriteria`
              * transaction_amountValue : `NumberCriteria`
              * transaction_currency : `NumberCriteria`
              * transaction_label : `StringCriteria`
              * transaction_externalReference : `StringCriteria`
              * transaction_date OR date : `DateTimeCriteria`
              * transaction_contributorId : `NumberCriteria`
              * transaction_contributorMobile : `StringCriteria`
          schema:
            $ref: '#/components/schemas/SearchRequest'
            example: '{"filter":{"type":"CRITERIA","attribute":"transaction_type","operator":"[/]","value":["PAYMENT_FUNDS_RESERVATION", "CASHOUT_FUNDS_RESERVATION", "CASHOUT_FUNDS_RESERVATION", "ACCOUNT_TO_EXT_FUNDS_RESERVATION", "RET_EXT_TO_ACC_FUNDS_RESERVATION", "ACC_RECHARGE_FUNDS_RESERVATION"]}}'
      tags:
        - Transactions
      responses:
        '200':
          description: An array of transactions
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/SearchResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Transaction'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 8p3fne2ey9idb
  /tagpay/webhooks:
    get:
      security:
        - OAuth2:
            - webhooks_view
      tags:
        - Webhooks
      summary: Search webhooks
      description: Multiple status values can be provided with comma separated strings
      operationId: searchWebhooks
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            $ref: '#/components/schemas/WebhookStatus'
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/WebhookId'
        - name: createdAfter
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: createdBefore
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: lastStatusChangeAfter
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: lastStatusChangeBefore
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: configurationId
          in: query
          schema:
            type: integer
      responses:
        '200':
          $ref: '#/components/responses/WebhookWithCallsCollectionResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 6yrd6i0hf6ske
  /tagpay/document-types:
    get:
      security:
        - OAuth2:
            - document_setup_view
      tags:
        - Document Configuration
      summary: Search configured document types
      operationId: SearchDocumentType
      parameters:
        - name: code
          in: query
          schema:
            type: string
            example: CODE
        - name: legalType
          in: query
          schema:
            type: string
            enum:
              - NATURAL_PERSON
              - LEGAL_ENTITY
            example: NATURAL_PERSON
        - name: originType
          in: query
          schema:
            type: string
            enum:
              - PREDEFINED
              - CUSTOM
            example: CUSTOM
        - name: isReceived
          in: query
          schema:
            type: boolean
            example: false
        - name: isGenerated
          in: query
          schema:
            type: boolean
            example: false
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
        - name: sort
          in: query
          description: Field to define sort order
          schema:
            type: string
            default: code
      responses:
        '200':
          description: Document types search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentTypeCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: u6n1d06cxmuft
    post:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Configure a new document type
      operationId: CreateDocumentType
      requestBody:
        description: New document type
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - name
                - legalType
              properties:
                code:
                  type: string
                  example: PASPOR
                name:
                  type: string
                  example: Passport
                legalType:
                  type: string
                  enum:
                    - NATURAL_PERSON
                    - LEGAL_ENTITY
                isReceived:
                  type: boolean
                  example: true
                isGenerated:
                  type: boolean
                  example: false
                authorizedFormats:
                  type: array
                  example:
                    - image/jpeg
                    - image/png
                    - image/gif
                    - application/pdf
                  description: 'Mandatory for received document. Possible values "image/jpeg", "image/png", "image/gif", "application/pdf"'
                  items:
                    type: string
                    enum:
                      - image/jpeg
                      - image/png
                      - image/gif
                      - application/pdf
                mandatoryPages:
                  type: integer
                  description: Mandatory for received document
                  example: 1
                optionnalPages:
                  type: integer
                  example: 0
      responses:
        '201':
          description: Document type was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: lk3f61404x8ot
  '/tagpay/document-types/{code}':
    parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - document_setup_view
      tags:
        - Document Configuration
      summary: Get document type
      operationId: GetDocumentType
      responses:
        '200':
          description: Get Document type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: hg5quza1t3e9g
    patch:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Modify an existing document type
      operationId: ModifyDocumentType
      requestBody:
        description: Updated document type
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Passport
                legalType:
                  type: string
                  enum:
                    - NATURAL_PERSON
                    - LEGAL_ENTITY
                isReceived:
                  type: boolean
                  example: true
                isGenerated:
                  type: boolean
                  example: false
                authorizedFormats:
                  type: array
                  example:
                    - image/jpeg
                    - image/png
                    - image/gif
                    - application/pdf
                  description: 'Mandatory for received document. Possible values "image/jpeg", "image/png", "image/gif", "application/pdf"'
                  items:
                    type: string
                    enum:
                      - image/jpeg
                      - image/png
                      - image/gif
                      - application/pdf
                mandatoryPages:
                  type: integer
                  description: Mandatory for received document
                  example: 1
                optionnalPages:
                  type: integer
                  example: 0
      responses:
        '200':
          description: Document type modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentType'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: paowr3w7spacd
  /tagpay/document-packages:
    post:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Configure a new document package
      operationId: CreateDocumentPackage
      requestBody:
        description: New document package
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentPackage'
      responses:
        '201':
          description: Document package was created
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - name
                  - legalType
                properties:
                  code:
                    type: string
                    example: ENROL1
                  name:
                    type: string
                    example: Package for enrollment
                  legalType:
                    type: string
                    enum:
                      - NATURAL_PERSON
                      - LEGAL_ENTITY
                    example: NATURAL_PERSON
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: v13c8k6zbdvt8
    get:
      security:
        - OAuth2:
            - document_setup_view
      tags:
        - Document Configuration
      summary: Search configured document packages
      operationId: SearchDocumentPackage
      parameters:
        - name: code
          in: query
          schema:
            type: string
        - name: legalType
          in: query
          schema:
            type: string
            enum:
              - NATURAL_PERSON
              - LEGAL_ENTITY
        - name: name
          in: query
          schema:
            type: string
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
            minimum: 0
            default: 20
        - name: sort
          in: query
          description: Field to define sort order
          schema:
            type: string
            default: code
      responses:
        '200':
          description: Document packages search result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPackageCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: amqdqc21pck1c
  '/tagpay/document-packages/{packageCode}':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - document_setup_view
      tags:
        - Document Configuration
      summary: Get one document package
      operationId: GetDocumentPackage
      responses:
        '200':
          description: A document package
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - name
                  - legalType
                  - types
                properties:
                  code:
                    type: string
                    example: ENROL1
                  name:
                    type: string
                    example: Package for enrollment
                  legalType:
                    type: string
                    enum:
                      - NATURAL_PERSON
                      - LEGAL_ENTITY
                    example: NATURAL_PERSON
                  types:
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - order
                        - requiredStatus
                      properties:
                        code:
                          type: string
                          example: PASPOR
                        order:
                          type: integer
                          example: 3
                        requiredStatus:
                          type: string
                          enum:
                            - NEW
                            - PENDING
                            - VALIDATED
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: zdgtjxzuj7m9d
    put:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Modify an existing document package
      operationId: ModifyDocumentPackage
      requestBody:
        description: Document package to modify
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - legalType
              properties:
                name:
                  type: string
                  example: Package for enrollment
                legalType:
                  type: string
                  enum:
                    - NATURAL_PERSON
                    - LEGAL_ENTITY
                  example: NATURAL_PERSON
      responses:
        '200':
          description: Document package was modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentPackage'
      x-stoplight:
        id: 4mv8m5gka6xqa
  '/tagpay/document-packages/{packageCode}/types':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
    post:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Associate a document type to a package
      operationId: AssociateDocumentTypeToPackage
      requestBody:
        description: Document type association
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
                  example: PASPOR
                order:
                  type: integer
                  example: 3
                requiredStatus:
                  type: string
                  enum:
                    - NEW
                    - PENDING
                    - VALIDATED
                    - UNKNOWN
                  default: UNKNOWN
      responses:
        '201':
          description: Document type association success
          content:
            application/json:
              schema:
                type: object
                required:
                  - packageCode
                  - code
                  - order
                  - requiredStatus
                properties:
                  packageCode:
                    type: string
                    example: TRAVEL_DOCUMENT
                  code:
                    type: string
                    example: PASPOR
                  order:
                    type: integer
                    example: 3
                  requiredStatus:
                    type: string
                    enum:
                      - NEW
                      - PENDING
                      - VALIDATED
                      - UNKNOWN
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 07xahzeydzjwm
  '/tagpay/document-packages/{packageCode}/types/{typeCode}':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
      - name: typeCode
        in: path
        required: true
        schema:
          type: string
    delete:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Remove association between document type and a package
      operationId: DissociateDocumentTypeFromPackage
      responses:
        '204':
          description: Document type dissociation success
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: he2rv3bzifzff
  '/tagpay/document-packages/{packageCode}/types/{typeCode}/increase':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
      - name: typeCode
        in: path
        required: true
        schema:
          type: string
    patch:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Increase order of association between document type and a package
      operationId: IncreaseOrderOfDocumentTypeInPackage
      responses:
        '204':
          description: Order document type association increased
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 50nnqetwlagz1
  '/tagpay/document-packages/{packageCode}/types/{typeCode}/decrease':
    parameters:
      - name: packageCode
        in: path
        required: true
        schema:
          type: string
      - name: typeCode
        in: path
        required: true
        schema:
          type: string
    patch:
      security:
        - OAuth2:
            - document_setup_management
      tags:
        - Document Configuration
      summary: Decrease order of association between document type and a package
      operationId: DecreaseOrderOfDocumentTypeInPackage
      responses:
        '204':
          description: Order document type association decreased
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 9ckctsbxna253
  /tagpay/identities:
    get:
      security:
        - OAuth2:
            - identity_view
      tags:
        - Identities
      summary: List Identities
      description: |
        List all Identities
      operationId: ListIdentities
      parameters:
        - name: legalType
          in: query
          schema:
            $ref: '#/components/schemas/LegalType'
        - name: profileId
          in: query
          schema:
            $ref: '#/components/schemas/ProfileId'
        - name: externalId
          in: query
          schema:
            $ref: '#/components/schemas/ExternalId'
        - name: role
          in: query
          schema:
            $ref: ./IdentityRole.yaml
        - name: startLastUpdateKyc
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: endLastUpdateKyc
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: activitySectorCode
          in: query
          schema:
            type: string
        - name: addressLine1
          in: query
          schema:
            type: string
        - name: addressLine2
          in: query
          schema:
            type: string
        - name: alias
          in: query
          schema:
            type: string
        - name: annualTurnover
          in: query
          schema:
            type: string
        - name: averageSalary
          in: query
          schema:
            type: string
        - name: bankName
          in: query
          schema:
            type: string
        - name: birthCountry
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: birthCounty
          in: query
          schema:
            type: string
        - name: birthDate
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: birthDepartment
          in: query
          schema:
            type: string
        - name: birthPlace
          in: query
          schema:
            type: string
        - name: brandName
          in: query
          schema:
            type: string
        - name: businessDirectory
          in: query
          schema:
            type: string
        - name: city
          in: query
          schema:
            type: string
        - name: closureDate
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: contactPhone
          in: query
          schema:
            type: string
        - name: country
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: cumulativeSalary
          in: query
          schema:
            type: string
        - name: deathDate
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: district
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
        - name: familyName
          in: query
          schema:
            type: string
        - name: firstName
          in: query
          schema:
            type: string
        - name: gender
          in: query
          schema:
            type: string
            description: 'Expected values are 1 for male, 2 for female and 0 for none'
        - name: givenName
          in: query
          schema:
            type: string
        - name: idNumber
          in: query
          schema:
            type: string
        - name: incomeRange
          in: query
          schema:
            type: string
        - name: information
          in: query
          schema:
            type: string
        - name: jobTitle
          in: query
          schema:
            type: string
        - name: lang
          in: query
          schema:
            $ref: '#/components/schemas/Lang'
        - name: lastName
          in: query
          schema:
            type: string
        - name: legalCategory
          in: query
          schema:
            type: string
        - name: legalForm
          in: query
          schema:
            type: string
        - name: legalName
          in: query
          schema:
            type: string
        - name: maidenName
          in: query
          schema:
            type: string
        - name: marriedName
          in: query
          schema:
            type: string
        - name: nationality
          in: query
          schema:
            type: string
        - name: netIncomeRange
          in: query
          schema:
            type: string
        - name: notTaxResident
          in: query
          schema:
            type: boolean
        - name: numberOfEmployees
          in: query
          schema:
            type: string
        - name: otherNationality
          in: query
          schema:
            type: string
        - name: personTitle
          in: query
          schema:
            $ref: '#/components/schemas/PersonTitle'
        - name: postName
          in: query
          schema:
            type: string
        - name: province
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: registrationCountry
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: registrationDate
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: registrationNumber
          in: query
          schema:
            type: string
        - name: registrationPlace
          in: query
          schema:
            type: string
        - name: requiredAction
          in: query
          schema:
            type: string
        - name: shareCapital
          in: query
          schema:
            type: string
        - name: socioProfessionalCategory
          in: query
          schema:
            type: string
        - name: spouseFirstName
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/IdentityStatusEnum'
        - name: taxAddressLine1
          in: query
          schema:
            type: string
        - name: taxAddressLine2
          in: query
          schema:
            type: string
        - name: taxCity
          in: query
          schema:
            type: string
        - name: taxCountry
          in: query
          schema:
            $ref: '#/components/schemas/Country'
        - name: taxDistrict
          in: query
          schema:
            type: string
        - name: taxProvince
          in: query
          schema:
            type: string
        - name: taxRegion
          in: query
          schema:
            type: string
        - name: taxZipCode
          in: query
          schema:
            type: string
        - name: webSite
          in: query
          schema:
            type: string
        - name: zipcode
          in: query
          schema:
            type: string
        - name: kycExpiresBefore
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: kycExpiresAfter
          in: query
          schema:
            $ref: '#/components/schemas/DateAtom'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - legalType
              - profileId
              - externalId
              - role
              - lastUpdateKyc
      responses:
        '200':
          description: List of Identities matching the request filters
          content:
            application/json:
              schema:
                $ref: ./IdentityCollection.yaml
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 7uw2zkuwtxexd
    post:
      security:
        - OAuth2:
            - identity_creation
      tags:
        - Identities
      summary: Create Identity
      description: |
        Creating an Identity without Profile will create an Identity with a `NON_CUSTOMER` role.

        To create an Identity with `LEGAL_ENTITY` legal type, at least one relation of type `HAS_FOR_BOARD_MEMBER` is required in `relations` field of creation request.

        Response will not contain the Identity relations provided in the request. Use the relations management endpoints to get and modify Identity relations.
      operationId: CreateIdentity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityCreationRequest'
      responses:
        '201':
          description: Identity has been created successfully
          content:
            application/json:
              schema:
                $ref: ./Identity.yaml
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ylzpm57x9kg3g
  '/tagpay/identities/{identityId}':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    get:
      security:
        - OAuth2:
            - identity_view
      tags:
        - Identities
      summary: Retrieve one Identity
      description: |
        Administrators are not considered as Identity and therefor are not returned by this endpoint.
      operationId: GetIdentity
      responses:
        '200':
          description: The Identity matching the ID in request
          headers:
            Skaleet-Resource-Version:
              description: Indicates the current version of Identity
              schema:
                type: string
                example: '1'
          content:
            application/json:
              schema:
                $ref: ./Identity.yaml
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: c49fl8ix2ctxs
    patch:
      security:
        - OAuth2:
            - identity_update
      tags:
        - Identities
      summary: Update Identity
      operationId: UpdateIdentity
      parameters:
        - in: header
          name: Skaleet-Resource-Version
          required: false
          description: 'Indicate the version of the modified entity. If it does not correspond to the current version, an error is returned'
          schema:
            type: string
            example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityUpdateRequest'
      responses:
        '200':
          description: The Identity has been successfully updated. Returns the updated Identity.
          content:
            application/json:
              schema:
                $ref: ./Identity.yaml
        '409':
          $ref: '#/components/responses/VersionConflictResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: w9dvmw8ttdh49
  '/tagpay/identities/{identityId}/available-profiles':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - identity_profile_change
      tags:
        - Identities
      summary: List available Profiles
      description: |
        Returns the list of Profiles the Identity can be switched to
      operationId: ListIdentityAvailableProfiles
      responses:
        '200':
          description: List of usable Profiles
          content:
            application/json:
              schema:
                type: array
                description: collection of Profiles
                items:
                  $ref: '#/components/schemas/UserProfile'
        default:
          description: Request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stoplight:
        id: inrvklsn342bt
  '/tagpay/identities/{identityId}/actions/change-profile':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          type: string
    put:
      security:
        - OAuth2:
            - identity_profile_change
      tags:
        - Identities
      summary: Change Identity Profile
      operationId: ChangeIdentityProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeIdentityProfileActionRequest'
      responses:
        '204':
          description: Identity status was successfully changed
        default:
          description: Request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-stoplight:
        id: nbytjjvtrkjze
  '/tagpay/identities/{identityId}/agent-attributes':
    parameters:
      - in: path
        required: true
        name: identityId
        schema:
          $ref: '#/components/schemas/IdentityId'
    get:
      operationId: RetrieveAgentSpecificAttributes
      summary: Get Agent specific attributes
      tags:
        - Identities
      security:
        - OAuth2:
            - identity_view
      responses:
        '200':
          $ref: '#/components/responses/GetAgentAttributesResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: sndia87e7jhga
    patch:
      operationId: UpdateAgentSpecificAttributes
      summary: Update Agent specific attributes
      tags:
        - Identities
      security:
        - OAuth2:
            - identity_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentAttributes'
      responses:
        '201':
          $ref: '#/components/responses/GetAgentAttributesResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: j70cw4gecrc1x
  '/tagpay/autocomplete/{inputId}':
    parameters:
      - name: inputId
        in: path
        required: true
        description: KYC field identifier
        schema:
          $ref: '#/components/schemas/InputId'
    get:
      security:
        - OAuth2: []
      tags:
        - Autocomplete
      summary: KYC field auto-complete
      operationId: Autocomplete
      parameters:
        - name: userInput
          in: query
          required: true
          description: 'Current user input, to be completed'
          schema:
            type: string
      responses:
        '200':
          description: list of possible values found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PossibleValueCollection'
        default:
          $ref: '#/components/responses/ErrorResponse'
      x-stoplight:
        id: 714jyp77dxk3h
  '/tagpay/identities/{identityId}/recipients':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - RecipientsManagement
      tags:
        - Identities
      summary: List recipients of an identity
      operationId: FetchRecipients
      parameters:
        - name: id
          in: query
          schema:
            $ref: '#/components/schemas/RecipientId'
        - name: name
          in: query
          schema:
            $ref: '#/components/schemas/RecipientName'
        - name: offset
          in: query
          description: Starting item position number
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The number of items per page
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 20
        - name: sort
          in: query
          description: 'Field to define the sort order. To indicate sorting direction, ascending (oldest first) fields may be prefixed with +. Descending (newer first) fields may be prefixed with -'
          schema:
            type: string
            default: id
            enum:
              - id
              - name
      responses:
        '200':
          description: List of Recipients matching the request filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 2mpvqdpw5ipjz
    post:
      security:
        - OAuth2:
            - RecipientsManagement
      tags:
        - Identities
      summary: Create Recipient For Identity
      operationId: AddRecipientForIdentity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipient'
      responses:
        '201':
          description: Recipient is created for the identity
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - iban
                  - userId
                properties:
                  id:
                    type: string
                    description: Id of the recipient
                    example: EXT36
                  name:
                    type: string
                    description: name of the recipient
                    example: name recipient
                  iban:
                    type: string
                    description: iban valid of the recipient
                    example: FR7630006000011234567890189
                  userId:
                    type: integer
                    description: Id of the recipient's Identity
                    example: 8345
                  externalData:
                    type: object
                    description: description additional
                    example:
                      firstname: Paul
                      lastname: Joe
                      countryCode: FR
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: d61bfk4znx6oy
  '/identities/{identityId}/available-statuses':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    get:
      security:
        - OAuth2:
            - identity_status_change
      tags:
        - Identities
      summary: List available statuses
      description: |
        Returns the possible statuses to which the Identity can be switched to
      operationId: GetIdentityAvailableStatuses
      responses:
        '200':
          description: List of available statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityStatusArray'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 2csmivsji0iv3
  '/identities/{identityId}/actions/change-status':
    parameters:
      - in: path
        name: identityId
        required: true
        schema:
          $ref: '#/components/schemas/IdentityId'
    put:
      security:
        - OAuth2:
            - identity_status_change
      tags:
        - Identities
      summary: Change Identity status
      operationId: ChangeIdentityStatus
      parameters:
        - in: header
          name: Skaleet-Resource-Version
          required: false
          description: 'Indicate the version of the modified entity. If it does not correspond to the current version, an error is returned'
          schema:
            type: string
            example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeIdentityStatusActionRequest'
      responses:
        '204':
          description: Identity status was successfully changed
        '409':
          $ref: '#/components/responses/VersionConflictResponse'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ocix6a6th559w
  '/tagpay/identities/{identityId}/recipients/{recipientId}':
    parameters:
      - name: identityId
        in: path
        required: true
        schema:
          type: string
      - name: recipientId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RecipientId'
    delete:
      security:
        - OAuth2:
            - RecipientsManagement
      tags:
        - Identities
      summary: Delete recipient of an identity
      operationId: DeleteIdentityRecipientController
      responses:
        '204':
          description: Recipient has been deleted for the identity
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: daa12nxtlol70
  '/tagpay/jobs/{name}/progress':
    parameters:
      - name: name
        in: path
        required: true
        description: Job name
        schema:
          type: string
          example: MyJob
    get:
      security:
        - OAuth2:
            - job_view
      tags:
        - Job
      summary: Progression of job
      operationId: ProgressJob
      responses:
        '200':
          description: Get information of job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobProgress'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 6ihx20htwju1t
  '/tagpay/jobs/{name}/run':
    parameters:
      - name: name
        in: path
        required: true
        description: Job name
        schema:
          type: string
          example: MyJob
    post:
      security:
        - OAuth2:
            - job_update
      tags:
        - Job
      summary: Run job
      operationId: RunJob
      requestBody:
        required: false
        description: Overloads the default job parameters for this run only.
        content:
          application/json:
            schema:
              type: object
              example:
                parameter: overloaded value
              description: map of parameters
      responses:
        '202':
          description: Launch a existing job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRun'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: k71y6bqfwc36f
  '/tagpay/jobs/{name}/executions':
    parameters:
      - name: name
        in: path
        required: true
        description: Job name
        schema:
          type: string
          example: MyJob
    get:
      security:
        - OAuth2:
            - job_view
      tags:
        - Job
      summary: Job execution list
      operationId: ExecutionsJob
      parameters:
        - name: executionId
          in: query
          required: false
          schema:
            type: string
            example: '20220322151220'
            description: id of the execution we want to retrieve
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date-time
            example: '1970-01-01T15:12:20+0100'
            description: date from which we want to recover the executions
      responses:
        '200':
          description: Return list of executions of a job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionJobCollection'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: xm5fsthcv7qr8
  '/tagpay/jobs/{name}/executions/{executionId}/outputs/{outputName}':
    parameters:
      - name: name
        in: path
        required: true
        description: Job name
        schema:
          type: string
          example: MyJob
      - name: executionId
        in: path
        required: true
        description: Id of execution
        schema:
          type: string
          example: '19890101151052'
      - name: outputName
        in: path
        required: true
        description: name of output or log
        schema:
          type: string
          example: MyOutput
    get:
      security:
        - OAuth2:
            - job_view
      tags:
        - Job
      summary: Job execution output download
      operationId: DownloadOutput
      responses:
        '200':
          description: A file with the requested output/log file
          content:
            text/plain:
              schema:
                type: string
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 8vxfqt4gxum25
  /tagpay/scores:
    post:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Create a new score
      operationId: CreateScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreCreate'
      responses:
        '201':
          description: score has been inserted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: upegqas3lqk4x
    get:
      security:
        - OAuth2:
            - scoring_view
      tags:
        - Scoring
      summary: Get score list
      operationId: ScoreList
      parameters:
        - name: code
          in: query
          description: Filter the result on code (like)
          schema:
            type: string
        - name: type
          in: query
          description: Filter the result on type (equal)
          schema:
            type: string
            enum:
              - internal
              - external
        - name: offset
          in: query
          description: Pagination start (from 0)
          schema:
            type: integer
        - name: limit
          in: query
          description: Number of results to display (default 20)
          schema:
            type: integer
        - name: sort
          in: query
          description: Field to define sort order
          schema:
            type: string
      responses:
        '202':
          description: score list has returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScoreOutput'
                  count:
                    type: integer
                    description: Number of results corresponding to the filter (no matter the pagination)
                    example: 5
                  offset:
                    type: integer
                    example: 0
                    description: Pagination start (from 0)
                  limit:
                    type: integer
                    example: 100
                    description: Number of results to display (default 100)
                  sort:
                    type: string
                    description: Field to define sort order
                    example: code
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: vu9zkuixhyb70
  '/tagpay/scores/{code}':
    parameters:
      - name: code
        in: path
        required: true
        description: Code of the score
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - scoring_view
      tags:
        - Scoring
      summary: Get one score
      operationId: GetScore
      responses:
        '202':
          description: score return
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreOutput'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: m2ghi8zkqnlkj
    put:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Update score
      operationId: EditScore
      requestBody:
        required: true
        description: Score need to be add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreEdit'
      responses:
        '202':
          description: score has been updated
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: sicq38o7ju8c6
    delete:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Remove score
      operationId: DeleteScore
      responses:
        '202':
          description: score has been deleted
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 64u8y2hoz2z99
  '/tagpay/scores/{code}/links':
    parameters:
      - name: code
        in: path
        required: true
        description: Code of the score
        schema:
          type: string
    post:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Associate something to a score
      operationId: AssociateLinkScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreLink'
      responses:
        '201':
          description: link has been associated to the score
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: p21k3zcicb4wa
    delete:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Dissociate something from a score
      operationId: DissociateLinkScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreLink'
      responses:
        '202':
          description: product has been dissociated from the score
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ptk7u32767gti
  /tagpay/score-results:
    post:
      security:
        - OAuth2:
            - scoring_management
      tags:
        - Scoring
      summary: Create a new score result
      description: Calculate a score according to given input calculation parameters.
      operationId: CreateScoreResult
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreResultCreate'
      responses:
        '201':
          description: Score has been calculated and created according to the given parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreResultOutput'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: ad6p42dn7ax7q
  '/tagpay/score-results/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: ID of the score result
        schema:
          type: string
    get:
      security:
        - OAuth2:
            - scoring_view
      tags:
        - Scoring
      summary: Get one score result
      operationId: GetScoreResult
      responses:
        '202':
          description: Score result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScoreResultOutput'
        default:
          $ref: '#/components/responses/RestfulErrorResponse'
      x-stoplight:
        id: 3n57ytzrfbxyi
  /tagpay/operations:
    get:
      security:
        - OAuth2:
            - operation_read
      parameters:
        - in: query
          required: false
          name: operationType
          schema:
            type: string
            example: POSTING
        - in: query
          required: false
          name: isSystem
          schema:
            type: boolean
            example: true
      operationId: RetrieveOperationByType
      summary: Search Operations
      tags:
        - Operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    technicalName:
                      type: string
                      description: The technical name of the operation.
                      example: POSTING_CUSTOM
                    type:
                      type: string
                      description: Operation's type
                      example: POSTING
                    isSystem:
                      type: boolean
                      description: Is a system operation
                    translations:
                      type: object
                      description: Translations of the record's name in different languages.
                      additionalProperties:
                        type: string
                        description: The translation of the record's name in a particular language.
                      example:
                        fr_FR: French translation
                        en_US: English translation
        '400':
          $ref: '#/components/responses/InvalidRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
      x-stoplight:
        id: 2a9it4r9cwhmo
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://sandbox.skaleet.com/api/v2/admin/oauth2/token'
          scopes:
            ClientView: Client read only
            ClientUpdate: Client modification
            MerchantView: Merchant read only
            MerchantCreation: Merchant creation
            MerchantUpdate: Merchant modification
            AgentView: Agent read only
            AgentCreation: Agent creation
            AgentUpdate: Agent modification
            DistributorView: Distributor read only
            DistributorCreation: Distributor creation
            DistributorUpdate: Distributor modification
            TerminalView: Device read only
            TerminalCreation: Device creation
            TerminalUpdate: Device update
            TransactionView: Transaction read only
            TagLoan_read: Loan read only
            InventoryReportsView: Retrieve one of last generated client/agent/merchant inventory report
            BalanceReportsView: Retrieve last generated account balances report
            AccountReportsView: Retrieve last generated user accounts report
            AccountingReportsView: Retrieve last generated elementary accounting entries report
            TransactionReportsView: Retrieve one of last generated transactions/contributions report
            CardUpdate: Debit card modification
            AdjustmentView: Adjustment read only
            AdjustmentCreation: Adjustment creation
            AdjustmentUpdate: Adjustment validation or refusal
            AdjustmentCancel: Adjustment cancel
            AdminView: Administrator read only
            AdminProfileView: Administrator profiles read only
            SmsView: View SMS
            send_sms: Send SMS
            PricingProfileView: Pricing profile read only
            AuditView: View audit records
            ProfileView: View user profiles
            UserStatusView: View user status and possible values
            MeansOfPaymentView: Retrieve means of payment
            webhooks_view: Retrieve webhooks
            identity_profile_change: Allow the API client to change the Profile of an Identity
            RecipientsManagement: Manage external recipients
            TransactionSpendingsView: View spendings associated to a transaction
            TransactionAttachmentsView: View attachments associated to a transaction
            job_view: Job read only
            job_update: Edit or execute a job
            document_setup_management: Document setup management
            document_setup_view: Document setup view
            scoring_view: score view
            scoring_management: score management
            operation_read: view operation
            identity_documents_management: Allow to manage document for an identity
            documents_management: (same as `identity_documents_management`)
            identity_documents_view: Allow get the list of documents for an identity
            documents_view: (same as `identity_documents_view`)
            CardView: Debit card visualization
            AgentApiKeyManagement: Manage Agents API keys
            kyc_view: Visualize to customers KYC data
            profiles_view: Visualize to User Profiles
            transaction_attachments_view: Visualize attachments added to transactions
            transaction_spendings_view: Visualize spending categorization added to transactions
            identity_view: Visualize parties list
            identity_creation: Create new parties
            identity_update: Update existing parties data
            identity_status_change: Change existing parties statuses
          refreshUrl: ''
  responses:
    RestfulErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ErrorResponse:
      description: Request could not be processed
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/Response'
              - type: object
                properties:
                  error:
                    type: object
                    properties:
                      code:
                        type: integer
                      message:
                        type: string
                example:
                  success: false
                  error:
                    code: 1337
                    message: An error occurred
    CreateAgentApiKeyResponse:
      description: API key was successfully created for this agent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiKeyWithSecret'
    InvalidRequestResponse:
      description: Request is not valid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidRequestError'
    ForbiddenResponse:
      description: Request client was not allowed to make this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    GetTransactionSpendingsResponse:
      description: List of the transaction spendings
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SpendingDetailsList'
    NotFoundResponse:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    InternalServerErrorResponse:
      description: Server encountered an unhandled internal error during request processing
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - example:
                  message: Internal server error
                  hint: ''
    GetTransactionAttachmentsResponse:
      description: List of the transaction attachments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionAttachmentsList'
    TransactionAttachmentContentResponse:
      description: Document content (check `Content-Type` header value to know the exact MIME type of content)
      headers:
        Content-Type:
          description: Returned file MIME type
          schema:
            type: string
            example: image/png
      content:
        image/jpeg:
          schema:
            type: string
            format: binary
        image/gif:
          schema:
            type: string
            format: binary
        image/png:
          schema:
            type: string
            format: binary
        application/pdf:
          schema:
            type: string
            format: binary
    UnauthorizedResponse:
      description: Request client is not authorized to access this endpoint
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    TransactionAttachmentPreviewResponse:
      description: Document content (check `Content-Type` header value to know the exact MIME type of content)
      headers:
        Content-Type:
          description: Returned file MIME type
          schema:
            type: string
            example: image/png
      content:
        image/png:
          schema:
            type: string
            format: binary
    WebhookWithCallsCollectionResponse:
      description: List of webhooks and associated calls
      content:
        application/json:
          schema:
            allOf:
              - type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                  count:
                    type: integer
                    description: the total count of objects in collection
                    minimum: 0
                  offset:
                    type: integer
                    description: Pagination start (from 0)
                    minimum: 0
                    default: 0
                  limit:
                    type: integer
                    description: Number of results to display (default 20)
                    minimum: 0
                    maximum: 100
                    default: 20
                  sort:
                    type: string
                    description: Field to define sort order
                    default: id
                  links:
                    type: array
                    readOnly: true
                    description: |
                      Can contain the following actions (identified by their `rel` attribute):
                        * `getCurrentPage` [GET] Load the current collection page
                        * `getNextPage` [GET] Load the next collection page, if any
                        * `getPreviousPage` [GET] Load the previous collection page, if any
                    items:
                      $ref: '#/components/schemas/Link'
                    example:
                      - rel: getCurrentPage
                        href: 'https://sandbox.skaleet.com/api/v2/admin/tagpay/webhooks?limit=20&offset=40&sort=example_sorting_parameter'
                      - rel: getNextPage
                        href: 'https://sandbox.skaleet.com/api/v2/admin/tagpay/webhooks?limit=20&offset=60&sort=example_sorting_parameter'
                      - rel: getPreviousPage
                        href: 'https://sandbox.skaleet.com/api/v2/admin/tagpay/webhooks?limit=20&offset=20&sort=example_sorting_parameter'
              - type: object
                properties:
                  items:
                    type: array
                    description: Collection of Webhook with calls
                    items:
                      $ref: '#/components/schemas/WebhookWithCalls'
    VersionConflictResponse:
      description: The request could not be processed because the current version does not match the specified version
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictError'
    GetAgentAttributesResponse:
      description: Agent specific attributes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgentAttributes'
  schemas:
    SmsRequest:
      type: object
      description: Request content to send a sms
      required:
        - identityId
        - reference
      properties:
        identityId:
          $ref: '#/components/schemas/IdentityId'
        reference:
          type: string
          description: Locale key of the sms
        context:
          type: object
          description: Set of key-value pairs used in the sms
      x-stoplight:
        id: fs7u9x7fgtx9k
    SmsResponse:
      type: object
      properties:
        smsId:
          type: integer
          description: Id of the sms sent
      x-stoplight:
        id: 84pu8e4nff70m
    DocumentCreateRequest:
      allOf:
        - type: object
          required:
            - type
            - content
          properties:
            ownerId:
              $ref: '#/components/schemas/IdentityId'
            type:
              $ref: '#/components/schemas/DocumentType'
            description:
              type: string
              description: Custom description
              example: 'Government ID user #XXX'
            externalData:
              $ref: '#/components/schemas/ExternalData'
            content:
              description: Document file content encoded in base64 format
              type: string
              example: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQK
      x-stoplight:
        id: ls2sk689vszq0
    Document:
      type: object
      required:
        - id
        - ownerId
        - status
        - type
        - links
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyDocumentId'
        ownerId:
          $ref: '#/components/schemas/ReadOnlyIdentityId'
        status:
          $ref: '#/components/schemas/DocumentStatus'
        type:
          $ref: '#/components/schemas/DocumentType'
        description:
          type: string
          description: Custom description
          example: 'Government ID user #XXX'
        uploadDate:
          type: string
          format: date-time
          readOnly: true
        lastUpdateDate:
          type: string
          format: date-time
          readOnly: true
        metadata:
          readOnly: true
          oneOf:
            - $ref: '#/components/schemas/IncorporationCertificateMetadata'
            - $ref: '#/components/schemas/PortraitMetadata'
            - $ref: '#/components/schemas/ProofOfActivityMetadata'
            - $ref: '#/components/schemas/ProofOfBankDomiciliationMetadata'
            - $ref: '#/components/schemas/ProofOfIdentityMetadata'
            - $ref: '#/components/schemas/ProofOfResidenceMetadata'
            - $ref: '#/components/schemas/ProofOfResourcesMetadata'
            - $ref: '#/components/schemas/ProofOfTaxationMetadata'
            - $ref: '#/components/schemas/SignatureMetadata'
            - $ref: '#/components/schemas/OtherMetadata'
          discriminator:
            propertyName: type
            mapping:
              PORTRAIT: '#/components/schemas/PortraitMetadata'
              INCORPORATION_CERTIFICATE: '#/components/schemas/IncorporationCertificateMetadata'
              PROOF_OF_ACTIVITY: '#/components/schemas/ProofOfActivityMetadata'
              PROOF_OF_BANK_DOMICILIATION: '#/components/schemas/ProofOfBankDomiciliationMetadata'
              PROOF_OF_IDENTITY: '#/components/schemas/ProofOfIdentityMetadata'
              PROOF_OF_RESIDENCE: '#/components/schemas/ProofOfResidenceMetadata'
              PROOF_OF_RESOURCES: '#/components/schemas/ProofOfResourcesMetadata'
              PROOF_OF_TAXATION: '#/components/schemas/ProofOfTaxationMetadata'
              SIGNATURE: '#/components/schemas/SignatureMetadata'
              OTHER_DOCUMENTS_LEGAL_ENTITY: '#/components/schemas/OtherMetadata'
              OTHER_DOCUMENTS: '#/components/schemas/OtherMetadata'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `[DocumentType]-content` [GET] Load the document content. DocumentType is the document's type in lower-case.
              * `[DocumentType]-preview` [GET] Get a small sized preview of the document content. DocumentType is the document's type in lower-case.
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: '[DocumentType]-content'
              href: 'https://sandbox.skaleet.com/api/v2/admin/documents/42/content'
            - rel: '[DocumentType]-preview'
              href: 'https://sandbox.skaleet.com/api/v2/admin/documents/42/preview'
      x-stoplight:
        id: q4sixo3gurag5
    DocumentId:
      type: string
      example: DOC123
      description: document id
      x-stoplight:
        id: n82rzpp56p21i
    IdentityId:
      type: string
      example: '1'
      description: Identity unique identifier
      x-stoplight:
        id: fazznyhkkp1tc
    DocumentCollection:
      description: Sorted and paginated list of documents
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of documents
              items:
                $ref: '#/components/schemas/Document'
      x-stoplight:
        id: 6ts0k9qwu4j84
    Response:
      type: object
      properties:
        success:
          type: boolean
      x-stoplight:
        id: g7c1if9lwhkzk
    Adjustment:
      allOf:
        - properties:
            id:
              type: integer
              description: Internal identifier
              example: 42
            creationDate:
              type: string
              format: date-time
              description: Creation date & time (maker)
            makerId:
              type: integer
              description: Maker admin id
            makerLogin:
              type: string
              description: Maker admin login name
            makerComment:
              type: string
              description: Maker admin comment
            validationDate:
              type: string
              format: date-time
              description: Validation date & time (checker)
            checkerId:
              type: integer
              description: Checker admin id
            checkerLogin:
              type: string
              description: Checker admin login name
            checkerComment:
              type: string
              description: Checker admin comment
            sourceRole:
              $ref: ./IdentityRole.yaml
            sourceOwnerName:
              type: string
              description: Source account owner name
            sourceAccountType:
              type: string
              description: Source account type
            sourceAccountNumber:
              type: string
              description: Source account number
            destinationRole:
              $ref: ./IdentityRole.yaml
            destinationOwnerName:
              type: string
              description: Destination account owner name
            destinationAccountType:
              type: string
              description: Destination account type
            destinationAccountNumber:
              type: string
              description: Destination account number
            amount:
              $ref: '#/components/schemas/Amount'
            reason:
              type: string
              description: Reason type
            status:
              $ref: '#/components/schemas/AdjustmentStatus'
            label:
              type: string
              description: Label
            errorMessage:
              type: string
              description: Error message
            fundReservationRef:
              type: string
              description: Reservation (make transaction) reference
            transactionRef:
              type: string
              description: Transaction (check transaction) reference
            reconciliationReference:
              type: string
              description: 'Reconciliation reference, that will be set on adjustment transactions'
            externalReference:
              type: string
              description: 'External reference, that will be set on adjustment transactions'
            srcAccountDescription:
              type: string
              description: 'Operation description, that will be visible on debit transaction'
            dstAccountDescription:
              type: string
              description: 'Operation description, that will be visible on credit transaction'
            entryType:
              type: string
              description: Transaction movement type requested on adjustment creation
              example: TRANSFER
              enum:
                - FEE
                - COMMISSION
                - TAX
                - TRANSFER
                - DISCOUNT
      x-stoplight:
        id: 1tke2gr150fg8
      type: object
    AdjustmentUpdateRequest:
      type: object
      required:
        - action
        - comment
      properties:
        action:
          $ref: '#/components/schemas/AdjustmentAction'
        comment:
          type: string
      x-stoplight:
        id: rw9weofjx643a
    AdjustmentCancelRequest:
      type: object
      required:
        - comment
      properties:
        comment:
          type: string
      x-stoplight:
        id: z1yyepoevfg5a
    SearchRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Filter'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        pager:
          $ref: '#/components/schemas/Pager'
      x-stoplight:
        id: 4ebojqddhotl1
    SearchResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            total:
              type: integer
      x-stoplight:
        id: 5sm4qeoeevpm5
    AdjustmentAddRequest:
      allOf:
        - required:
            - srcAccountNumber
            - dstAccountNumber
            - amount
            - reason
          properties:
            srcAccountNumber:
              type: string
              description: Source account number
              example: '10005462789246'
            dstAccountNumber:
              type: string
              description: Destination account number
              example: '10005462789246'
            amount:
              $ref: ./AmountWithCurrencyNumericAndDisplay.yaml
            reason:
              type: string
              description: Reason type
            label:
              type: string
              description: Maker label
            comment:
              type: string
              description: Maker comment
            reconciliationReference:
              type: string
              description: 'Reconciliation reference, that will be set on adjustment transactions'
            externalReference:
              type: string
              description: 'External reference, that will be set on adjustment transactions'
            srcAccountDescription:
              type: string
              description: 'Operation description, that will be visible on debit transaction'
            dstAccountDescription:
              type: string
              description: 'Operation description, that will be visible on credit transaction'
            entryType:
              type: string
              description: 'Transaction movement type. If not specified, will default to TRANSFER'
              example: TRANSFER
              enum:
                - FEE
                - COMMISSION
                - TAX
                - TRANSFER
                - DISCOUNT
      x-stoplight:
        id: bd6pwduujbudr
      type: object
    AdminUserProfile:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/UserProfileId'
        name:
          type: string
          description: The administrator profile name
        descrition:
          type: string
          description: The administrator profile description
        defaultHomePage:
          type: string
        adminApiUser:
          type: boolean
        documentationEditor:
          type: boolean
        secondaryAccountManagement:
          type: boolean
        changeAccountProduct:
          type: boolean
        ibanView:
          type: boolean
        integrationWrite:
          type: boolean
        integrationView:
          type: boolean
        makerCheckerService:
          $ref: '#/components/schemas/MakerCheckerService'
        clientServices:
          $ref: '#/components/schemas/ClientServices'
        companyServices:
          $ref: '#/components/schemas/CompanyServices'
        merchantServices:
          $ref: '#/components/schemas/MerchantServices'
        agentServices:
          $ref: '#/components/schemas/AgentServices'
        distributorServices:
          $ref: '#/components/schemas/DistributorServices'
        terminalService:
          $ref: '#/components/schemas/TerminalService'
        accountingService:
          $ref: '#/components/schemas/AccountingService'
        screeningService:
          $ref: '#/components/schemas/ScreeningService'
        reportsService:
          $ref: '#/components/schemas/ReportsService'
        interbankingService:
          $ref: '#/components/schemas/InterbankingService'
        adminTransactionsService:
          $ref: '#/components/schemas/AdminTransactionService'
        settingsServices:
          $ref: '#/components/schemas/SettingsService'
        generalSetupService:
          $ref: '#/components/schemas/GeneralSetupService'
        functionalConfigService:
          $ref: '#/components/schemas/FunctionalConfigurationService'
        applicationsService:
          $ref: '#/components/schemas/ApplicationsService'
        analyticsService:
          $ref: '#/components/schemas/AnalyticsService'
        complianceService:
          $ref: '#/components/schemas/ComplianceService'
      x-stoplight:
        id: g3aglpzpmgxam
    Administrator:
      type: object
      required:
        - id
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - readOnly: true
        alias:
          type: string
          example: admin2
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          type: string
          format: email
          example: my.email@example.com
        expirationDate:
          type: string
          format: date-time
        profile:
          $ref: '#/components/schemas/UserProfile'
        status:
          $ref: '#/components/schemas/AdministratorStatus'
      x-stoplight:
        id: z39lrfmniuzis
    DocumentType:
      type: string
      description: Document type
      enum:
        - PORTRAIT
        - SUBSCRIPTION_FORM
        - SIGNATURE
        - PROOF_OF_RESIDENCE
        - PROOF_OF_BANK_DOMICILIATION
        - PROOF_OF_TAXATION
        - PROOF_OF_ACTIVITY
        - PROOF_OF_RESOURCES
        - PROOF_OF_STATUS
        - PHOTO
        - PROOF_OF_IDENTITY
        - OTHER_DOCUMENTS
        - INCORPORATION_CERTIFICATE
        - OTHER_DOCUMENTS_LEGAL_ENTITY
      x-stoplight:
        id: m08inb1gu6ueo
    AddDocumentRequest:
      type: object
      x-stoplight:
        id: l0vywznksuqe3
      required:
        - type
        - data
      properties:
        type:
          $ref: ./DocumentType.yaml
        data:
          type: string
          format: byte
          description: Base64-encoded file
        dataVerso:
          type: string
          format: byte
          description: Base64-encoded file of `PROOF_OF_IDENTITY` document type
    AddDocumentRequestWithOverwrite:
      required:
        - type
        - data
      properties:
        type:
          $ref: ./DocumentType.yaml
        data:
          type: string
          format: byte
          description: Base64-encoded file
        dataVerso:
          type: string
          format: byte
          description: Base64-encoded file of `PROOF_OF_IDENTITY` document type
        forceOverwrite:
          type: boolean
          description: Force overwrite of previous document when a document of the same type belonging to the same identity already exists
      x-stoplight:
        id: rfet89lckwro4
    SearchDocumentResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/SearchResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IdentityDocument'
      x-stoplight:
        id: c55iz1anz56p4
    IdentityDocument:
      type: object
      properties:
        id:
          type: integer
          description: Document id
          readOnly: true
        type:
          allOf:
            - $ref: '#/components/schemas/DocumentType'
            - readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/DocumentStatus'
            - readOnly: true
        ownerId:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - readOnly: true
        ownerRole:
          allOf:
            - $ref: ./IdentityRole.yaml
            - readOnly: true
              example: CLIENT
        statusReason:
          type: string
          readOnly: true
        description:
          type: string
        externalData:
          type: object
          description: Key-value array of freeform external datas
        metadata:
          $ref: '#/components/schemas/metadata'
      x-stoplight:
        id: cpep81nygpjxn
    Agent:
      allOf:
        - $ref: '#/components/schemas/Acceptor'
        - type: object
          properties:
            accounts:
              type: array
              items:
                $ref: '#/components/schemas/Account'
            type:
              $ref: '#/components/schemas/AgentType'
            network:
              type: string
            job:
              type: string
            employer:
              type: string
            account:
              type: string
            organization:
              type: string
            organizationJob:
              type: string
            contractValidated:
              type: boolean
            group:
              type: string
            state:
              $ref: '#/components/schemas/AgentState'
      x-stoplight:
        id: elhsfnwdig10a
    AgentAddRequest:
      allOf:
        - $ref: '#/components/schemas/AcceptorAddRequest'
        - type: object
          required:
            - type
          properties:
            group:
              type: integer
              description: Group id
            type:
              $ref: '#/components/schemas/AgentType'
            network:
              type: string
              description: Shortcode of aggregator or supervisor
            account:
              type: string
            bankName:
              type: string
            job:
              type: string
            employer:
              type: string
              description: Agent code of agent employer
            organization:
              type: string
            organizationJob:
              type: string
      x-stoplight:
        id: jc0rkzz3wclnl
    Audit:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Internal identifier
              example: 42
            targetIdentity:
              type: integer
              description: Identity ID of identity targeted by this action
              example: 42
            dateTime:
              type: string
              format: date-time
              description: Date & time when this action occurred
            role:
              type: string
              description: Role of identity targeted by this action
            login:
              type: string
              description: Login of the admin doing this action
            type:
              type: string
              description: Short description of the action
            scriptName:
              type: string
              description: main script name that triggered this action
            ip:
              type: string
              description: Source IP of the request
              example: 1.2.3.4
            description:
              type: string
              description: Extended description of this action
      x-stoplight:
        id: c2x5e1duvupne
    CardFeatureRequest:
      type: object
      required:
        - feature
        - enabled
      properties:
        feature:
          type: string
          enum:
            - NFC
            - CASH_OPERATION
            - ONLINE_PAYMENT
            - FOREIGN_PAYMENT
        enabled:
          type: boolean
          description: 'if `true`, feature will be enabled. If `false`, feature will be disabled'
      x-stoplight:
        id: 9526f72738wjm
    Card:
      allOf:
        - $ref: '#/components/schemas/Support'
        - type: object
          properties:
            account:
              type: string
              description: Linked account reference
              readOnly: true
            embossedName:
              type: string
              readOnly: true
            embossedReference:
              type: string
              readOnly: true
            panDisplay:
              type: string
              example: 1234 XXXX XXXX XX12
            panAlias:
              type: string
              example: 00c59446-4828-4694-be56-c62ddacbec11
            externalStatus:
              type: string
            externalStatusCreationDate:
              type: string
              format: date-time
              description: Date at which sent the new external status information
              readOnly: true
            externalStatusConfirmationDate:
              type: string
              format: date-time
              description: Date at which the new external status was confirmed by the provider
              readOnly: true
            nfc:
              type: boolean
              description: Are NFC payments allowed ?
            cashOperation:
              type: boolean
              description: Are cash operation (deposit/withdrawal) allowed ?
            onlinePayment:
              type: boolean
              description: Are online payments allowed ?
            foreignPayment:
              type: boolean
              description: Are payments in a foreign country allowed ?
            associationDate:
              type: string
              format: date-time
              readOnly: true
              description: Card association date
            activationDate:
              type: string
              format: date-time
              readOnly: true
              description: Card activation date
            lastCardManagementOperationState:
              $ref: '#/components/schemas/OperationState'
            partnerReference:
              type: string
              description: Card partner's reference
      x-stoplight:
        id: w0kf0k1fk7iv1
    CardFeatureRefuseRequest:
      allOf:
        - $ref: '#/components/schemas/CardFeatureRequest'
        - type: object
          required:
            - error
          properties:
            error:
              type: object
              description: reason to refuse feature
              required:
                - code
                - message
              properties:
                code:
                  type: string
                  example: ABCDE123
                message:
                  type: string
                  example: something went wrong
      x-stoplight:
        id: 8se5d8siujfaf
    CardUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/SupportUpdateRequest'
        - type: object
          properties:
            panDisplay:
              type: string
              example: 1234 XXXX XXXX XX12
              deprecated: true
            panAlias:
              type: string
              example: 00c59446-4828-4694-be56-c62ddacbec11
              deprecated: true
            externalStatus:
              type: string
            nfc:
              type: boolean
              description: Are NFC payments allowed ?
              deprecated: true
            cashOperation:
              type: boolean
              description: Are cash operation (deposit/withdrawal) allowed ?
              deprecated: true
            onlinePayment:
              type: boolean
              description: Are online payments allowed ?
              deprecated: true
            foreignPayment:
              type: boolean
              description: Are payments in a foreign country allowed ?
              deprecated: true
            error:
              type: object
              description: if an error is associated to this card
              required:
                - code
                - message
              properties:
                code:
                  type: string
                  example: ABCDE123
                message:
                  type: string
                  example: something went wrong
            partnerReference:
              type: string
              description: Card partner's reference
      x-stoplight:
        id: vdadjp513mx9y
    CardItem:
      type: object
      required:
        - id
        - accountId
        - productId
        - productName
        - type
        - status
      properties:
        id:
          $ref: '#/components/schemas/CardId'
        accountId:
          allOf:
            - $ref: '#/components/schemas/AccountId'
            - readOnly: true
        productId:
          $ref: '#/components/schemas/ProductId'
        productName:
          type: string
          description: The card product Name
        type:
          $ref: '#/components/schemas/CardType'
        status:
          type: string
          readOnly: true
          enum:
            - NEW
            - PENDING
            - ACTIVE
            - EXPIRED
            - REMOVED
            - BLOCKED
            - OPPOSED
        description:
          type: string
        embossedName:
          type: string
          description: The card holder name
          example: John Doe
        embossedReference:
          type: string
          description: 'Reference at the back of the card, if any'
        panDisplay:
          type: string
          readOnly: true
          example: 5119 77XX XXXX 4431
        createdAt:
          type: string
          readOnly: true
          format: date-time
          description: Card creation date (date in ATOM format)
          example: '2022-01-20T01:23:45+02:00'
        expirationDate:
          type: string
          readOnly: true
          description: Card expiration date (YYYY-MM)
          example: 2022-12
        lastUsageDate:
          type: string
          readOnly: true
          format: date-time
          description: Card last usage date (date in ATOM format)
          example: '2022-01-20T01:23:45+02:00'
        limits:
          type: object
          description: Card's limits
        features:
          type: array
          readOnly: true
          description: Available card features
          items:
            $ref: '#/components/schemas/CardFeature'
        externalId:
          $ref: '#/components/schemas/CardExternalId'
        userId:
          $ref: '#/components/schemas/IdentityId'
        contractId:
          type: string
          description: Card contract associated with the card. Leave empty to create a card in a new contract.
        currency:
          type: string
          readOnly: true
          description: Card and account currency
          example: EUR
        productCode:
          type: string
          readOnly: true
          description: Product Code
          example: PRD1
        profileId:
          allOf:
            - $ref: '#/components/schemas/UserProfileId'
            - readOnly: true
        image:
          type: string
          description: URL used to retrieve image associated with card product
          example: 'https://sandbox.skaleet.com/api/v2/admin/cards/42/image'
        externalData:
          $ref: '#/components/schemas/ExternalData'
        pendingManagementOperation:
          $ref: '#/components/schemas/PendingManagementOperation'
        anonymous:
          type: boolean
          description: Is this an anonymous card ? Anonymous cards don't have customer's name embossed on the physical card
        externalStatus:
          $ref: '#/components/schemas/CardExternalStatus'
        replacedBy:
          description: collection of cards that replaced this card
          required:
            - cardId
            - replacementReason
          type: array
          items:
            description: Test
            type: object
            properties:
              cardId:
                example: 1234
                type: integer
              replacementReason:
                $ref: '#/components/schemas/CardRefabricateReason'
        replacementFor:
          type: string
          description: Id of the card that this card replaced
          example: CARD789
        replacementReason:
          $ref: '#/components/schemas/CardRefabricateReason'
        virtual:
          type: boolean
          description: Is this a virtual card ?
        label:
          type: string
          description: Label of the card
      x-stoplight:
        id: pvuleou9urf2l
    OperationType:
      type: string
      example: card_features_update
      enum:
        - card_activation
        - card_blocking
        - card_code_reissuing
        - card_creation
        - card_features_update
        - card_limits_update
        - card_opposition
        - card_renew
        - card_suppression
        - card_unblocking
        - refabrication
      x-stoplight:
        id: c2eglzp94uud7
    CardManagementOperationProperties:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      additionalProperties: true
      x-stoplight:
        id: 1t73tgfyvhu1q
    CardManagementOperationErrorRequest:
      type: object
      required:
        - code
        - description
      properties:
        code:
          type: integer
          description: error code
        description:
          type: string
          description: error description
      x-stoplight:
        id: comgsmfcnibie
    Operation:
      type: object
      required:
        - cardId
        - operationId
        - operationType
        - operationState
        - createdAt
      properties:
        cardId:
          type: integer
        operationId:
          type: integer
        operationType:
          $ref: '#/components/schemas/OperationType'
        operationState:
          $ref: '#/components/schemas/OperationState'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      x-stoplight:
        id: 4b70apyx56nrc
    CardManagementOperationRefuseRequest:
      type: object
      required:
        - code
        - description
      properties:
        code:
          type: string
          description: refuse code
        description:
          type: string
          description: refuse description
      x-stoplight:
        id: 0oovxf1ikvec5
    DocumentStatus:
      type: string
      enum:
        - NEW
        - PENDING
        - VALIDATED
        - REFUSED
        - UNKNOWN
      x-stoplight:
        id: yhcwz6f3qq8fa
    IdentityDocumentWithContent:
      allOf:
        - $ref: '#/components/schemas/IdentityDocument'
        - type: object
          required:
            - data
          properties:
            data:
              type: string
              format: byte
              description: Base64-encoded file
      x-stoplight:
        id: ffmpkzgzzz0i4
    Client:
      allOf:
        - $ref: '#/components/schemas/LegacyIdentity'
        - type: object
          properties:
            matriculation:
              type: string
            electricityMeter:
              type: string
            waterMeter:
              type: string
            job:
              type: string
            employer:
              type: string
            accounts:
              type: array
              items:
                $ref: '#/components/schemas/Account'
            devices:
              type: array
              items:
                $ref: '#/components/schemas/Device'
            hasWebAccess:
              type: boolean
            parent:
              type: string
      x-stoplight:
        id: uin9ztws5vdvy
    ClientUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/LegacyIdentityUpdateRequest'
        - type: object
          properties:
            cos:
              $ref: '#/components/schemas/UserProfileId'
            cardNumber:
              type: string
            matriculation:
              type: string
            electricityMeter:
              type: string
            waterMeter:
              type: string
            job:
              type: string
            employer:
              type: string
            salary:
              type: number
            infoTagPay:
              type: number
            status:
              type: string
              enum:
                - INITIATED
                - PENDING
            category:
              type: number
            subCategory:
              type: number
            externalId:
              type: string
            webAccess:
              type: boolean
      x-stoplight:
        id: 0b0ilqfi4t98c
    ClientAddRequest:
      allOf:
        - $ref: '#/components/schemas/IdentityAddRequest'
        - type: object
          properties:
            cos:
              $ref: '#/components/schemas/UserProfileId'
            cardNumber:
              type: string
            matriculation:
              type: string
            electricityMeter:
              type: string
            waterMeter:
              type: string
            job:
              type: string
            employer:
              type: string
            salary:
              type: number
            infoTagPay:
              type: number
            status:
              type: string
              enum:
                - INITIATED
                - PENDING
            category:
              type: number
            subCategory:
              type: number
            externalId:
              type: string
            webAccess:
              type: boolean
            parentIdentityId:
              type: number
            mainMobile:
              description: This will create a phone device for the client if platform configuration allows client phone pairing
              type: string
      x-stoplight:
        id: 3zydwzoxe3vx5
    UserId:
      type: integer
      description: user id
      example: 98763
      x-stoplight:
        id: emfjx01lfs5uo
    ApiKey:
      type: object
      required:
        - name
        - scopes
        - id
        - authenticationMode
      properties:
        name:
          type: string
          description: Name given to the key
        scopes:
          type: array
          description: Authentication scopes associated to API key
          items:
            type: string
        id:
          type: string
          description: Id belonging to API key
          readOnly: true
        authenticationMode:
          type: string
          description: Authentication mode for the API
          enum:
            - AUTHORIZATION_CODE_GRANT
            - CLIENT_CREDENTIALS_GRANT
            - PASSWORD_GRANT
        description:
          type: string
          description: Description associated to API key
        isConfidential:
          type: boolean
          readOnly: true
        redirectUris:
          type: array
          items:
            type: string
            format: uri
        ipWhiteList:
          type: array
          items:
            type: string
      x-stoplight:
        id: 9807y8u4dz76d
    Device:
      type: object
      properties:
        id:
          type: integer
        publicKey:
          type: string
        lastActivity:
          type: string
          format: date-time
        creation:
          type: string
          format: date-time
        owner:
          $ref: '#/components/schemas/User'
        type:
          $ref: '#/components/schemas/DeviceType'
        lastUsage:
          type: string
          format: date-time
        activationDate:
          type: string
          format: date-time
        number:
          type: string
        alias:
          type: string
        imei:
          type: string
        sim:
          type: string
        country:
          $ref: '#/components/schemas/Country'
        status:
          $ref: '#/components/schemas/DeviceStatus'
        style:
          $ref: '#/components/schemas/DeviceStyle'
        application:
          type: string
        model:
          type: string
        lang:
          $ref: '#/components/schemas/Lang'
        speakerLevel:
          $ref: '#/components/schemas/DeviceSpeakerLevel'
        acceptSms:
          type: boolean
        session:
          type: boolean
        debug:
          type: boolean
        simBinded:
          type: boolean
        printer:
          $ref: '#/components/schemas/DevicePrinter'
        profile:
          $ref: '#/components/schemas/DeviceProfile'
        api:
          $ref: '#/components/schemas/DeviceApiSettings'
        activationCode:
          type: string
      x-stoplight:
        id: x63acy8b1z8yj
    DeviceUpdateRequest:
      type: object
      x-stoplight:
        id: 16256xbdllj88
      properties:
        alias:
          type: string
        imei:
          type: string
        sim:
          type: string
        country:
          $ref: ./Country.yaml
        status:
          $ref: '#/components/schemas/DeviceStatus'
        style:
          $ref: '#/components/schemas/DeviceStyle'
        application:
          type: string
        model:
          type: string
        lang:
          $ref: ./Lang.yaml
        speakerLevel:
          $ref: '#/components/schemas/DeviceSpeakerLevel'
        acceptSms:
          type: boolean
        session:
          type: boolean
        debug:
          type: boolean
        simBinded:
          type: boolean
        printer:
          $ref: '#/components/schemas/DevicePrinter'
        api:
          $ref: '#/components/schemas/DeviceApiSettings'
    DeviceAddRequest:
      allOf:
        - $ref: '#/components/schemas/DeviceUpdateRequest'
        - type: object
          required:
            - acceptor
            - number
            - profile
            - country
            - status
            - alias
          properties:
            acceptor:
              type: string
              description: the associated agent or merchant shortcode
            number:
              type: string
            profile:
              $ref: '#/components/schemas/DeviceProfile'
      x-stoplight:
        id: oajtek1vsp6o3
    Distributor:
      allOf:
        - $ref: '#/components/schemas/LegacyIdentity'
        - type: object
          properties:
            creation:
              type: string
              format: date-time
            lastUsage:
              type: string
              format: date-time
            settlementMode:
              $ref: '#/components/schemas/SettlementMode'
            settlementNotificationMode:
              $ref: '#/components/schemas/SettlementNotificationMode'
            accounts:
              type: array
              items:
                $ref: '#/components/schemas/Account'
      x-stoplight:
        id: jpif2g9d70ffd
    Input:
      oneOf:
        - $ref: '#/components/schemas/TextInput'
        - $ref: '#/components/schemas/AmountInput'
        - $ref: '#/components/schemas/BoolInput'
        - $ref: '#/components/schemas/DateInput'
        - $ref: '#/components/schemas/DateTimeInput'
        - $ref: '#/components/schemas/DurationInput'
        - $ref: '#/components/schemas/EmailInput'
        - $ref: '#/components/schemas/FileInput'
        - $ref: '#/components/schemas/ImageInput'
        - $ref: '#/components/schemas/FileContentInput'
        - $ref: '#/components/schemas/InputCollection'
        - $ref: '#/components/schemas/IntInput'
        - $ref: '#/components/schemas/IpInput'
        - $ref: '#/components/schemas/SelectInput'
        - $ref: '#/components/schemas/MultiSelectInput'
        - $ref: '#/components/schemas/NumberInput'
        - $ref: '#/components/schemas/PercentInput'
        - $ref: '#/components/schemas/PasswordInput'
        - $ref: '#/components/schemas/PhoneInput'
        - $ref: '#/components/schemas/RateInput'
        - $ref: '#/components/schemas/SelectWithAmountInput'
      discriminator:
        propertyName: type
        mapping:
          TEXT: '#/components/schemas/TextInput'
          COLLECTION: '#/components/schemas/InputCollection'
          AMOUNT: '#/components/schemas/AmountInput'
          BOOL: '#/components/schemas/BoolInput'
          DATE: '#/components/schemas/DateInput'
          DATE_TIME: '#/components/schemas/DateTimeInput'
          DURATION: '#/components/schemas/DurationInput'
          EMAIL: '#/components/schemas/EmailInput'
          FILE: '#/components/schemas/FileInput'
          FILE_CONTENT: '#/components/schemas/FileContentInput'
          IMAGE: '#/components/schemas/ImageInput'
          INT: '#/components/schemas/IntInput'
          IP: '#/components/schemas/IpInput'
          MULTI_SELECT: '#/components/schemas/MultiSelectInput'
          NUMBER: '#/components/schemas/NumberInput'
          PASSWORD: '#/components/schemas/PasswordInput'
          PERCENT: '#/components/schemas/PercentInput'
          PHONE: '#/components/schemas/PhoneInput'
          RATE: '#/components/schemas/RateInput'
          SELECT: '#/components/schemas/SelectInput'
          SELECT_WITH_AMOUNT: '#/components/schemas/SelectWithAmountInput'
          COMPLIANCE: '#/components/schemas/SelectInput'
      x-stoplight:
        id: 9pfz2nj4wewvq
    CreditTransferInstruction:
      type: object
      description: An instruction.
      required:
        - reference
        - scheme
        - status
        - type
        - amount
        - debtor
        - creditor
        - creationDate
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        scheme:
          type: string
          enum:
            - SCT
        type:
          type: string
          description: The type of the instruction
          enum:
            - OUTWARD_CREDIT_TRANSFER
            - INWARD_CREDIT_TRANSFER
        status:
          $ref: '#/components/schemas/OutwardState'
        amount:
          $ref: '#/components/schemas/InstructionAmount'
        debtor:
          $ref: '#/components/schemas/CreditInterbankingUser'
        creditor:
          $ref: '#/components/schemas/CreditInterbankingUser'
        creationDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        strongCustomerAuthentication:
          type: string
          default: 'NO'
        acquisitionChannel:
          $ref: '#/components/schemas/AcquisitionChannel'
        paymentService:
          $ref: '#/components/schemas/PaymentService'
        initiatingParty:
          description: |
            ⚠️ <strong>Initiating party</strong>
            When the initiating party's role is :
            <ul>
              <li><code>ADMINISTRATOR</code> : response is an array of initiating party with the maker and checker administrators</li>
              <li><code>CLIENT|DISTRIBUTOR</code> : response is an initiating party object</li>
            </ul>
          type: object
          discriminator:
            propertyName: role
            mapping:
              ADMIN: '#/components/schemas/makerCheckerInitiatingParty'
              CLIENT: '#/components/schemas/standardInitiatingParty'
              DISTRIBUTOR: '#/components/schemas/standardInitiatingParty'
          oneOf:
            - $ref: '#/components/schemas/standardInitiatingParty'
            - $ref: '#/components/schemas/makerCheckerInitiatingParty'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        exchangeFile:
          type: string
          description: exchange file name
          example: HCCTG9YY.HC_20210914152053
        clearingSystem:
          type: string
          description: clearing system name
          example: STP2
        refusalInformation:
          $ref: '#/components/schemas/RefusalInformation'
        relatedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/RelatedTransaction'
        additionalReferences:
          $ref: '#/components/schemas/AdditionalReferences'
        distributorId:
          type: integer
        exchangeDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        operationCode:
          type: string
          example: SCT
        postingSense:
          type: string
          enum:
            - CT
            - DT
        flowSense:
          type: string
          enum:
            - E
            - R
      x-stoplight:
        id: skk83qab4htn3
    Instruction:
      type: object
      description: An instruction.
      required:
        - reference
        - scheme
        - mandateRelatedInformation
        - status
        - amount
        - debtor
        - creditor
        - creationDate
        - requestedCollectionDate
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        scheme:
          type: string
          enum:
            - CORE
            - B2B
        type:
          type: string
          description: The type of the instruction
          enum:
            - OUTWARD_DEBIT_TRANSFER
            - INWARD_DEBIT_TRANSFER
        mandateRelatedInformation:
          $ref: '#/components/schemas/Mandate'
        status:
          $ref: '#/components/schemas/OutwardState'
        amount:
          $ref: '#/components/schemas/InstructionAmount'
        debtor:
          $ref: '#/components/schemas/InterbankingUser'
        creditor:
          $ref: '#/components/schemas/InterbankingUser'
        creationDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        strongCustomerAuthentication:
          type: string
          default: 'NO'
        acquisitionChannel:
          $ref: '#/components/schemas/AcquisitionChannel'
        paymentService:
          $ref: '#/components/schemas/PaymentService'
        initiatingParty:
          description: |
            ⚠️ <strong>Initiating party</strong>
            When the initiating party's role is :
            <ul>
              <li><code>ADMINISTRATOR</code> : response is an array of initiating party with the maker and checker administrators</li>
              <li><code>CLIENT|DISTRIBUTOR</code> : response is an initiating party object</li>
            </ul>
          type: object
          discriminator:
            propertyName: role
            mapping:
              ADMIN: '#/components/schemas/makerCheckerInitiatingParty'
              CLIENT: '#/components/schemas/standardInitiatingParty'
              DISTRIBUTOR: '#/components/schemas/standardInitiatingParty'
          oneOf:
            - $ref: '#/components/schemas/standardInitiatingParty'
            - $ref: '#/components/schemas/makerCheckerInitiatingParty'
        requestedCollectionDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        exchangeFile:
          type: string
          description: exchange file name
          example: HCCTG9YY.HC_20210914152053
        clearingSystem:
          type: string
          description: clearing system name
          example: STP2
        refusalInformation:
          $ref: '#/components/schemas/RefusalInformation'
        relatedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/RelatedTransaction'
        additionalReferences:
          $ref: '#/components/schemas/AdditionalReferences'
        distributorId:
          type: integer
      x-stoplight:
        id: 3cnih480hc6h0
    CancellationInstruction:
      type: object
      description: A cancellation instruction.
      required:
        - reference
        - status
        - creationDate
        - refusalInformation
        - originalDirectDebitInformation
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        status:
          $ref: '#/components/schemas/OutwardCancellationState'
        type:
          type: string
          description: The type of the instruction
          enum:
            - OUTWARD_DEBIT_TRANSFER_CANCELLATION
        creationDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        refusalInformation:
          $ref: '#/components/schemas/RefusalInformation'
        relatedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/RelatedTransaction'
        originalDirectDebitInformation:
          $ref: '#/components/schemas/OriginalDirectDebitInformation'
        additionalReferences:
          $ref: '#/components/schemas/AdditionalReferencesWithOriginal'
        distributorId:
          type: integer
      x-stoplight:
        id: sq9meqhy156pm
    InstructionType:
      type: string
      description: The type of the instruction
      enum:
        - INWARD_DEBIT_TRANSFER
        - INWARD_CREDIT_TRANSFER
        - INWARD_CREDIT_CANCELLATION
        - OUTWARD_DEBIT_TRANSFER
        - OUTWARD_CREDIT_TRANSFER
        - OUTWARD_DEBIT_TRANSFER_CANCELLATION
        - OUTWARD_CREDIT_TRANSFER_CANCELLATION
      x-stoplight:
        id: 8bzbrcg4i2op5
    OutwardState:
      type: string
      enum:
        - INI_TO_REVIEW
        - INI_CANCELLED
        - INI_REFUSED
        - INITIATED
        - PENDING
        - INT_CHECKING
        - INT_CHECKED
        - ERR_INT_CHECK
        - POSTED
        - INT_POSTED
        - ERR_POSTING
        - ERR_INT_POSTING
        - EXT_CHECKED
        - ERR_EXT_CHECK
        - READY_TO_SEND
        - SENT
        - RECEIVED
        - SETTLED
        - INT_SETTLED
        - EXT_REFUSED
        - REFUSED
        - ERR_REFUSED
        - ERR_SETTLEMENT
        - ERR_REVERSAL
        - ERR_RECEIVED
        - ERR_SENT
        - ORIG_INTERRUPT
        - CANCELLED
        - ERR_CANCELLED
        - CONFIRMED
        - CONTROL_FAILED
        - CONTROL_PASSED
        - ERROR_HOLD
        - DEBIT_HOLD
        - ACCEPTED
        - EXT_PENDING
        - EXT_ACCEPTED
        - ERR_EXECUTED
        - EXECUTED
        - CLEARED
        - EXT_ERROR
        - FREEZED
        - ERR_FREEZED
        - ERR_EXT_PENDING
      x-stoplight:
        id: 780w7jpwagy6l
    InterbankingInstructionCollection:
      description: Sorted and paginated list of recipients
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/InterbankingInstruction'
      x-stoplight:
        id: 8w2y7puue37ow
    OutwardCreditTransfersCancellationInstruction:
      type: object
      description: A outward credit transfers cancellation instruction.
      required:
        - reference
        - status
        - creationDate
        - refusalInformation
        - originalCreditTransferInformation
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        status:
          $ref: '#/components/schemas/OutwardCancellationState'
        type:
          type: string
          description: The type of the instruction
          enum:
            - OUTWARD_CREDIT_TRANSFER_CANCELLATION
            - INWARD_CREDIT_CANCELLATION
        creationDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        refusalInformation:
          $ref: '#/components/schemas/RefusalInformationWithoutRefusalDate'
        relatedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/RelatedTransaction'
        originalCreditTransferInformation:
          $ref: '#/components/schemas/OriginalCreditTransferInformation'
        additionalReferences:
          $ref: '#/components/schemas/AdditionalReferencesWithCancellationId'
        distributorId:
          type: integer
      x-stoplight:
        id: ycgxlqiiy25an
    Merchant:
      allOf:
        - $ref: '#/components/schemas/Acceptor'
        - type: object
          properties:
            company:
              type: string
            title:
              type: string
            rib:
              type: string
            visible:
              type: boolean
            invoiceNumber:
              type: integer
            type:
              type: string
            bill:
              type: object
              properties:
                companyName:
                  type: string
                idFormat:
                  type: string
                groupId:
                  type: number
                typeBillIssuer:
                  type: string
                clientMode:
                  $ref: '#/components/schemas/BillerClientMode'
                displayOrder:
                  type: number
            isGroup:
              type: boolean
            accounts:
              type: array
              items:
                $ref: '#/components/schemas/Account'
      x-stoplight:
        id: j2x623ueevvv9
    MerchantAddRequest:
      allOf:
        - $ref: '#/components/schemas/AcceptorAddRequest'
        - type: object
          required:
            - title
            - login
            - password
            - currency
          properties:
            title:
              type: string
            login:
              type: string
            password:
              type: string
              minLength: 8
            currency:
              $ref: ./CurrencyNumeric.yaml
            visible:
              type: boolean
            company:
              type: string
            rib:
              type: string
            type:
              type: string
            bill:
              type: object
              required:
                - companyName
              properties:
                companyName:
                  type: string
                idFormat:
                  type: string
                groupId:
                  type: number
                displayOrder:
                  type: number
                typeBillIssuer:
                  type: string
                clientMode:
                  $ref: '#/components/schemas/BillerClientMode'
                idLabel:
                  type: string
                inputMask:
                  type: string
                apiUrl:
                  type: string
                logo:
                  type: string
                  format: byte
                disableId:
                  type: boolean
                disableAmount:
                  type: boolean
            online:
              type: object
              properties:
                notificationUrl:
                  type: string
                acceptUrl:
                  type: string
                declineUrl:
                  type: string
                cancelUrl:
                  type: string
                email:
                  type: string
                ip:
                  type: string
                authentication:
                  type: string
                legalInfoUrl:
                  type: string
                logo:
                  type: string
                  format: byte
            isGroup:
              type: boolean
      x-stoplight:
        id: ncen528ydvr2r
    PricingProfile:
      type: object
      description: A pricing profile with all associated pricings
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific pricing profile
          example: 6
        name:
          type: string
          description: Name of the pricing profile
          example: MyPricingProfile
        comment:
          type: string
          description: A comment about the pricing profile
          example: This is a pricing profile
        pricings:
          type: array
          items:
            $ref: '#/components/schemas/Pricing'
      x-stoplight:
        id: se9v0xaxnbm7f
    Pricing:
      type: object
      description: A pricing
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific pricing
          example: 7
        type:
          type: string
          example: fee
          enum:
            - fee
            - commission
        media:
          type: string
          example: API
          enum:
            - SMS
            - USSD
            - POS
            - WEB
            - API
            - APP
            - ONLINE
            - ALL
            - UNKNOWN
        operation:
          type: string
          example: BUY_DEPOSIT
          enum:
            - BUY_DEPOSIT
            - WALLET_TO_BANK_ARCHIVE
            - AGENT_BALANCE
            - BLOCK_ACCOUNT
            - CREDIT_BLOCK_ACCOUNT
            - DEBIT_BLOCK_ACCOUNT
            - FUNDS_ISOLATION
            - ACCOUNT_FROM_EXTERNAL
            - ACCOUNT_TO_EXTERNAL
            - ACCOUNT_TO_EXTERNAL_TRF
            - EXTERNAL_TO_MONEYPOT
            - USER_CREATION
            - CLIENT_HISTORY
            - ETM_SCREENING
            - CLIENT_BALANCE
            - UNBLOCK_ACCOUNT
            - EXTERNAL_FROM_MONEYPOT
            - FUNDS_RELEASE
            - CASHIN
            - CASH_TO_EXTERNAL_TRF
            - CLOSE_ACCOUNT
            - FOREX
            - MAINTENANCE_PAYMENT
            - EXTERNAL
            - AGENT_HISTORY
            - POSTING
            - DISTRIBUTOR_POSTING
            - CLIENT_ENROLLMENT
            - MARK
            - OPEN_ACCOUNT
            - CLIENT_VALIDATION
            - PAYMENT
            - SALARY_DISBURSEMENT
            - AGIOS_PAYMENT
            - ONLINE_PAYMENT
            - PAYBILL_ACCOUNT
            - PAYBILL_CASH
            - AID_PAYMENT
            - STANDING_ORDER_PAYMENT
            - DIRECT_DEBIT_IN
            - DIRECT_DEBIT_OUT
            - ETM_SCREENING_FAIL
            - CASHOUT
            - CASHOUT_FROM_TRANSIT
            - EXTERNAL_TRF_WITHDRAW
            - REVERSAL
            - SETTLEMENT_TO_CASH
            - SETTLEMENT_TO_BANK
            - SETTLEMENT_TO_ACCOUNT
            - ADJUSTMENT
            - PAYMENT_FUNDS_RESERVATION
            - CASHOUT_FUNDS_RESERVATION
            - SALARY_TO_CASH
            - SALARY_TO_ACCOUNT
            - EXTERNAL_FROM_ACCOUNT
            - TRANSIT_TO_ACCOUNT
            - CASHIN_TO_TRANSIT
            - BANK_TO_WALLET
            - EXTERNAL_TO_ACCOUNT
            - EXTERNAL_TRF_TO_ACCOUNT
            - CASHOUT_FROM_EXTERNAL_TRF
            - WALLET_TO_BANK
            - ACCOUNT_TO_TRANSIT
            - ACCOUNT_TO_ACCOUNT
            - ON_US_DIRECT_DEBIT
            - ACCOUNT_TO_DEDICATED
            - ETM_SCREENING_SUCCESS
            - ETM_SCREENING_FAIL_TO_SUCCESS
            - SELL_DEPOSIT
            - CREDIT_TRANSFER_IN
            - CREDIT_TRANSFER_OUT
            - MAD_APPROVAL
            - MAD_REFUSAL
            - MAD_CREATION
        applicableTo:
          type: string
          example: agent
          enum:
            - agent
            - 'agent:parent'
            - 'agent:supervisor'
            - 'agent:inferior'
            - 'agent:superior'
            - 'agent:equal'
            - default
            - parent
            - 'parent:supervisor'
            - company
            - 'agent:superior:supervisor'
            - 'agent:inferior:supervisor'
            - 'agent:equal:supervisor'
            - merchant
            - distributor
        currency:
          $ref: '#/components/schemas/Currency'
        description:
          type: string
          example: This is a description of the pricing
        charges:
          type: array
          items:
            $ref: '#/components/schemas/Charge'
      x-stoplight:
        id: h7uoudjj50s4l
    ProfileId:
      type: integer
      example: 1
      description: ID of a Profile.
      x-stoplight:
        id: lsqnvcwbt2hv3
    ProfileCollection:
      description: Sorted and paginated list of Identities
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of Profiles
              items:
                $ref: '#/components/schemas/UserProfile'
      x-stoplight:
        id: 121zdk0g2mlfy
    Sms:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Internal identifier
              example: 42
            sender:
              type: string
              description: Sender name/msisdn
              example: '33123459789'
            receiver:
              type: string
              description: Receiver name/msisdn
              example: '33123456789'
            event:
              type: string
              description: Sms status
              example: SENT
            source:
              type: string
              description: Locale key for SMS generation
              example: sms_clientsubscription
            content:
              type: string
              description: Content of the sms
              example: Welcome to your new account
            creation:
              type: string
              format: date-time
              description: Date and time of SMS generation
            lastUsage:
              type: string
              format: date-time
              description: Date and time of last SMS usage
            usageNumber:
              type: integer
              description: Number of usages of this SMS
              example: 2
            apiId:
              type: string
              description: SMS reference for the provider
              example: abcd1234-456789def-048.42
            provider:
              type: string
              description: Provider name
              example: TagSmsManager
            error:
              type: string
              description: 'Description of the error, if applicable'
      x-stoplight:
        id: ra2sb892f717w
    TransactionAttachmentId:
      type: string
      description: Transaction attachment unique identifier
      readOnly: true
      example: TRXATT123
      x-stoplight:
        id: eoumis4962ad9
    Transaction:
      type: object
      description: 'A transaction. Note that depending on the transation type, not all of the contributions will be present.'
      properties:
        id:
          type: integer
          description: Unique identifier representing a specific transaction
          example: 78654
        type:
          $ref: '#/components/schemas/TransactionType'
        date:
          type: string
          format: date-time
        amount:
          $ref: '#/components/schemas/Amount'
        currency:
          $ref: '#/components/schemas/Currency'
        label:
          type: string
          example: Payment
        shortDescription:
          type: string
          example: 'Payment of 13,37 € at E. Lefevre S.A.'
        description:
          type: string
          example: 'Payment of 13,37 € at E.'
        media:
          $ref: '#/components/schemas/Media'
        authMode:
          $ref: '#/components/schemas/AuthMode'
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        reference:
          type: string
        externalId:
          type: string
          description: 'External ID of the transaction, if available, or null'
          readOnly: true
        qualified:
          type: boolean
          example: false
          description: Whether the transaction's amount is fully qualified or not. Is only returned if the admin has the right to access spendings
        justified:
          type: boolean
          example: false
          description: Whether the transaction has at least one attachment to justify it. Is only returned if the admin has the right to access spendings
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalData'
            - type: object
              readOnly: true
        contributions:
          type: array
          items:
            $ref: '#/components/schemas/Contribution'
        accountingEntries:
          type: array
          items:
            $ref: '#/components/schemas/AccountingEntry'
        locked:
          type: boolean
          description: 'If true, spendings details of this transaction can no longer be updated'
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getSpendings` [GET] Get existing spendings of this transaction. (Only present if at least one spending detail has been created)
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getSpendings
              href: 'https://sandbox.skaleet.com/api/v2/admin/tagpay/transactions/42/spendings'
      x-stoplight:
        id: athf9y56hio47
    WebhookStatus:
      type: string
      description: Webhook status
      enum:
        - success
        - failure
        - to_be_replayed
        - initiated
      x-stoplight:
        id: e1stmxvfklvv2
    WebhookId:
      type: string
      example: b8219c0f-4230-40e9-85c2-388146b3b71b
      x-stoplight:
        id: ucxhv4e8z9xli
    DateAtom:
      type: string
      format: date-time
      description: 'Date in Atom format (exemple 2000-01-20T12:00:00Z)'
      x-stoplight:
        id: 4u4z0s1m5d1h1
    DocumentTypeCollection:
      description: Sorted and paginated list of Document type
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Document type
              items:
                $ref: '#/components/schemas/DocumentType'
      x-stoplight:
        id: f8r8g55ioq801
    DocumentPackage:
      type: object
      properties:
        code:
          type: string
          example: ENROL1
        name:
          type: string
          example: Package for enrollment
        legalType:
          type: string
          enum:
            - NATURAL_PERSON
            - LEGAL_ENTITY
          example: NATURAL_PERSON
      x-stoplight:
        id: q6hj9f432s1br
    DocumentPackageCollection:
      description: Sorted and paginated list of Document package
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: Collection of Document package
              items:
                $ref: '#/components/schemas/DocumentPackage'
      x-stoplight:
        id: wznsryzpxmp83
    LegalType:
      type: string
      description: |
        The user can be a natural person (physical person with firstname and lastname) or a legal entity (company or non-profit with legalName)
      enum:
        - NATURAL_PERSON
        - LEGAL_ENTITY
      x-stoplight:
        id: jwbrzfatyaeu4
    ExternalId:
      type: string
      description: External id (from the calling system)
      example: EXT123456789
      x-stoplight:
        id: qqhbmklwyfai5
    Country:
      description: Numeric iso code of associated country (3 digits)
      type: string
      minLength: 3
      maxLength: 3
      example: '250'
      x-stoplight:
        id: nwmkxg97pnez5
    Lang:
      type: string
      description: Locale identifier
      format: '[a-z]{2}_[A-Z]{2}'
      example: fr_FR
      x-stoplight:
        id: ghrv4sdcxs8mu
    PersonTitle:
      description: Person title
      type: string
      enum:
        - MR
        - MS
        - MRS
      example: MR
      x-stoplight:
        id: 0efcjxtgd65vo
    IdentityStatusEnum:
      type: string
      enum:
        - INITIATED
        - PENDING
        - OPENED
        - BLOCKED
        - CLOSED
        - INIBLOCKED
      x-stoplight:
        id: 09i6vphxcmh5r
    IdentityCreationRequest:
      type: object
      description: An Identity creation form
      required:
        - legalType
        - kyc
      properties:
        legalType:
          $ref: '#/components/schemas/LegalType'
        kyc:
          $ref: '#/components/schemas/Kyc'
        profileId:
          $ref: '#/components/schemas/ProfileId'
        externalId:
          $ref: '#/components/schemas/ExternalId'
        distributorId:
          $ref: '#/components/schemas/DistributorId'
        relations:
          $ref: '#/components/schemas/CreateIdentityRelationCollection'
      x-stoplight:
        id: byxkjwmozktta
    IdentityUpdateRequest:
      type: object
      description: Identity update form
      properties:
        kyc:
          $ref: '#/components/schemas/Kyc'
        externalId:
          $ref: '#/components/schemas/ExternalId'
      x-stoplight:
        id: p03uj1s5cop2s
    LegacyIdentity:
      type: object
      required:
        - role
      properties:
        id:
          $ref: ./ReadOnlyIdentityId.yaml
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        postName:
          type: string
        maidenName:
          type: string
        alias:
          type: string
        information:
          type: string
        role:
          $ref: ./IdentityRole.yaml
        cos:
          $ref: '#/components/schemas/UserProfile'
        email:
          type: string
          format: email
          example: my.email@example.com
        address:
          type: string
        city:
          type: string
        zipcode:
          type: string
        country:
          $ref: ./Country.yaml
        district:
          type: string
        province:
          type: string
        region:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        nationality:
          type: string
          example: French
        otherNationality:
          type: string
          example: German
        lang:
          $ref: ./Lang.yaml
        idNumber:
          type: string
          example: AZE123456789
        idVerified:
          type: boolean
        emailVerified:
          type: boolean
        contactPhone:
          $ref: ./Phone.yaml
        birthDate:
          type: string
          format: date-time
        birthPlace:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        bankName:
          type: string
          example: My Commercial Bank
        kyc:
          type: object
          description: An object containing values for KYC. Properties can be set with platform configuration
          example:
            icsCode: ICS123456
            building: D2
            mainBusiness: Car seller
          readOnly: true
        legalType:
          $ref: ./LegalType.yaml
        externalId:
          $ref: '#/components/schemas/ExternalId'
        status:
          allOf:
            - $ref: '#/components/schemas/IdentityStatus'
            - readOnly: true
        distributorId:
          allOf:
            - $ref: '#/components/schemas/UserId'
            - description: Distributor Id
              readOnly: true
        creation:
          type: string
          format: date-time
        lastUsage:
          type: string
          format: date-time
        homeAddress:
          $ref: '#/components/schemas/UserAddress'
        taxAddress:
          $ref: '#/components/schemas/UserAddress'
        activitySectorCode:
          type: string
          example: ACTIVITY12345
      x-stoplight:
        id: 31xllhw4hwv2l
    UserAddress:
      type: object
      properties:
        line1:
          type: string
        line2:
          type: string
        zipcode:
          type: string
        district:
          type: string
        province:
          type: string
        region:
          type: string
        city:
          type: string
        country:
          $ref: ./Country.yaml
      example:
        line1: 88 rue du dôme
        line2: Apt 3
        zipcode: '92100'
        province: Ile-de-france
        city: Boulogne-Billancourt
        country: '250'
      x-stoplight:
        id: elcwxe34zk3wa
    LegacyIdentityUpdateRequest:
      type: object
      x-stoplight:
        id: c8jy6wf6ox2pu
      properties:
        firstName:
          type: string
          example: John
        name:
          type: string
          example: Doe
          description: Last name
        postName:
          type: string
        maidenName:
          type: string
        alias:
          type: string
        information:
          type: string
          maxLength: 512
        email:
          type: string
        address:
          type: string
        city:
          type: string
        zipcode:
          type: string
        country:
          $ref: ./Country.yaml
        district:
          type: string
        province:
          type: string
        region:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        nationality:
          type: string
        lang:
          $ref: ./Lang.yaml
        idNumber:
          type: string
        contactPhone:
          type: string
        birthDate:
          type: string
          format: date-time
        birthPlace:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        bankName:
          type: string
        kyc:
          type: object
          description: An object containing values for KYC. Properties can be set with platform configuration
          example:
            icsCode: ICS123456
            building: D2
            mainBusiness: Car seller
    UserProfile:
      description: User habilitation profile
      type: object
      required:
        - id
        - name
        - description
        - role
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyUserProfileId'
        name:
          type: string
          description: The user Profile name
          example: User Profile 42
        description:
          type: string
          description: The user Profile description
          example: User Profile 42 description
        role:
          $ref: ./IdentityRole.yaml
        ownerId:
          $ref: '#/components/schemas/WriteOnlyIdentityId'
        owner:
          $ref: '#/components/schemas/UserProfileOwner'
      x-stoplight:
        id: 33iil12bfbmpi
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: The error numeric code
        message:
          type: string
          description: The error's localized message
        hint:
          type: string
          description: 'On certain types of error, a localized message will be sent to indicate a way to solve the error'
      example:
        code: 1337
        message: Something went wrong because requirement X was not met.
        hint: Field X does not match the field requirements
      x-stoplight:
        id: 9ybfj3durv38p
    ChangeIdentityProfileActionRequest:
      type: object
      required:
        - profileId
      properties:
        profileId:
          $ref: '#/components/schemas/ProfileId'
      x-stoplight:
        id: 0pl1qrihbxeng
    InputId:
      type: string
      description: KYC field identifier
      example: FIELD123
      x-stoplight:
        id: k7hte4d6f6sy1
    PossibleValueCollection:
      type: object
      properties:
        inputId:
          $ref: '#/components/schemas/InputId'
        userInput:
          type: string
          description: 'Current user input, to be completed'
        possibleValues:
          type: array
          description: List of values found for auto-completion
          items:
            $ref: '#/components/schemas/PossibleValue'
      x-stoplight:
        id: 70djp0fcyo9ac
    RecipientId:
      type: string
      description: Recipient ID
      example: REC2
      x-stoplight:
        id: nbirgvzi2jh7z
    RecipientName:
      type: string
      description: 'Recipient alias, if any'
      example: John Doe
      x-stoplight:
        id: 6g6xw72l8dcfx
    RecipientCollection:
      description: Sorted and paginated list of recipients
      allOf:
        - $ref: '#/components/schemas/Collection'
        - type: object
          properties:
            items:
              type: array
              description: collection of recipients
              items:
                $ref: '#/components/schemas/Recipient'
      x-stoplight:
        id: r0q22due74op6
    Recipient:
      type: object
      description: at least one of phone or iban is required
      required:
        - id
        - name
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/RecipientId'
            - readOnly: true
        name:
          type: string
          description: 'Recipient alias, if any'
          example: John Doe
        iban:
          $ref: '#/components/schemas/IBAN'
        accountReference:
          type: string
          description: External account reference. BIC is optional when using accountReference.
        bic:
          $ref: '#/components/schemas/BIC'
        bankName:
          type: string
          description: Name of the recipient bank
        phone:
          $ref: '#/components/schemas/Phone'
        externalData:
          allOf:
            - $ref: '#/components/schemas/ExternalData'
            - type: object
              description: Additional information on recipient
              example:
                firstname: John
                lastname: Doe
                countryCode: FR
        counterparty:
          type: boolean
          description: Indicate if the Recipient is an External Counterparty for the owner
      x-stoplight:
        id: 0dt9m2nghtsrj
    IdentityStatusArray:
      type: array
      description: List of Credential status
      items:
        $ref: '#/components/schemas/IdentityStatus'
      x-stoplight:
        id: yg9int2jsjz2c
    ChangeIdentityStatusActionRequest:
      type: object
      required:
        - status
        - reason
      properties:
        status:
          $ref: '#/components/schemas/IdentityStatusEnum'
        reason:
          type: string
          description: the reason of the change
      x-stoplight:
        id: mcjwgjnvbik8r
    JobProgress:
      type: object
      properties:
        name:
          type: string
          example: myJob
          description: name of job
        state:
          $ref: '#/components/schemas/JobStateType'
        step:
          type: integer
          example: 5
          description: actual step
        stepNumber:
          type: integer
          example: 5
          description: step number
        duration:
          type: integer
          example: 10
          description: duration in second
        lastExecutionId:
          type: string
          example: '20220315143826'
          description: id of the last execution
      x-stoplight:
        id: chymtwq6qxofd
    JobRun:
      type: object
      properties:
        name:
          type: string
          example: myJob
          description: name of job
        state:
          $ref: '#/components/schemas/JobStateType'
        lastExecutionId:
          type: string
          example: '20220315143826'
          description: id of the last execution or null
      x-stoplight:
        id: yvppv776s7af0
    ExecutionJobCollection:
      description: list of execution for a job
      allOf:
        - type: object
          properties:
            items:
              type: array
              description: collection of execution
              items:
                $ref: '#/components/schemas/ExecutionJob'
      x-stoplight:
        id: 0obg9wk3ij8p1
    ScoreCreate:
      type: object
      required:
        - code
        - name
        - type
      properties:
        code:
          $ref: '#/components/schemas/ScoreCode'
        name:
          $ref: '#/components/schemas/Name'
        type:
          description: Whether the score is internal or external to CBS
          type: string
          enum:
            - INTERNAL
            - EXTERNAL
        limit:
          $ref: '#/components/schemas/Limit'
        threshold:
          type: object
          properties:
            accept:
              type: integer
              example: 750
              description: From this score it is accepted (must be superior to refuse)
            refuse:
              type: integer
              example: 149
              description: From this score it is refused (must be inferior to max)
        steps:
          type: array
          description: List of steps
          items:
            $ref: '#/components/schemas/Step'
        variables:
          type: array
          description: The list of variables that will allow the calculation of the score
          items:
            $ref: '#/components/schemas/Variable'
        isInverted:
          type: boolean
          example: true
          description: 'If set to true, a high score value is considered bad, if set to false, a low score value is considered bad'
      x-stoplight:
        id: 7fgxpqpkgpgz3
    ScoreOutput:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ScoreCode'
        name:
          $ref: '#/components/schemas/Name'
        type:
          description: Whether the score is internal or external to CBS
          type: string
          enum:
            - INTERNAL
            - EXTERNAL
        limit:
          $ref: '#/components/schemas/Limit'
        threshold:
          type: object
          properties:
            accept:
              type: integer
              example: 750
              description: From this score it is accepted (must be superior to refuse)
            refuse:
              type: integer
              example: 149
              description: From this score it is refused (must be inferior to max)
        steps:
          type: array
          description: List of steps
          items:
            $ref: '#/components/schemas/Step'
        links:
          type: array
          description: What the score is linked to
          items:
            $ref: '#/components/schemas/ScoreLink'
        variables:
          type: array
          description: The list of variables that will allow the calculation of the score
          items:
            $ref: '#/components/schemas/Variable'
        isInverted:
          type: boolean
          example: true
          description: 'If set to true, a high score value is considered bad, if set to false, a low score value is considered bad'
      x-stoplight:
        id: moj8qun1jywj6
    ScoreEdit:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Name'
        limit:
          $ref: '#/components/schemas/Limit'
        threshold:
          type: object
          properties:
            accept:
              type: integer
              example: 750
              description: From this score it is accepted (must be superior to refuse)
            refuse:
              type: integer
              example: 149
              description: From this score it is refused (must be inferior to max)
        steps:
          type: array
          description: List of steps
          items:
            $ref: '#/components/schemas/Step'
        variables:
          type: array
          description: The list of variables that will allow the calculation of the score
          items:
            $ref: '#/components/schemas/Variable'
      x-stoplight:
        id: jsv5dgq8hz1h3
    ScoreLink:
      type: object
      required:
        - type
        - id
      properties:
        type:
          type: string
          description: The kind of thing linked to the score
          example: product
        id:
          type: string
          description: The ID of the thing linked to the score
          example: PRO123
      x-stoplight:
        id: l15k14yhy1wo8
    ScoreResultCreate:
      type: object
      required:
        - scoreCode
        - calculationParameters
      properties:
        scoreCode:
          type: string
          description: Code of the score
          example: SCORE_CREDIT_LOAN
        calculationParameters:
          description: List of calculation parameters. Each calculation parameter name matches a score variable. Each calculation parameter data matches a score value.
          items:
            type: object
            required:
              - name
              - data
            properties:
              name:
                type: string
                example: MARITAL_STATUS
                description: The parameter name. It should match a score variable.
              data:
                example: MARRIED
                description: The parameter data. It should match a score value.
      x-stoplight:
        id: mzn3cac8srf9l
    ScoreResultOutput:
      type: object
      required:
        - id
        - calculatedAt
        - finalScore
        - intermediateResults
        - matchingStep
        - scoreLimits
      properties:
        id:
          $ref: '#/components/schemas/ScoreResultId'
        calculatedAt:
          type: string
          format: ATOM
          description: The date time the result was calculated
          example: '2004-02-12 15:19:21+01:00'
        finalScore:
          $ref: '#/components/schemas/ScoreFinalValue'
        scoreLimits:
          properties:
            min:
              type: integer
              description: The score minimum's limit
              example: 100
            max:
              type: integer
              description: The score maximum's limit
              example: 800
          description: The score's limits
        thresholds:
          properties:
            refuse:
              type: integer
              description: 'Under or equal this bound, the refuse threshold is reached'
              example: 200
            accept:
              type: integer
              description: 'Above or equal this bound, the acceptance threshold is reached'
              example: 600
          description: The score's thresholds
        matchingStep:
          type: object
          description: The score's step matching the calculation result
          properties:
            code:
              type: string
              description: The step's code
              example: CRDT-1
            translations:
              type: object
              description: The translations of the step
              additionalProperties:
                type: string
                description: The locale of the step
              example:
                fr_FR: Correct
                en_US: Fair
            min:
              type: integer
              description: The step's minimal score
              example: 200
            max:
              type: integer
              description: The step's maximal score
              example: 500
            color:
              type: string
              description: The step's color
              example: '#f0c2e8'
        intermediateResults:
          type: array
          description: The score of each calculation parameter
          items:
            type: object
            properties:
              calculationParameter:
                type: object
                description: The calculation parameter that what given as input
                properties:
                  name:
                    type: string
                    example: MARITAL_STATUS
                    description: The calculation parameter name that what given as input
                  data:
                    type: string
                    example: MARRIED
                    description: The calculation parameter data that what given as input
              intermediateScore:
                type: integer
                description: The score for this calculation parameter
                example: 350
              matchedVariable:
                type: boolean
                description: Does the given calculation parameter matched a variable in the score?
                example: true
              matchedValue:
                type: boolean
                description: Does the given calculation parameter matched a value in the score?
                example: true
              variableTranslations:
                type: object
                description: The translations of the variable's name matching the calculation parameter
                additionalProperties:
                  type: string
                  description: The locale of the variable's name
                example:
                  fr_FR: Statut marital
                  en_US: Marital status
              valueTranslations:
                type: object
                description: The translations of the value that matched the calculation parameter in case of a list value
                additionalProperties:
                  type: string
                  description: The locale of the value
                example:
                  fr_FR: Marié
                  en_US: Married
      x-stoplight:
        id: i6sxv0o5dvdxb
    ApiKeyWithSecret:
      type: object
      required:
        - id
        - secret
      properties:
        id:
          type: string
          description: API key id
        secret:
          type: string
          description: Secret tied to API key
      x-stoplight:
        id: pmgi7k2an2zf5
    InvalidRequestError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Invalid value for parameter "parameter_name"
      x-stoplight:
        id: udvcz3umuihok
    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 12345
            message: Client is not allowed to make this action
      x-stoplight:
        id: 70v9tjmqxiic8
    SpendingDetailsList:
      type: array
      description: List of spending details
      items:
        $ref: '#/components/schemas/SpendingDetail'
      x-stoplight:
        id: oqr0cnhu4qg6l
    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 0
            message: Resource has not been found
      x-stoplight:
        id: pqcxfi0k3hq84
    TransactionAttachmentsList:
      type: array
      description: List of transaction's attached documents
      items:
        $ref: '#/components/schemas/TransactionAttachment'
      x-stoplight:
        id: 3olktoekk3kq5
    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - example:
            code: 9
            message: You don't have access to this ressource
      x-stoplight:
        id: yyu9e0gy0mpqf
    Link:
      type: object
      readOnly: true
      required:
        - rel
        - href
      properties:
        rel:
          type: string
          description: Link relation
        href:
          type: string
          format: uri
          description: Location URI
      x-stoplight:
        id: e3102c22dmuzg
    WebhookWithCalls:
      allOf:
        - $ref: '#/components/schemas/Webhook'
        - type: object
          required:
            - calls
          properties:
            calls:
              type: array
              items:
                $ref: '#/components/schemas/WebhookCall'
      x-stoplight:
        id: vvugisyb98i85
    ConflictError:
      oneOf:
        - $ref: '#/components/schemas/Error'
        - $ref: '#/components/schemas/EmbeddedError'
      x-stoplight:
        id: tnjowmbhvgnu8
    AgentAttributes:
      description: Agent specific attributes
      type: object
      properties:
        category:
          type: string
        job:
          type: string
        organization:
          type: string
        organizationJob:
          type: string
        contractDate:
          type: string
          format: date-time
          description: Use ISO date-time format
        information:
          type: string
          maxLength: 512
        email:
          type: string
          format: email
          description: Agent contact e-mail address
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        zipcode:
          type: string
        country:
          type: string
          minLength: 3
          maxLength: 3
          description: ISO numeric country code
          example: '826'
        district:
          type: string
        province:
          type: string
        region:
          type: string
        latitude:
          type: number
          description: Agent geographical location latitude
        longitude:
          type: number
          description: Agent geographical location longitude
        lang:
          type: string
          description: Agent contact language
          example: en_US
        contactPhone:
          type: string
          description: Agent contact phone number (in international format)
        isExternalSystem:
          type: boolean
          description: Agent owning this attribute is considered as an external system by the platform
      x-stoplight:
        id: w2ak4ter4o3td
    ExternalData:
      type: object
      description: Set of key-value pairs that you can attach to an object. This can be useful for storing your additional information about the object in a structured format.
      example:
        key1: value1
        key2: value2
      x-stoplight:
        id: ur3unr8me0zpf
    ReadOnlyDocumentId:
      allOf:
        - $ref: '#/components/schemas/DocumentId'
        - readOnly: true
      x-stoplight:
        id: zco6887pr4vaz
    ReadOnlyIdentityId:
      allOf:
        - $ref: '#/components/schemas/IdentityId'
        - readOnly: true
          example: '42'
      x-stoplight:
        id: un9l2giwderfg
    IncorporationCertificateMetadata:
      type: object
      description: Document metadatas for INCORPORATION_CERTIFICATE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        denomination:
          type: string
        legalForm:
          type: string
        numberOfEmployees:
          type: string
        registrationDate:
          type: string
          format: date
        registrationNumber:
          type: string
        registrationPlace:
          type: string
        shareCapital:
          type: string
        zipcode:
          type: string
      x-stoplight:
        id: 4s265b3q8uy00
    PortraitMetadata:
      type: object
      description: Document metadatas for PORTRAIT documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identityPhotoMatch:
          type: string
      x-stoplight:
        id: hanx50ar28be3
    ProofOfActivityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_ACTIVITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        grossSalary:
          type: string
        lastName:
          type: string
        netSalary:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: qnarnb0yqgt6a
    ProofOfBankDomiciliationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_BANK_DOMICILIATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        bic:
          type: string
        firstName:
          type: string
        iban:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: rkk2zj3e46qej
    ProofOfIdentityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_IDENTITY documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        birthDate:
          type: string
          format: date
        birthPlace:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        firstName:
          type: string
        idNumber:
          type: string
        issuingAuthority:
          type: string
        issuingCountry:
          type: string
        lastName:
          type: string
        mrz:
          type: string
        nationality:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: dvx4mig7pg3ss
    ProofOfResidenceMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESIDENCE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        contractNumber:
          type: string
        contractType:
          type: string
        country:
          type: string
        emissionDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: js3bwahvb14t0
    ProofOfResourcesMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESOURCES documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        resourceAmount:
          type: string
      x-stoplight:
        id: avu851cjuoqcw
    ProofOfTaxationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_TAXATION documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        taxAmount:
          type: string
        taxNumber:
          type: string
      x-stoplight:
        id: 400ks3uhmo3j1
    SignatureMetadata:
      type: object
      description: Document metadatas for SIGNATURE documents
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
        identitySignatureMatch:
          type: string
      x-stoplight:
        id: dy5j3dca0syia
    OtherMetadata:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/DocumentType'
      x-stoplight:
        id: aru91uq75ss0n
    Collection:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
        count:
          type: integer
          description: the total count of objects in collection
          minimum: 0
        offset:
          type: integer
          description: Pagination start (from 0)
          minimum: 0
          default: 0
        limit:
          type: integer
          description: Number of results to display (default 20)
          minimum: 0
          maximum: 100
          default: 20
        sort:
          type: string
          description: Field to define sort order
          default: id
      x-stoplight:
        id: jl1xgstlfn7an
    Amount:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
        display:
          type: string
          example: '13,37 €'
      x-stoplight:
        id: ljutd43albah6
    AdjustmentStatus:
      type: string
      enum:
        - PENDING
        - CANCELLED
        - REFUSED
        - VALIDATED
        - ERROR
      x-stoplight:
        id: dc116u3kkzk3q
    AdjustmentAction:
      type: string
      enum:
        - REFUSE
        - VALIDATE
      x-stoplight:
        id: boy3j1t8uqbdm
    Filter:
      type: object
      description: An object to filter results according to various criteria
      required:
        - type
      properties:
        value:
          type: string
      x-stoplight:
        id: emcc5h55pdlz2
    Order:
      type: object
      properties:
        attribute:
          type: string
        direction:
          type: string
          enum:
            - ASC
            - DESC
      required:
        - attribute
      x-stoplight:
        id: 138pvswr6odzf
    Pager:
      type: object
      properties:
        from:
          type: integer
        size:
          type: integer
      x-stoplight:
        id: y4e3tluhssnr9
    UserProfileId:
      type: string
      example: '1'
      description: Id for a profile.
      x-stoplight:
        id: 25twfrdu3g3cx
    MakerCheckerService:
      type: object
      properties:
        adminMaker:
          type: boolean
        adminChecker:
          type: boolean
        adminMakerCreateDestroy:
          type: boolean
        adminCheckerCreateDestroy:
          type: boolean
      x-stoplight:
        id: ie5p2rr5al2de
    ClientServices:
      type: object
      properties:
        clientView:
          type: boolean
        clientCreation:
          type: boolean
        clientUpdate:
          type: boolean
        clientStatusUpdate:
          type: boolean
        clientOpeningStatus:
          type: boolean
        clientResetPassword:
          type: boolean
        clientResetPasscode:
          type: boolean
        bankAccountView:
          type: boolean
        bankAccountUpdate:
          type: boolean
        clientReferencesView:
          type: boolean
        clientReferencesUpdate:
          type: boolean
        clientParentUpdate:
          type: boolean
        ibanGenerateClient:
          type: boolean
        clientProfileUpdate:
          type: boolean
        clientVelocity:
          type: boolean
        transactionReversal:
          type: boolean
        fundsReservationCancel:
          type: boolean
        clientSendMessage:
          type: boolean
        distributorUpdate:
          type: boolean
        clientTransactionReportsView:
          type: boolean
      x-stoplight:
        id: abh1f4amcdcxa
    CompanyServices:
      type: object
      properties:
        companyView:
          type: boolean
        companyManagement:
          type: boolean
        companyRecharge:
          type: boolean
        adminSalaryManagement:
          type: boolean
        ibanGenerateCompany:
          type: boolean
        companyStatusUpdate:
          type: boolean
        distributorUpdate:
          type: boolean
        companyTransactionReportsView:
          type: boolean
      x-stoplight:
        id: v4ejklw6tvewj
    MerchantServices:
      type: object
      properties:
        merchantView:
          type: boolean
        merchantCreation:
          type: boolean
        merchantUpdate:
          type: boolean
        merchantResetPassword:
          type: boolean
        merchantResetPasscode:
          type: boolean
        merchantSubstitution:
          type: boolean
        merchantStatusUpdate:
          type: boolean
        distributorUpdate:
          type: boolean
        merchantTransactionReportsView:
          type: boolean
      x-stoplight:
        id: nb0xa2f457h40
    AgentServices:
      type: object
      properties:
        agentView:
          type: boolean
        agentCreation:
          type: boolean
        agentUpdate:
          type: boolean
        agentNetworkManagement:
          type: boolean
        agentResetPassword:
          type: boolean
        agentResetPasscode:
          type: boolean
        agentDeposit:
          type: boolean
        agentSubstitution:
          type: boolean
        agentStatusUpdate:
          type: boolean
        distributorUpdate:
          type: boolean
        agentTransactionReportsView:
          type: boolean
      x-stoplight:
        id: 8o05dj1qu6ukn
    DistributorServices:
      type: object
      properties:
        creation:
          type: boolean
        resetPassword:
          type: boolean
        update:
          type: boolean
        view:
          type: boolean
        distributorStatusUpdate:
          type: boolean
        distributorDelegateUserView:
          type: boolean
        distributorDelegateUserUpdate:
          type: boolean
        distributorTransactionReportsView:
          type: boolean
      x-stoplight:
        id: o6ypkdb0lkdtu
    TerminalService:
      type: object
      properties:
        terminalCreation:
          type: boolean
        terminalUpdate:
          type: boolean
      x-stoplight:
        id: 2pcvdfnuppdal
    AccountingService:
      type: object
      properties:
        subledgerAccountsView:
          type: boolean
        subledgerAccountsWrite:
          type: boolean
        accountingStatementView:
          type: boolean
        accountingExportConfigurationView:
          type: boolean
        auxiliaryAccountsView:
          type: boolean
        accountingEntriesView:
          type: boolean
        balanceReportsView:
          type: boolean
        accountReportsView:
          type: boolean
        accountingReportsView:
          type: boolean
        transactionReportsView:
          type: boolean
        reconciliationWrite:
          type: boolean
        reconciliationView:
          type: boolean
        fundsManagementConfiguration:
          type: boolean
        fundsManagementOperation:
          type: boolean
        capitalRequirementConfigurationView:
          type: boolean
        capitalRequirementDashboardView:
          type: boolean
        bankReconciliationConfigurationView:
          type: boolean
        bankReconciliationConfigurationWrite:
          type: boolean
        bankReconciliationManualReconciliation:
          type: boolean
        bankReconciledView:
          type: boolean
        bankReconciledWrite:
          type: boolean
        bankReconciliationHistory:
          type: boolean
        generalAccountsView:
          type: boolean
        generalAccountsWrite:
          type: boolean
      x-stoplight:
        id: 2a4q19gwhlx8e
    ScreeningService:
      type: object
      properties:
        screeningAdmin:
          type: boolean
      x-stoplight:
        id: rhfw7dx93h7z5
    ReportsService:
      type: object
      properties:
        transactionView:
          type: boolean
        transferCodeView:
          type: boolean
        standingOrderView:
          type: boolean
        standingOrderUpdate:
          type: boolean
        alarmView:
          type: boolean
        auditView:
          type: boolean
        traceView:
          type: boolean
        partnersMap:
          type: boolean
        terminalView:
          type: boolean
        licenceView:
          type: boolean
        systemView:
          type: boolean
        inventoryReportsView:
          type: boolean
        smsView:
          type: boolean
        callView:
          type: boolean
        interbankingView:
          type: boolean
      x-stoplight:
        id: 3xmw0tepk2dq0
    InterbankingService:
      type: object
      properties:
        sepaConfigurationView:
          type: boolean
        sepaElementaryInstructionsView:
          type: boolean
        sepaManualInstructionMaker:
          type: boolean
        sepaManualInstructionChecker:
          type: boolean
        visaOnMobileConfigurationView:
          type: boolean
        visaOnMobileElementaryInstructionsView:
          type: boolean
      x-stoplight:
        id: eknlfodh7kf49
    AdminTransactionService:
      type: object
      properties:
        settlement:
          type: boolean
        accountAdjustment:
          type: boolean
        mobileBankingView:
          type: boolean
        walletToBankView:
          type: boolean
        walletToBank:
          type: boolean
      x-stoplight:
        id: o3eipcbfgb9s2
    SettingsService:
      type: object
      properties:
        productView:
          type: boolean
        productWrite:
          type: boolean
        alarmWrite:
          type: boolean
        watchListManagement:
          type: boolean
        userProfileView:
          type: boolean
        userProfileWrite:
          type: boolean
        pricingView:
          type: boolean
        pricingUpdate:
          type: boolean
        taxView:
          type: boolean
        taxWrite:
          type: boolean
        multiAccountLimitView:
          type: boolean
        multiAccountLimitCreation:
          type: boolean
        multiAccountLimitUpdate:
          type: boolean
        multiAccountLimitRemove:
          type: boolean
        velocityManagementView:
          type: boolean
        velocityManagementWrite:
          type: boolean
        tp1600AuthMethodsView:
          type: boolean
        tp1600AuthMethodsWrite:
          type: boolean
        jobView:
          type: boolean
        jobUpdate:
          type: boolean
        jobManagement:
          type: boolean
        kycConfigurationView:
          type: boolean
        kycConfigurationUpdate:
          type: boolean
      x-stoplight:
        id: 9r9x80p2qv3as
    GeneralSetupService:
      type: object
      properties:
        tagInterfaceConfigView:
          type: boolean
        templateView:
          type: boolean
        templateDownload:
          type: boolean
        templateEdit:
          type: boolean
        adminView:
          type: boolean
        adminCreation:
          type: boolean
        adminUpdate:
          type: boolean
        adminProfileView:
          type: boolean
        adminProfileWrite:
          type: boolean
        platformProfileView:
          type: boolean
        platformProfileWrite:
          type: boolean
        currencyView:
          type: boolean
        currencyManagement:
          type: boolean
        countryView:
          type: boolean
        countryManagement:
          type: boolean
        ibanConfiguration:
          type: boolean
        bicConfiguration:
          type: boolean
        foreignExchangeView:
          type: boolean
        foreignExchangeUpdate:
          type: boolean
        apiKeyConfigView:
          type: boolean
        hookConfiguration:
          type: boolean
      x-stoplight:
        id: px9fj8qet0c98
    FunctionalConfigurationService:
      type: object
      properties:
        generalSetupView:
          type: boolean
        generalSetupWrite:
          type: boolean
        billIssuerView:
          type: boolean
        billIssuerWrite:
          type: boolean
        externalBankView:
          type: boolean
        externalBankWrite:
          type: boolean
        technicalSetupView:
          type: boolean
        technicalSetupWrite:
          type: boolean
      x-stoplight:
        id: 5higybvs1lq0t
    ApplicationsService:
      type: object
      properties:
        tagAidView:
          type: boolean
        tagAidWrite:
          type: boolean
        tagLoanView:
          type: boolean
        tagLoanWrite:
          type: boolean
        tagLoyaltyView:
          type: boolean
        tagLoyaltyWrite:
          type: boolean
        tagVoucherView:
          type: boolean
        tagVoucherWrite:
          type: boolean
      x-stoplight:
        id: ba69iumqpls72
    AnalyticsService:
      type: object
      properties:
        analyticsView:
          type: boolean
      x-stoplight:
        id: n6r6d29krvbub
    ComplianceService:
      type: object
      properties:
        complianceConfiguration:
          type: boolean
      x-stoplight:
        id: 4o7v88g8l42wn
    Phone:
      type: string
      description: Phone number in international format (e.g. 33612354678)
      example: '33612354678'
      x-stoplight:
        id: 503qmjnzaw07s
    AdministratorStatus:
      type: string
      enum:
        - NEW
        - ACTIVATED
        - CLOSED
        - BLOCKED
        - EXPIRED
      x-stoplight:
        id: pa4lfpfsmemui
    metadata:
      oneOf:
        - $ref: '#/components/schemas/incorporationCertificateMetadata'
        - $ref: '#/components/schemas/portraitMetadata'
        - $ref: '#/components/schemas/proofOfActivityMetadata'
        - $ref: '#/components/schemas/proofOfBankDomiciliationMetadata'
        - $ref: '#/components/schemas/proofOfIdentityMetadata'
        - $ref: '#/components/schemas/proofOfResidenceMetadata'
        - $ref: '#/components/schemas/proofOfResourcesMetadata'
        - $ref: '#/components/schemas/proofOfTaxationMetadata'
        - $ref: '#/components/schemas/signatureMetadata'
      x-stoplight:
        id: iyxtc6e0tiwlb
    Acceptor:
      allOf:
        - $ref: '#/components/schemas/LegacyIdentity'
        - type: object
          properties:
            category:
              type: string
            code:
              type: string
            shortCode:
              type: string
            gateway:
              type: string
            creation:
              type: string
              format: date-time
            lastUsage:
              type: string
              format: date-time
            matriculation:
              type: string
            legalDoc:
              type: object
              properties:
                type:
                  type: string
                number:
                  type: string
                verified:
                  type: boolean
            contractDate:
              type: string
              format: date-time
            devices:
              type: array
              items:
                $ref: '#/components/schemas/Device'
      x-stoplight:
        id: 2tulql6mp4c4l
    Account:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: Internal identifier
              example: 42
            label:
              type: string
              description: Name of the account
              example: Compte Courant (€) \#10005462789246
            status:
              $ref: '#/components/schemas/AccountStatus'
            currency:
              type: string
              description: Numeric ISO code of associated currency (3 digits)
              example: '978'
            balance:
              $ref: '#/components/schemas/Amount'
            availableBalance:
              $ref: '#/components/schemas/Amount'
            firstUse:
              type: string
              format: date-time
              description: Creation date & time
            lastUse:
              type: string
              format: date-time
              description: Date & time of last use
            countUse:
              type: integer
              description: Number of times this account has been used for a transaction
            bankAccount:
              type: string
              description: 'Associated bank account name, if any'
            number:
              type: string
              description: 'Associated bank account number, if any'
              example: '10005462789246'
            productId:
              type: integer
              description: Product internal identifier
            settlementDateTime:
              type: string
              format: date-time
              description: 'Date & time of the last settlement, if any'
            iban:
              type: string
              description: 'Associated bank account IBAN, if any'
              example: FR7616808000011000021643179
      x-stoplight:
        id: 17i9mosvrd6gy
    AgentType:
      type: string
      enum:
        - AGENT
        - AGGREGATOR
        - SUPERVISOR
        - SUB_AGENT
      x-stoplight:
        id: 0xbgbm630i2l2
    AgentState:
      type: string
      enum:
        - ACTIVE
        - BLOCKED
      x-stoplight:
        id: tytuznhr56mo1
    AcceptorAddRequest:
      allOf:
        - $ref: '#/components/schemas/IdentityAddRequest'
        - type: object
          required:
            - cos
          properties:
            cos:
              $ref: '#/components/schemas/UserProfileId'
            name:
              type: string
              example: Agency / Shop
              description: The acceptor's name
            category:
              type: string
            application:
              type: string
            contractDate:
              type: string
              format: date-time
            pincode:
              type: string
              minLength: 4
              maxLength: 4
              example: '1234'
      x-stoplight:
        id: b0l39wmrfrfj8
    Support:
      type: object
      properties:
        contract:
          description: Contract reference
          type: string
          example: '10000000199'
          readOnly: true
        number:
          type: string
          example: '12345678'
          description: Support number
        externalId:
          type: string
        status:
          type: string
          enum:
            - NEW
            - PENDING
            - ACTIVE
            - EXPIRED
            - REMOVED
            - BLOCKED
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
          description: Support creation date
        lastUsageDate:
          type: string
          format: date-time
          readOnly: true
          description: Support last update date
        expirationDate:
          type: string
          format: date-time
          readOnly: true
          description: Support expiration date
      x-stoplight:
        id: q19knsupbar90
    OperationState:
      type: string
      enum:
        - INITIATED
        - CTRL_PASSED
        - CTRL_FAILED
        - ACCEPTED
        - EXECUTED
        - SETTLED
        - EXT_ACCEPTED
        - ERR_EXECUTED
        - EXT_PENDING
        - EXT_REFUSED
        - ERR_EXT
        - CANCELED
        - IS_VALID
        - IS_NOT_VALID
        - REFUSED
        - ERR_FEES_RESERVATION
        - ERR_SETTLED
      x-stoplight:
        id: xlbpgb5q7l5tc
    SupportUpdateRequest:
      type: object
      properties:
        number:
          type: string
          example: '12345678'
          description: Support number
          deprecated: true
        externalId:
          type: string
          deprecated: true
      x-stoplight:
        id: xuc9ax39bqeq8
    CardId:
      type: string
      description: Card identifier
      example: CARD123
      x-stoplight:
        id: s3dnsjzz686fe
    AccountId:
      type: string
      description: Account identifier
      example: ACC123
      x-stoplight:
        id: h35wgvgnew7pr
    ProductId:
      type: string
      description: product identifier.
      example: PRO123
      x-stoplight:
        id: mbvkoc1gt45av
    CardType:
      type: string
      description: Card Type
      enum:
        - DEBIT_CARD
      x-stoplight:
        id: swz9xjm4h4ixl
    CardFeature:
      type: object
      required:
        - id
        - enabled
      properties:
        id:
          $ref: '#/components/schemas/CardFeatureId'
        enabled:
          type: boolean
          description: Is feature enabled ?
      x-stoplight:
        id: ndlpou2tp3dio
    CardExternalId:
      type: string
      description: External Card identifier (Partner).
      example: EXT123456789
      x-stoplight:
        id: tfj24qwny3yww
    PendingManagementOperation:
      type: object
      required:
        - operationType
      properties:
        operationType:
          $ref: '#/components/schemas/OperationType'
        featureId:
          $ref: '#/components/schemas/CardFeatureId'
      x-stoplight:
        id: 1dnd2hcx0te3t
    CardExternalStatus:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          readOnly: true
          description: Status value
        creationDate:
          type: string
          readOnly: true
          format: date-time
          description: Status creation date
          example: '2022-01-20T01:23:45+02:00'
        confirmationDate:
          type: string
          readOnly: true
          format: date-time
          description: Status confirmation date
          example: '2022-01-20T01:23:45+02:00'
      x-stoplight:
        id: mymlfqifc6e4v
    CardRefabricateReason:
      type: string
      description: |
        Card remanufacturing reason
      enum:
        - ABUSE
        - DAMAGED
        - EXPIRED
        - OPPOSED
        - LOST
        - STOLEN
      x-stoplight:
        id: 27f89xpnf67sw
    IdentityAddRequest:
      type: object
      x-stoplight:
        id: 8ncnaz7frinpg
      required:
        - name
      properties:
        firstName:
          type: string
          example: John
        name:
          type: string
          example: Doe
          description: Last name
        postName:
          type: string
        maidenName:
          type: string
        alias:
          type: string
        information:
          type: string
          maxLength: 512
        email:
          type: string
        address:
          type: string
        city:
          type: string
        zipcode:
          type: string
        country:
          $ref: ./Country.yaml
        district:
          type: string
        province:
          type: string
        region:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        nationality:
          type: string
        lang:
          $ref: ./Lang.yaml
        idNumber:
          type: string
        contactPhone:
          type: string
        birthDate:
          type: string
          format: date-time
        birthPlace:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        bankName:
          type: string
        kyc:
          type: object
          description: An object containing values for KYC. Properties can be set with platform configuration
          example:
            icsCode: ICS123456
            building: D2
            mainBusiness: Car seller
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        type:
          type: string
          enum:
            - CLIENT
            - AGENT
            - MERCHANT
          example: CLIENT
        display:
          type: string
          example: P. Dupont
      x-stoplight:
        id: 8fhamkp7igg5s
    DeviceType:
      type: string
      enum:
        - IMEI
        - INGENICO
        - IP
        - MAC
        - NEOMAD
        - PHONE
        - TJC
        - IBAN
        - UNDEFINED
      x-stoplight:
        id: dikzr9orv1ejl
    DeviceStatus:
      type: string
      enum:
        - ACTIVE
        - REMOVED
        - BLOCKED
        - PENDING
      x-stoplight:
        id: cgspy8x2w14ov
    DeviceStyle:
      type: string
      enum:
        - tjcgrib
        - MobiPrintGrib
        - TabAndroidGrib
        - iwl280grib
        - iwl250grib
      x-stoplight:
        id: pyjzq1w2186rn
    DeviceSpeakerLevel:
      type: integer
      minimum: 0
      maximum: 100
      x-stoplight:
        id: 6zby24ky1cx4g
    DevicePrinter:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PrinterType'
        mac:
          type: string
        autoPrint:
          type: boolean
      x-stoplight:
        id: 0s63iwl7odb1k
    DeviceProfile:
      type: string
      enum:
        - MP2
        - Android
        - PC
        - MP3
        - API
        - iPad
        - J2ME
        - IWL280
        - IWL250
        - IWB250
        - IWL220
        - ICMP
        - ISMP
        - Custom
      x-stoplight:
        id: 2if2v1nxg7yy1
    DeviceApiSettings:
      type: object
      properties:
        allowForceDebit:
          type: boolean
        returnTransactionCode:
          type: boolean
        returnTransferCode:
          type: boolean
        allowedApiScripts:
          type: array
          items:
            $ref: '#/components/schemas/ApiScript'
        allowedAuthModes:
          type: array
          items:
            $ref: '#/components/schemas/ApiAuthMode'
      x-stoplight:
        id: tgsixvhag06uu
    SettlementMode:
      type: string
      enum:
        - CASH
        - ACCOUNT
        - BANK
        - OWN_CURRENT_ACCOUNT
      x-stoplight:
        id: di26j2ej4ln76
    SettlementNotificationMode:
      type: string
      enum:
        - NONE
        - EMAIL
        - SMS
        - BOTH
      x-stoplight:
        id: pnq4t83rjq74q
    IncludeRenewableKyc:
      type: boolean
      description: |
        Include renewable KYC fields in the response
      x-stoplight:
        id: st6soowfywz3t
    IncludeNonRenewableKyc:
      type: boolean
      description: |
        Include non renewable KYC fields in the response
      x-stoplight:
        id: hnk5dp6stc9wg
    TextInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: 64ryh63zeq4vf
    AmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Amount'
            currencies:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: 4zo3fv078pgpj
    BoolInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: boolean
      x-stoplight:
        id: roc90l15xzezf
    DateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: Ymd
      x-stoplight:
        id: x9zpxq3v0z5b2
    DateTimeInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: '20180717162042'
            format:
              type: string
              description: 'Possible formats are the ones accepted by the [date function (php)](https://php.net/manual/en/function.date.php)'
              example: YmdHis
      x-stoplight:
        id: s5acbuuh8l4yq
    DurationInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              $ref: '#/components/schemas/Duration'
            periodicities:
              type: array
              items:
                $ref: '#/components/schemas/Periodicity'
      x-stoplight:
        id: ev8l96b8084in
    EmailInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              format: email
      x-stoplight:
        id: 1aja9urepth8u
    FileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              type: object
              readOnly: true
              properties:
                content:
                  type: string
                  description: 'File content, Base64 encoded'
                  format: byte
                name:
                  type: string
                  description: Original file name and extension
                  example: fileName.txt
                type:
                  type: string
                  description: File MIME type
                  example: text/plain
                size:
                  type: integer
                  description: 'File size, in bytes'
      x-stoplight:
        id: dvw0f4bkrjwr8
    ImageInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              type: string
              description: Image content base64 encoded
      x-stoplight:
        id: 4gmq1lfz6uhjg
    FileContentInput:
      allOf:
        - $ref: '#/components/schemas/AbstractFileInput'
        - type: object
          properties:
            value:
              oneOf:
                - type: object
                  properties:
                    documentId:
                      $ref: '#/components/schemas/ReadOnlyDocumentId'
                - type: string
                  description: File content as Base64 encoded string
            links:
              type: array
              readOnly: true
              description: |
                Can contain the following actions (identified by their `rel` attribute):
                  * `getDocument` [GET] Load the document details linked to this input
                  * `getDocumentContent` [GET] Load the document content
                  * `getDocumentPreview` [GET] Get a small sized preview of the document content
              items:
                $ref: '#/components/schemas/Link'
              example:
                - rel: getDocument
                  href: 'https://sandbox.skaleet.com/api/v2/admin/documents/42'
                - rel: getDocumentContent
                  href: 'https://sandbox.skaleet.com/api/v2/admin/documents/42/content'
                - rel: getDocumentPreview
                  href: 'https://sandbox.skaleet.com/api/v2/admin/documents/42/preview'
      x-stoplight:
        id: sgbpq8t0py4ch
    InputCollection:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: array
              items:
                $ref: '#/components/schemas/Input'
      x-stoplight:
        id: 21zwgkvxe741p
    IntInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: integer
      x-stoplight:
        id: kbz0r99lbs685
    IpInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
      x-stoplight:
        id: g8c8vofid486b
    SelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: 0z4l7byq1j0ud
    MultiSelectInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: array
              items:
                type: string
              example:
                - someValue
                - anotherValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/Option'
      x-stoplight:
        id: d65wapc5qa504
    NumberInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: number
              format: float
      x-stoplight:
        id: fbk7n1zso81d3
    PercentInput:
      allOf:
        - $ref: '#/components/schemas/NumberInput'
      x-stoplight:
        id: m0xu8nopdy8t6
    PasswordInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
      x-stoplight:
        id: d0yzffnpidu9m
    PhoneInput:
      allOf:
        - $ref: '#/components/schemas/TextInput'
        - type: object
          properties:
            value:
              type: string
              example: '33612345678'
              description: Phone number in international format (MSISDN)
      x-stoplight:
        id: qi7n6id49jo13
    RateInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            inputs:
              type: object
              required:
                - value
                - periodicity
              properties:
                value:
                  $ref: '#/components/schemas/NumberInput'
                periodicity:
                  $ref: '#/components/schemas/SelectInput'
      x-stoplight:
        id: hxfjbwpo9kuwh
    SelectWithAmountInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            value:
              type: string
              example: someValue
            values:
              type: array
              items:
                $ref: '#/components/schemas/OptionWithAmount'
      x-stoplight:
        id: awbz6dnn1ilpl
    InstructionAmount:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/AmountValue'
        currency:
          $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: 7950sd3e7p8zn
    CreditInterbankingUser:
      allOf:
        - $ref: '#/components/schemas/InterbankingUser'
      x-stoplight:
        id: lmdp39ge1be18
    AcquisitionChannel:
      type: string
      description: Channel of acquisition
      enum:
        - API
        - JOB
        - WEBADMIN
      x-stoplight:
        id: 8oxfd0yis9plt
    PaymentService:
      type: string
      description: Payment service
      enum:
        - BULK
        - SINGLE
      x-stoplight:
        id: sb93kwxpvrw53
    makerCheckerInitiatingParty:
      type: object
      properties:
        type:
          type: string
          enum:
            - Maker
            - Checker
      allOf:
        - $ref: '#/components/schemas/standardInitiatingParty'
      x-stoplight:
        id: lxnq3joovz73x
    standardInitiatingParty:
      type: object
      description: Initiating party
      properties:
        role:
          type: string
          enum:
            - CLIENT
            - DISTRIBUTOR
            - ADMINISTRATOR
        id:
          type: string
          example: '42'
          description: Initiating party's user id
        name:
          type: string
          example: John Doe
          description: Name of the initiating party
      examples:
        - maker-administrator:
            id: 1
            name: Doe1
            type: Maker
            role: ADMINISTRATOR
        - checker-administrator:
            id: 2
            name: Doe2
            type: Checker
            role: ADMINISTRATOR
        - client:
            id: 3
            name: Doe3
            role: CLIENT
        - distributor:
            id: 4
            name: Doe4
            role: DISTRIBUTOR
      x-stoplight:
        id: pal2gllao3wl3
    RefusalInformation:
      type: object
      properties:
        reason:
          type: object
          properties:
            code:
              type: string
              example: AC01
            message:
              type: string
              example: Blocked account
        refusalDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        originator:
          type: object
          properties:
            type:
              type: string
              enum:
                - SYSTEM
                - ADMIN
                - CUSTOMER
            value:
              type: string
              example: BNPAFRPPXXX
      x-stoplight:
        id: 1qypstt7azcib
    RelatedTransaction:
      type: object
      properties:
        reference:
          type: string
          example: '3451'
        type:
          type: string
          example: OUTWARD_DIRECT_DEBIT
        date:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
      x-stoplight:
        id: s74ezwqlv363y
    AdditionalReferences:
      type: object
      properties:
        instructionId:
          type: string
          example: RefXX12
        endToEndId:
          type: string
          example: Pre1656
        remittanceInfo:
          type: string
          example: Prélèvement mensuel Free
        purpose:
          type: string
          example: SALA
      x-stoplight:
        id: 0z8ni2pug433p
    Mandate:
      type: object
      description: Related mandate information.
      properties:
        mandateReference:
          type: string
          example: refxx1234
        creditorId:
          type: string
          example: FR56ZZ123456
        dateOfSignature:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        recurrent:
          type: boolean
      x-stoplight:
        id: x28f5an4oi8at
    InterbankingUser:
      type: object
      required:
        - iban
        - bic
        - name
      properties:
        clientId:
          type: string
          example: '42'
        iban:
          type: string
          example: FR761001100656789078936743
        bic:
          type: string
          example: CMCICFRPXXX
        name:
          type: string
          example: John Doe
        address:
          $ref: '#/components/schemas/Address'
      x-stoplight:
        id: 4c9opf6y8h5ar
    OutwardCancellationState:
      type: string
      enum:
        - INITIATED
        - PENDING
        - INT_CHECKED
        - EXT_CHECKED
        - READY_TO_SEND
        - SENT
        - RECEIVED
        - ORIG_INTERRUPT
        - SETTLED
        - INI_TO_REVIEW
        - INI_CANCELLED
        - INI_REFUSED
        - ERR_EXT_CHECK
        - ERR_INT_CHECK
        - ERR_RECEIVED
        - ERR_SENT
        - ERR_POSTING
        - ERR_REVERSAL
      x-stoplight:
        id: zp01qvuuvi8ti
    OriginalDirectDebitInformation:
      type: object
      description: An instruction.
      required:
        - reference
        - scheme
        - mandateRelatedInformation
        - amount
        - debtor
        - creditor
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        scheme:
          type: string
          enum:
            - CORE
            - B2B
        mandateRelatedInformation:
          $ref: '#/components/schemas/Mandate'
        amount:
          $ref: '#/components/schemas/InstructionAmount'
        debtor:
          $ref: '#/components/schemas/InterbankingUser'
        creditor:
          $ref: '#/components/schemas/InterbankingUser'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
      x-stoplight:
        id: kshczyami64jx
    AdditionalReferencesWithOriginal:
      type: object
      properties:
        cancellationId:
          type: string
          example: RefXX12
        originalReferences:
          $ref: '#/components/schemas/AdditionalReferences'
      x-stoplight:
        id: oza5tuhmnfko5
    InterbankingInstruction:
      oneOf:
        - $ref: '#/components/schemas/CreditTransferInstruction'
        - $ref: '#/components/schemas/Instruction'
        - $ref: '#/components/schemas/OutwardCreditTransfersCancellationInstruction'
        - $ref: '#/components/schemas/CancellationInstruction'
      discriminator:
        propertyName: type
        mapping:
          INWARD_CREDIT_TRANSFER: '#/components/schemas/CreditTransferInstruction'
          OUTWARD_CREDIT_TRANSFER: '#/components/schemas/CreditTransferInstruction'
          INWARD_DEBIT_TRANSFER: '#/components/schemas/Instruction'
          OUTWARD_DEBIT_TRANSFER: '#/components/schemas/Instruction'
          OUTWARD_DEBIT_TRANSFER_CANCELLATION: '#/components/schemas/OutwardCreditTransfersCancellationInstruction'
          OUTWARD_CREDIT_TRANSFER_CANCELLATION: '#/components/schemas/CancellationInstruction'
      x-stoplight:
        id: ajytyjb6rpbyq
    RefusalInformationWithoutRefusalDate:
      type: object
      properties:
        reason:
          type: object
          properties:
            code:
              type: string
              example: AC01
            message:
              type: string
              example: Blocked account
        originator:
          type: object
          properties:
            type:
              type: string
              enum:
                - SYSTEM
                - ADMIN
                - CUSTOMER
            value:
              type: string
              example: BNPAFRPPXXX
      x-stoplight:
        id: ii4zvl01qppvp
    OriginalCreditTransferInformation:
      type: object
      description: An original credit transfer instruction.
      required:
        - reference
        - scheme
        - amount
        - debtor
        - creditor
        - requestedCollectionDate
      properties:
        reference:
          type: integer
          description: Unique identifier representing the instruction
          example: 12345
        scheme:
          type: string
          enum:
            - SCT
        amount:
          $ref: '#/components/schemas/InstructionAmount'
        debtor:
          $ref: '#/components/schemas/InterbankingUser'
        creditor:
          $ref: '#/components/schemas/InterbankingUser'
        requestedCollectionDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
        settlementDate:
          type: string
          format: date-time
          example: '2021-10-01T15:20:05+02:00'
      x-stoplight:
        id: nsbu90zmrm0v0
    AdditionalReferencesWithCancellationId:
      type: object
      properties:
        cancellationId:
          type: string
          example: RefXX12
        endToEndId:
          type: string
          example: Pre1656
        remittanceInfo:
          type: string
          example: Prélèvement mensuel Free
      x-stoplight:
        id: 29ofe6fb8mhj3
    BillerClientMode:
      type: string
      enum:
        - MANDATORY
        - OPTIONAL
        - NONE
      x-stoplight:
        id: wq2mwup4ecexr
    Currency:
      description: Numeric iso code of associated currency (3 digits)
      type: string
      minLength: 3
      maxLength: 3
      example: '978'
      x-stoplight:
        id: e21f5618nh4il
    Charge:
      type: object
      description: A charge
      properties:
        threshold:
          type: number
          example: 10
        formula:
          type: number
          example: 0.25
        fixedAmount:
          type: number
          example: 20
      x-stoplight:
        id: dvpfqelp8pkut
    TransactionType:
      type: object
      properties:
        value:
          type: string
          example: PAYMENT
          enum:
            - API
            - ACCOUNT_TO_TRANSIT
            - INVOICE_GENERATION
            - PAYMENT
            - OVERBALANCE
            - ACCOUNT_TO_ACCOUNT
            - ON_US_DIRECT_DEBIT
            - CASHOUT
            - CASHIN
            - CASHOUT_FROM_TRANSIT
            - SETTLEMENT_TO_CASH
            - RECHARGE_BALANCE
            - SALARY_TO_ACCOUNT
            - ONLINE_PAYMENT
            - CASHIN_TO_TRANSIT
            - RECHARGE_CREDIT_CARD
            - DEPOSIT
            - AUTH
            - CLIENT_VALIDATION
            - EXTERNAL
            - FEES_PAYMENT
            - FEES_REFUND
            - SETTLEMENT_TO_ACCOUNT
            - PAYBILL_ACCOUNT
            - SELL_DEPOSIT
            - BUY_DEPOSIT
            - ADJUSTMENT
            - MAINTENANCE_PAYMENT
            - ACCOUNT_TO_EXTERNAL_TRF
            - CASH_TO_EXTERNAL_TRF
            - EXTERNAL_TRF_TO_ACCOUNT
            - MARK
            - CASHOUT_FROM_EXTERNAL_TRF
            - EXTERNAL_TRF_WITHDRAW
            - PAYBILL_CASH
            - REVERSAL
            - SALARY_DISBURSEMENT
            - TRANSIT_TO_ACCOUNT
            - CLIENT_ENROLLMENT
            - WALLET_TO_BANK
            - FOREX
            - WALLET_TO_BANK_ARCHIVE
            - BANK_TO_WALLET
            - MAD_APPROVAL
            - MAD_REFUSAL
            - MAD_CREATION
        label:
          type: string
          example: Payment
          enum:
            - API
            - Transfer to cash
            - Invoice
            - Payment
            - Over balance
            - Transfer to account
            - Cashout
            - Cashin
            - Cashout from cash
            - Settlement to cash
            - Salary
            - Company credit
            - Online Payment
            - Cash to cash
            - RECHARGE_CREDIT_CARD
            - Agent deposit
            - Authentication
            - Open Client account
            - Gateway
            - Fees payment
            - Settlement to account
            - Bill payment from account
            - Sell Deposit
            - Buy deposit
            - Adjustment
            - Platform fee
            - Account transfer to external
            - CASH_TO_EXTERNAL_TRF
            - External transfer to account
            - Non-financial transaction
            - External transfer to cash
            - External transfer withdrawal
            - Bill payment from cash
            - Reversal
            - Bulk salary
            - Cash to account
            - New client
            - Wallet to bank
            - Forex
            - Wallet to bank archive
            - Bank to wallet
            - Movement awaiting decision approved#A1
            - Movement awaiting decision refused
            - Movement awaiting decision created
      x-stoplight:
        id: n2ukt2xip55gj
    Media:
      description: Available media channels
      type: string
      enum:
        - SMS
        - USSD
        - POS
        - WEB
        - BANK
        - IVR
        - API
        - APP
        - ONLINE
        - ALL
        - UNKNOWN
      example: POS
      x-stoplight:
        id: zu3yw0bdex8rc
    AuthMode:
      description: Available authentication modes (bitmask)
      type: object
      properties:
        value:
          type: integer
          example: 80
        label:
          type: string
          example: 'PIN on POS, NSDT'
      x-stoplight:
        id: 3a00ubob0xrf9
    GeoLocation:
      type: object
      properties:
        latitude:
          type: number
          example: 48.831362
        longitude:
          type: number
          example: 2.2441641
        mode:
          $ref: '#/components/schemas/GeoLocationMode'
      x-stoplight:
        id: 0bxhuukse9swd
    Contribution:
      type: object
      properties:
        id:
          type: integer
          example: 12345
        device:
          type: string
          example: '1234567890123'
        role:
          type: string
          enum:
            - Initiator
            - Intermediary
            - Recipient
          example: Intermediary
        user:
          $ref: '#/components/schemas/User'
      x-stoplight:
        id: xr9zr2fomb829
    AccountingEntry:
      type: object
      properties:
        account:
          type: object
          properties:
            number:
              type: string
              example: '10000313725'
            product:
              type: string
              example: Compte courant (€)
            holder:
              $ref: '#/components/schemas/User'
        amount:
          $ref: '#/components/schemas/Amount'
        balance:
          $ref: '#/components/schemas/Amount'
      x-stoplight:
        id: 4g9pp8svlxqav
    Kyc:
      type: object
      description: the KYC
      x-stoplight:
        id: jkxldw4twesci
    DistributorId:
      type: string
      description: Distributor identity Id
      example: '125'
      x-stoplight:
        id: sk5bq8y7jbdoe
    CreateIdentityRelationCollection:
      type: array
      description: |
        Depending of the type of relation you want to create, provide only one of `toIdentityId` and `fromIdentity` fields.

        The Identity to-be-created will be used for the empty side of the relation.
      items:
        $ref: '#/components/schemas/IdentityRelation'
      x-stoplight:
        id: xe57jm9vku7el
    ReadOnlyUserProfileId:
      allOf:
        - $ref: '#/components/schemas/UserProfileId'
        - readOnly: true
      x-stoplight:
        id: b3wid0mwmxbeo
    WriteOnlyIdentityId:
      allOf:
        - $ref: '#/components/schemas/IdentityId'
        - writeOnly: true
          example: '42'
      x-stoplight:
        id: ji256hofu97ya
    UserProfileOwner:
      type: object
      readOnly: true
      description: Identity owner of the profile
      required:
        - id
        - role
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlyIdentityId'
        role:
          $ref: ./IdentityRole.yaml
      x-stoplight:
        id: tbrbbvovrj2yp
    PossibleValue:
      type: object
      required:
        - value
        - label
      properties:
        value:
          type: string
          description: The possible value
          example: Value123
        label:
          type: string
          description: The value translation
      x-stoplight:
        id: 17ubjctdbw254
    IBAN:
      type: string
      description: 'IBAN (International Bank Account Number), e.g. FR791680810000000538'
      example: FR791680810000000538
      x-stoplight:
        id: iu61qqs7dx32z
    BIC:
      type: string
      description: 'BIC (Beneficiary Bank Identifier Code), e.g. FRGAILP1'
      example: FRGAILP1
      x-stoplight:
        id: ctmu3aawu1ibr
    IdentityStatus:
      type: object
      description: Identity's operational status
      required:
        - id
        - label
      properties:
        id:
          $ref: '#/components/schemas/IdentityStatusEnum'
        label:
          type: string
          description: |
            a displayable label translated in the platform default language or the first available language in `Accept-Language` HTTP header
      x-stoplight:
        id: 2rzxo2uubbz6x
    JobStateType:
      type: string
      description: job status
      enum:
        - enabled
        - disabled
        - error
        - pending
        - running
        - suspended
      x-stoplight:
        id: q3exnn26alpru
    ExecutionJob:
      type: object
      properties:
        id:
          type: string
          example: '20220315143826'
          description: id of the last execution
        output:
          type: array
          description: outputs
          items:
            type: string
            example: log
            description: name of output
      x-stoplight:
        id: dih2mgeg18xba
    ScoreCode:
      type: string
      description: Unique code of score
      example: SCORE_CREDIT_LOAN
      x-stoplight:
        id: 5o3a4j7c4l1yt
    Name:
      type: object
      description: Name translated in a language supported by the system
      additionalProperties:
        type: string
        description: The locale of the name
      example:
        fr_FR: nom français
        en_US: english name
      x-stoplight:
        id: 2f5zgqo1nuj42
    Limit:
      type: object
      description: Limit beyond which the score will be bounded
      properties:
        min:
          type: integer
          example: 0
          description: Min must be inferior to max
        max:
          type: integer
          example: 1000
          description: Max must be superior to min
      x-stoplight:
        id: s9qi63devmul5
    Step:
      type: object
      required:
        - min
        - max
        - name
      properties:
        min:
          type: integer
          example: 0
          description: Min must be inferior to max
        max:
          type: integer
          example: 150
          description: Max must be superior to min
        name:
          $ref: '#/components/schemas/Name'
        color:
          type: string
          description: Hexadecimal color of the step
          example: '#338AFF'
          pattern: '#[0-9A-F]{6}'
        externalCode:
          type: string
          example: STEP01
      x-stoplight:
        id: xh8x9dgb15zr7
    Variable:
      type: object
      required:
        - code
        - name
        - type
        - values
      properties:
        code:
          type: string
          example: MARITAL_STATUS
        name:
          $ref: '#/components/schemas/Name'
        type:
          type: string
          enum:
            - boolean
            - list
            - integer
            - float
            - duration
          description: The variable's type. `boolean` is a yes/no choice. `list` is a free text localized choices list. `integer` is a range of integers. `float` is a range of floats. `duration` is a range of periods.
          example: list
        values:
          type: array
          description: The values the variable can get. The values you pass should match the variable's type. Each value has a rating which influences the score calculation. Ranges' values have a lower and an upper bound.
          items:
            $ref: '#/components/schemas/Value'
      x-stoplight:
        id: imabbseuje3f2
    ScoreResultId:
      type: string
      format: UUID
      description: The id of the calculation result
      example: 5a1b5ca6-5a3f-4194-82a4-d0a1cc7a4298
      readOnly: true
      x-stoplight:
        id: lkryecldwaw62
    ScoreFinalValue:
      type: string
      description: The final score of the calculation
      example: '350'
      x-stoplight:
        id: rzft4lv30ei3p
    Duration:
      type: object
      properties:
        value:
          type: integer
          example: 42
        unit:
          $ref: '#/components/schemas/Periodicity'
      x-stoplight:
        id: sirn992mk1r1g
    SpendingDetail:
      type: object
      description: Spending detail
      properties:
        id:
          $ref: '#/components/schemas/SpendingDetailId'
        amount:
          $ref: '#/components/schemas/Amount'
        category:
          $ref: '#/components/schemas/BaseSpendingCategory'
        subcategory:
          $ref: '#/components/schemas/BaseSpendingCategory'
        label:
          type: string
          description: Description of the spending detail
        additionalData:
          type: array
          items:
            type: object
            properties:
              key:
                $ref: '#/components/schemas/SpendingsAdditionalDataKey'
              label:
                type: string
                description: locale of additional-key in platform config
              value:
                type: string
      x-stoplight:
        id: ixsa42c5x4dwo
    TransactionAttachment:
      type: object
      required:
        - id
        - content
        - importDate
        - links
      properties:
        id:
          $ref: '#/components/schemas/TransactionAttachmentId'
        content:
          type: string
          format: byte
          writeOnly: true
          description: 'Document content, base64 encoded'
        description:
          type: string
          description: Description of the document type and content
        importDate:
          type: string
          format: date-time
        links:
          type: array
          readOnly: true
          description: |
            Can contain the following actions (identified by their `rel` attribute):
              * `getContent` [GET] Get document content
              * `getPreview` [GET] Get document content thumbnail
              * `deleteAttachment` [DELETE] Delete this attachment
              * `addAttachmentOnSameTransaction` [POST] Add another attachment on the same transaction
          items:
            $ref: '#/components/schemas/Link'
          example:
            - rel: getContent
              href: 'https://sandbox.skaleet.com/api/v2/admin/transactions/42/attachments/43/content'
            - rel: getPreview
              href: 'https://sandbox.skaleet.com/api/v2/admin/transactions/42/attachments/43/preview'
            - rel: deleteAttachment
              href: 'https://sandbox.skaleet.com/api/v2/admin/transaction/42/attachments/43'
            - rel: addAttachmentOnSameTransaction
              href: 'https://sandbox.skaleet.com/api/v2/admin/transaction/42/attachments'
      x-stoplight:
        id: twu5zfeggwtrn
    Webhook:
      type: object
      required:
        - id
        - status
        - configurationId
        - requestBody
        - createdAt
      properties:
        id:
          $ref: '#/components/schemas/WebhookId'
        status:
          $ref: '#/components/schemas/WebhookStatus'
        lastStatusChangeAt:
          $ref: '#/components/schemas/DateAtom'
        configurationId:
          type: integer
          description: Hook configuration id
        requestBody:
          type: string
          description: JSON encoded value to be sent
        createdAt:
          $ref: '#/components/schemas/DateAtom'
      x-stoplight:
        id: 7m4i3gf2km9fi
    WebhookCall:
      type: object
      required:
        - date
        - retryCount
        - headers
        - responseTime
      properties:
        date:
          type: string
          format: date-time
          description: Time of the http request
        retryCount:
          type: integer
          description: Retry rank for the webhook
        headers:
          type: array
          items:
            $ref: '#/components/schemas/HttpHeader'
        requestUrl:
          type: string
          format: uri
        responseCode:
          type: integer
          example: 200
        responseBody:
          type: string
        responseHeaders:
          type: array
          items:
            $ref: '#/components/schemas/HttpHeader'
        responseTime:
          type: integer
          description: 'Time taken to process the request, in milliseconds'
          example: 1000
        error:
          type: object
          required:
            - code
            - message
          description: Error message and code when unexpected error occurs while sending the request
          properties:
            code:
              type: integer
              example: 500
            message:
              type: string
              example: Something bad happened
      x-stoplight:
        id: 2np8cd8ey3y8c
    EmbeddedError:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          description: Always false
        error:
          $ref: '#/components/schemas/Error'
      example:
        success: false
        error:
          code: 76000
          message: The request could not be processed because the current version does not match the specified version
      x-stoplight:
        id: gxeadzahcr47x
    AmountValue:
      description: Amount without separator and symbol
      type: integer
      example: 1337
      x-stoplight:
        id: rcx9aa22o5hfs
    incorporationCertificateMetadata:
      type: object
      description: Document metadatas for INCORPORATION_CERTIFICATE documents
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        denomination:
          type: string
        legalForm:
          type: string
        numberOfEmployees:
          type: string
        registrationDate:
          type: string
          format: date
        registrationNumber:
          type: string
        registrationPlace:
          type: string
        shareCapital:
          type: string
        zipcode:
          type: string
      x-stoplight:
        id: fa47z5758atyg
    portraitMetadata:
      type: object
      description: Document metadatas for PORTRAIT documents
      properties:
        identityPhotoMatch:
          type: string
          enum:
            - matching
            - notMatching
            - cannotBeProcessed
        identityPhotoMatchComment:
          type: string
        portraitErrors:
          type: array
          items:
            type: string
            enum:
              - qualityIsNotSufficient
              - faceIsProbablyNotAPerson
              - qualityOfVideoIsNotGoodEnoughToDecide
      x-stoplight:
        id: ph1qps98odf71
    proofOfActivityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_ACTIVITY documents
      properties:
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        grossSalary:
          type: string
        lastName:
          type: string
        netSalary:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: h9shk6x74log9
    proofOfBankDomiciliationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_BANK_DOMICILIATION documents
      properties:
        bic:
          type: string
        firstName:
          type: string
        iban:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
      x-stoplight:
        id: nwbtecffi6zcm
    proofOfIdentityMetadata:
      type: object
      description: Document metadatas for PROOF_OF_IDENTITY documents
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        birthDate:
          type: string
          format: date
        birthPlace:
          type: string
        city:
          type: string
        country:
          type: string
        deliveryDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        firstName:
          type: string
        idNumber:
          type: string
        issuingAuthority:
          type: string
        issuingCountry:
          type: string
        lastName:
          type: string
        mrz:
          type: string
        nationality:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
        proofOfIdentityErrors:
          type: array
          items:
            type: string
            enum:
              - qualityIsNotSufficient
              - documentIsNotAccepted
              - documentIsNotPresented
              - atLeastOneFieldCouldNotBeRead
              - documentIsExpired
              - couldNotReadExpiryDate
              - documentHasNoExpiryDate
              - issueDateDoesNotMatchRequirements
              - couldNotReadIssueDate
              - documentHasNoIssueDate
              - someMrzElementsAreNotValid
              - couldNotReadMrz
              - documentHasNoMrz
              - someElementsBetweenVisualZoneAndMrzDoNotMatch
              - documentIsProbablyAFakeOrAPhotocopy
              - couldNotTakeADecision
              - documentHasNoOpticallyVariableElementsToBeChecked
              - documentDoesNotMatchTemplate
              - documentCannotBeProcessed
              - documentHasNoBackSide
              - mtlsDocumentIsNotAccepted
              - mtlsDocumentScoreNotSufficientToDecide
      x-stoplight:
        id: 4zv4izg5fessc
    proofOfResidenceMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESIDENCE documents
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        contractNumber:
          type: string
        contractType:
          type: string
        country:
          type: string
        emissionDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        zipcode:
          type: string
      x-stoplight:
        id: 4aehfxo7ig3yu
    proofOfResourcesMetadata:
      type: object
      description: Document metadatas for PROOF_OF_RESOURCES documents
      properties:
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        resourceAmount:
          type: string
      x-stoplight:
        id: ydclkfuxxvqkt
    proofOfTaxationMetadata:
      type: object
      description: Document metadatas for PROOF_OF_TAXATION documents
      properties:
        deliveryDate:
          type: string
          format: date
        firstName:
          type: string
        lastName:
          type: string
        personTitle:
          type: string
          enum:
            - MR
            - MS
            - MRS
        taxAmount:
          type: string
        taxNumber:
          type: string
      x-stoplight:
        id: j93z9x2ek2tys
    signatureMetadata:
      type: object
      description: Document metadatas for SIGNATURE documents
      properties:
        identitySignatureMatch:
          type: string
      x-stoplight:
        id: tig43gz028dhj
    AccountStatus:
      type: string
      description: The account status
      readOnly: true
      enum:
        - OPENED
        - CLOSED
        - BLOCKED
        - DEBIT_BLOCKED
        - CREDIT_BLOCKED
      x-stoplight:
        id: r9trnph0tc9go
    CardFeatureId:
      type: string
      description: |
        Feature Identitifier - Depends on product configuration
        - `NFC` : card can be used for contactless payment
        - `CASH_OPERATION` : card can be used to withdraw cash
        - `EUR_WITHDRAWAL` : card can be used to withdraw cash in euro zone
        - `FOREIGN_WITHDRAWAL` : card can be used to withdraw cash in foreign countries
        - `PAYMENT_AUTHORIZED` : card can be used to pay
        - `EUR_PAYMENT` : card can be used to pay in euro zone
        - `FOREIGN_PAYMENT` : card can be used to pay in foreign countries
        - `FOREIGN_ALL` : card can be used to pay or withdraw cash in foreign countries
        - `ONLINE_PAYMENT` : card can be used to pay online
        - `FOREIGN_ONLINE_PAYMENT` : card can be used to pay online in foreign countries
      enum:
        - NFC
        - CASH_OPERATION
        - EUR_WITHDRAWAL
        - FOREIGN_WITHDRAWAL
        - PAYMENT_AUTHORIZED
        - EUR_PAYMENT
        - FOREIGN_PAYMENT
        - FOREIGN_ALL
        - ONLINE_PAYMENT
        - FOREIGN_ONLINE_PAYMENT
      x-stoplight:
        id: zzo5x14g0c0qb
    Gender:
      type: string
      enum:
        - MALE
        - FEMALE
        - NONE
      x-stoplight:
        id: 32w8g2a5vm6p2
    PrinterType:
      type: string
      enum:
        - MobiPrint
        - Android
        - IWL
        - TJC
      x-stoplight:
        id: myfcofg42okz8
    ApiScript:
      type: string
      enum:
        - tpagent
        - tpaudit
        - tpbillerlist
        - tpblockclient
        - tpcash2cash
        - tpcredit
        - tpdebit
        - tpdeposittrf
        - tpenrollment
        - tpgetcode
        - tpgift
        - tphistory
        - tpmarker
        - tppaybill
        - tppincode
        - tpreversal
        - tpstatus
        - tpstorder
        - tpterminal
        - tpverify
      x-stoplight:
        id: eo8km0u41rigu
    ApiAuthMode:
      type: string
      enum:
        - no_pin
        - pin
        - pinblock
        - check
        - trxCode
      x-stoplight:
        id: pjg14hcsia8ka
    AbstractInput:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          description: the identification key of the Input. Use that ID as object key in form submission.
          example: lastName
        type:
          $ref: '#/components/schemas/InputType'
        label:
          type: string
          description: Displayable Input label
          example: Last Name
        description:
          type: string
          description: A potentially long description of the input content
          example: Enter your last name
        required:
          type: boolean
          description: 'If true, an input value must be provided on form submission'
        validators:
          type: array
          items:
            $ref: '#/components/schemas/Validator'
        disabled:
          type: boolean
          default: false
          description: 'If true, this input cannot be change'
      x-stoplight:
        id: yr6eutgpynt99
    Periodicity:
      description: Available periodicities
      type: string
      enum:
        - HOUR
        - WEEK
        - DAY
        - MONTH
        - YEAR
      example: DAY
      x-stoplight:
        id: 66oxshema9vrs
    AbstractFileInput:
      allOf:
        - $ref: '#/components/schemas/AbstractInput'
        - type: object
          properties:
            maxSize:
              type: integer
              description: 'Maximum allowed file size, in bytes'
            acceptedTypes:
              type: array
              description: Accepted file types list as MIME types
              items:
                type: string
              example:
                - text/plain
                - text/csv
                - application/vnd.ms-excel
                - image/png
            minimumPageCount:
              type: integer
              description: Expected minimum page count
            maximumPageCount:
              type: integer
              description: Expected maximum page count
      x-stoplight:
        id: 0gqwfg3azjaxf
    Option:
      type: object
      required:
        - id
        - label
      properties:
        id:
          type: string
          example: someValue
        label:
          type: string
          example: Label for someValue
      x-stoplight:
        id: vtdqvotc7q772
    OptionWithAmount:
      allOf:
        - $ref: '#/components/schemas/Option'
        - type: object
          required:
            - amount
          properties:
            amount:
              $ref: '#/components/schemas/Amount'
      x-stoplight:
        id: drujxrzkst0cs
    Address:
      type: object
      properties:
        addressLine:
          type: string
          example: 98 rue Clément
        country:
          type: string
          example: FR
        city:
          type: string
          example: Paris
        zipcode:
          type: string
          example: '75018'
        region:
          type: string
        district:
          type: string
        province:
          type: string
      x-stoplight:
        id: 5zsc2vzjyfxij
    GeoLocationMode:
      type: object
      properties:
        value:
          type: string
        label:
          type: string
      x-stoplight:
        id: 32wam62otn452
    IdentityRelation:
      type: object
      description: A relation between Identities
      required:
        - type
      properties:
        fromIdentityId:
          $ref: '#/components/schemas/IdentityId'
        toIdentityId:
          $ref: '#/components/schemas/IdentityId'
        nature:
          $ref: '#/components/schemas/IdentityRelationNature'
      x-stoplight:
        id: fi6g1ixfkjk46
    Value:
      type: object
      anyOf:
        - type: object
          title: List value
          properties:
            code:
              type: string
              example: MARRIED
            value:
              type: object
              additionalProperties:
                type: string
                description: the locale of the value
              example:
                fr_FR: Married
                en_US: Marié
            rating:
              type: integer
              example: 200
        - type: object
          title: Boolean value
          properties:
            value:
              type: boolean
              example: true
            rating:
              type: integer
              example: -10
        - type: object
          title: Integer value
          properties:
            min:
              type: integer
              example: -50
            max:
              type: integer
              example: 150
            rating:
              type: integer
              example: 20
        - type: object
          title: Float value
          properties:
            min:
              type: number
              format: float
              example: 12.5
            max:
              type: number
              format: float
              example: 15.9
            rating:
              type: integer
              example: 25
        - type: object
          title: Duration value
          properties:
            min:
              type: integer
              minimum: 0
              example: 5
            max:
              type: integer
              minimum: 0
              example: 25
            duration_type:
              type: string
              enum:
                - day
                - month
                - year
            rating:
              type: integer
              example: -20
      x-stoplight:
        id: a8cbx05sd549i
    SpendingDetailId:
      type: string
      description: Spending detail unique identifier
      readOnly: true
      example: SPD123
      x-stoplight:
        id: z3qr2y4y5w0xk
    BaseSpendingCategory:
      type: object
      readOnly: true
      required:
        - id
        - label
      properties:
        id:
          $ref: '#/components/schemas/ReadOnlySpendingCategoryId'
        label:
          type: string
          readOnly: true
      x-stoplight:
        id: 1c2yc6d30ym92
    SpendingsAdditionalDataKey:
      type: string
      description: Additional data key
      x-stoplight:
        id: dw3ee4eyej6hm
    HttpHeader:
      type: object
      properties:
        name:
          type: string
          example: Accept
        value:
          type: array
          items:
            type: string
            examples:
              - json: application/json
              - plain-text: text/plain
      x-stoplight:
        id: nepfh1dmhxon5
    InputType:
      type: string
      enum:
        - TEXT
        - COLLECTION
        - AMOUNT
        - BOOL
        - DATE
        - DATE_TIME
        - DURATION
        - EMAIL
        - FILE
        - FILE_CONTENT
        - IMAGE
        - INT
        - IP
        - MULTI_SELECT
        - NUMBER
        - PASSWORD
        - PERCENT
        - PHONE
        - PINCODE
        - RATE
        - SELECT
        - SELECT_WITH_AMOUNT
      x-stoplight:
        id: zwzo3xmsxyfb2
    Validator:
      oneOf:
        - $ref: '#/components/schemas/AmountValidator'
        - $ref: '#/components/schemas/MinValidator'
        - $ref: '#/components/schemas/MaxValidator'
        - $ref: '#/components/schemas/BetweenValidator'
        - $ref: '#/components/schemas/BlacklistValidator'
        - $ref: '#/components/schemas/WhitelistValidator'
        - $ref: '#/components/schemas/LengthValidator'
        - $ref: '#/components/schemas/MaxLengthValidator'
        - $ref: '#/components/schemas/MinLengthValidator'
        - $ref: '#/components/schemas/PasswordValidator'
        - $ref: '#/components/schemas/RegexValidator'
      discriminator:
        propertyName: type
        mapping:
          AMOUNT: '#/components/schemas/AmountValidator'
          MIN: '#/components/schemas/MinValidator'
          MAX: '#/components/schemas/MaxValidator'
          BETWEEN: '#/components/schemas/BetweenValidator'
          BLACKLIST: '#/components/schemas/BlacklistValidator'
          WHITELIST: '#/components/schemas/WhitelistValidator'
          LENGTH: '#/components/schemas/LengthValidator'
          MAX_LENGTH: '#/components/schemas/MaxLengthValidator'
          MIN_LENGTH: '#/components/schemas/MinLengthValidator'
          PASSWORD: '#/components/schemas/PasswordValidator'
          REGEX: '#/components/schemas/RegexValidator'
      x-stoplight:
        id: 4v4fp6fchqn40
    IdentityRelationNature:
      type: string
      description: Nature of the relation between Identities
      example: BOARD_MEMBER
      x-stoplight:
        id: h462jblcpnxgz
    ReadOnlySpendingCategoryId:
      allOf:
        - $ref: '#/components/schemas/SpendingCategoryId'
        - readOnly: true
      x-stoplight:
        id: b57xtw4bpza87
    AmountValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - currencies
          properties:
            currencies:
              type: array
              items:
                $ref: '#/components/schemas/Currency'
      x-stoplight:
        id: dzl05fd9pjg90
    MinValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - min
          properties:
            min:
              type: number
      x-stoplight:
        id: hy83u7bfp1jsl
    MaxValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - max
          properties:
            max:
              type: number
      x-stoplight:
        id: s8rdpu0km9y9t
    BetweenValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - min
            - max
          properties:
            min:
              type: number
            max:
              type: number
      x-stoplight:
        id: 07agwoq47dapa
    BlacklistValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - blacklist
          properties:
            blacklist:
              type: array
              items:
                type: string
      x-stoplight:
        id: 16are15gfrju2
    WhitelistValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - whitelist
          properties:
            whitelist:
              type: array
              items:
                type: string
      x-stoplight:
        id: wqenmxgu24hcq
    LengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - length
          properties:
            length:
              type: integer
      x-stoplight:
        id: zr8tf6r0oi3ts
    MaxLengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - maxLength
          properties:
            maxLength:
              type: integer
      x-stoplight:
        id: tj2u3gxm18vmk
    MinLengthValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - minLength
          properties:
            minLength:
              type: integer
      x-stoplight:
        id: a2mmto31kbzmp
    PasswordValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          properties:
            minLength:
              type: integer
            regexp:
              type: string
              description: regexp in PCRE format. Password must match this regexp
            forbidRegex:
              type: string
              description: regexp in PCRE format. Password must not match this regexp
            forbidDates:
              type: boolean
              description: 'if true, you cannot choose a date as a password'
            blacklist:
              type: array
              description: list of forbidden passwords
              example:
                - azerty
                - qwerty
                - '123456'
                - password
              items:
                type: string
      x-stoplight:
        id: 9n0qcorhxc6ll
    RegexValidator:
      allOf:
        - $ref: '#/components/schemas/AbstractValidator'
        - type: object
          required:
            - regex
          properties:
            regex:
              type: string
              description: regexp in PCRE format. Value must match this regexp
      x-stoplight:
        id: xqxy5p4507z61
    SpendingCategoryId:
      type: string
      description: Spending category identifier
      example: FOOD
      x-stoplight:
        id: sufdhbhbrul4s
    AbstractValidator:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ValidatorType'
      x-stoplight:
        id: m2etbzvwmwza0
    ValidatorType:
      type: string
      enum:
        - AMOUNT
        - MIN
        - MAX
        - BETWEEN
        - BLACKLIST
        - LENGTH
        - MAX_LENGTH
        - MIN_LENGTH
        - PASSWORD
        - REGEX
        - WHITELIST
      x-stoplight:
        id: br532566lqgj5
